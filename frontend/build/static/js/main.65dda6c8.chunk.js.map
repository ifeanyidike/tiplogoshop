{"version":3,"sources":["styles/breakpoints.js","styles/HeaderStyle.js","animationVariants/HeaderVariants.js","redux/constants/userConstants.js","redux/constants/cardOrderConstants.js","redux/constants/soldCardConstants.js","redux/actions/soldCardActions.js","redux/constants/cardConstants.js","redux/constants/utilConstants.js","redux/actions/utilActions.js","redux/actions/cardActions.js","redux/actions/cardOrderActions.js","redux/constants/changeOfCourseConstants.js","redux/actions/changeOfCourseActions.js","redux/constants/oLevelResultUploadConstants.js","redux/actions/oLevelResultUploadActions.js","redux/constants/jambPasswordResetConstants.js","redux/actions/jambPasswordResetActions.js","redux/actions/userActions.js","components/MainHeader.js","styles/TestimonialStyle.js","styles/HomeStyle.js","styles/globalStyles.js","svg/wavebottom.js","styles/TabStyle.js","components/TabContainer/TabPanel.js","components/TabContainer/allProps.js","components/TabContainer/tabJsonAPI.js","components/TabContainer/TabChildren.js","components/TabContainer/index.js","components/Loaders/SimpleLoader.js","redux/constants/reviewConstants.js","components/Testimonial.js","redux/actions/reviewActions.js","svg/proctor.svg","animationVariants/HomeVariants.js","styles/CardStyle.js","components/Cards/TopCard.js","animationVariants/CardVariants.js","components/JsonAPIs.js","components/TopSection.js","components/Cards/AltCard.js","components/Message.js","components/LoadCards.js","components/Meta.js","pages/HomePage.js","styles/AuthStyle.js","components/Auth/Register.js","components/Auth/Facebook.js","components/Auth/SignIn.js","components/Auth/index.js","pages/AuthPage.js","styles/ServiceStyle.js","components/Services/BaseRoot.js","components/Services/ServicesItems.js","components/Services/JambServiceHowTo.js","pages/AllServicesPage.js","styles/AdminStyles.js","styles/ProfileStyle.js","styles/ModalStyle.js","components/Utils/NotLoggedIn.js","components/Utils/MessageModal.js","components/Profile/Edits.js","components/Profile/ProfileFixedHeaderTable.js","components/Profile/MyCardOrders.js","components/Profile/MyResultUploadOrders.js","components/Profile/MyJambPasswordReset.js","components/Profile/MyChangeOfCourseOrders.js","components/Profile/Review.js","components/Profile/TabIndex.js","components/Payment/PayStack.js","components/Payment/Flutterwave.js","components/Utils/Wallet.js","pages/ProfilePage.js","components/Loaders/LinearLoader.js","components/Services/Base.js","components/NumRange.js","components/Payment/PaymentMethods.js","components/Services/ChoosePayment.js","components/Services/ServiceHowTo.js","components/Services/BaseChildren.js","pages/CardPage.js","pages/AllCardsPage.js","components/Services/InstitutionChoices.js","redux/constants/serviceConstants.js","redux/actions/serviceActions.js","components/Services/ServiceAlert.js","components/Services/CourseChangeForm.js","components/Services/CourseChangeReview.js","components/Payment/PayStackServicesPayment.js","components/Payment/FlutterwaveServicesPayment.js","components/Services/ServicePayment.js","pages/ChangeOfCourseInstitutionPage.js","components/Services/EditCards.js","pages/EditItemPage.js","styles/TableStyle.js","components/Tables/CustomTable.js","components/Payment/PayStackCardPayment.js","components/Payment/FlutterwaveCardPayment.js","components/Payment/WalletPayment.js","pages/PayOrderPage.js","redux/constants/subjectConstants.js","components/Services/UploadChoices.js","components/Services/UploadEntry.js","components/Services/OLevelUploadForm.js","redux/actions/subjectActions.js","components/Services/OLevelUploadReview.js","pages/OLevelUploadPage.js","components/Services/JambPasswordResetForm.js","components/Services/JambPasswordResetReview.js","pages/JambPasswordResetPage.js","pages/ActivateAccount.js","pages/ResendEmail.js","pages/ForgotPassword.js","pages/ResetPassword.js","components/Admin/adminThemes.js","components/Admin/adminUtils.js","pages/Admin/Navigator.js","pages/Admin/Header.js","pages/Admin/Content.js","pages/Admin/Emails/EmailManager.js","pages/Admin/Emails/ManageEmails.js","pages/Admin/TableContent.js","pages/Admin/Users/UsersList.js","pages/Admin/Users/UserProfile.js","pages/Admin/Users/UsersMain.js","pages/Admin/Cards/CardsList.js","pages/Admin/Cards/FixedHeaderTable.js","pages/Admin/Cards/CardDetails.js","pages/Admin/Cards/CardsMain.js","pages/Admin/CardOrders/CardOrdersList.js","pages/Admin/CardOrders/CardOrderDetails.js","pages/Admin/CardOrders/CardOrdersMain.js","pages/Admin/ChangeOfCourse/ChangeOfCourseList.js","pages/Admin/ChangeOfCourse/ChangeOfCourseDetails.js","pages/Admin/ChangeOfCourse/ChangeOfCourseMain.js","pages/Admin/OLevelUpload/OLevelUploadList.js","pages/Admin/OLevelUpload/OLevelUploadDetails.js","pages/Admin/OLevelUpload/OLevelUploadMain.js","pages/Admin/JambPasswordReset/JambPasswordResetList.js","pages/Admin/JambPasswordReset/JambPasswordResetDetails.js","pages/Admin/JambPasswordReset/JambPasswordResetMain.js","pages/Admin/ServiceSettings/Services.js","redux/constants/schoolConstants.js","redux/actions/schoolActions.js","pages/Admin/ServiceSettings/FixedTable.js","pages/Admin/ServiceSettings/Schools.js","pages/Admin/ServiceSettings/Courses.js","pages/Admin/ServiceSettings/ServiceMain.js","styles/NotFoundStyles.js","pages/NotFoundPage.js","pages/UnauthorizedPage.js","styles/HelpStyles.js","redux/constants/contactConstants.js","pages/HelpPage.js","redux/actions/contactActions.js","styles/DrawerStyle.js","animationVariants/DrawerVariants.js","styles/SocialStyle.js","components/SocialNetworks.js","components/SideDrawer.js","styles/FooterStyle.js","components/Footer.js","styles/ScrollStyles.js","components/Utils/useWindowYOffset.js","components/ScrollButton.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/cardReducers.js","redux/reducers/soldCardReducers.js","redux/reducers/cardOrderReducers.js","redux/reducers/utilReducers.js","redux/reducers/userReducers.js","redux/reducers/schoolReducers.js","redux/reducers/serviceReducers.js","redux/reducers/changeOfCourseReducers.js","redux/reducers/oLevelResultUploadReducers.js","redux/reducers/jambPasswordResetReducers.js","redux/reducers/reviewReducers.js","redux/reducers/contactReducers.js","redux/reducers/subjectReducers.js","redux/store.js","index.js"],"names":["size","device","mobile_sm","mobile_md","mobile_lg","tablet_md","tablet","laptop","laptop_lg","desktop","desktopL","colors","Header","styled","div","HeaderRightItems","motion","Hamburger","img","headerRightVariants","hidden","rotate","scale","visible","transition","duration","headerTextVariants","initial","onHover","hamburgerVariants","hamburgerItemsVariants","opacity","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_CONFIRM_EMAIL_REQUEST","USER_CONFIRM_EMAIL_SUCCESS","USER_CONFIRM_EMAIL_FAIL","USER_RESEND_CODE_REQUEST","USER_RESEND_CODE_SUCCESS","USER_RESEND_CODE_FAIL","USER_FORGOT_PASSWORD_REQUEST","USER_FORGOT_PASSWORD_SUCCESS","USER_FORGOT_PASSWORD_FAIL","USER_PASSWORD_RESET_REQUEST","USER_PASSWORD_RESET_SUCCESS","USER_PASSWORD_RESET_FAIL","USER_PROFILE_PHOTO_REQUEST","USER_PROFILE_PHOTO_SUCCESS","USER_PROFILE_PHOTO_FAIL","WALLET_DEBIT_REQUEST","WALLET_DEBIT_SUCCESS","WALLET_DEBIT_FAIL","WALLET_DEBIT_RESET","WALLET_CREDIT_REQUEST","WALLET_CREDIT_SUCCESS","WALLET_CREDIT_FAIL","SET_PROFILE_IMAGE","USERS_LIST_REQUEST","USERS_LIST_SUCCESS","USERS_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_MAKEADMIN_REQUEST","USER_MAKEADMIN_SUCCESS","USER_MAKEADMIN_FAIL","USER_MAKEEDITOR_REQUEST","USER_MAKEEDITOR_SUCCESS","USER_MAKEEDITOR_FAIL","USER_EMAIL_REQUEST","USER_EMAIL_SUCCESS","USER_EMAIL_FAIL","USERS_EMAIL_REQUEST","USERS_EMAIL_SUCCESS","USERS_EMAIL_FAIL","USER_EMAIL_BY_EMAIL_REQUEST","USER_EMAIL_BY_EMAIL_SUCCESS","USER_EMAIL_BY_EMAIL_FAIL","WALLET_AMOUNT_REQUEST","WALLET_AMOUNT_SUCCESS","WALLET_AMOUNT_FAIL","CARD_ORDER_CREATE_REQUEST","CARD_ORDER_CREATE_SUCCESS","CARD_ORDER_CREATE_FAIL","CARD_ORDER_CREATE_RESET","CARD_ORDER_DETAILS_REQUEST","CARD_ORDER_DETAILS_SUCCESS","CARD_ORDER_DETAILS_FAIL","CARD_ORDER_PAY_REQUEST","CARD_ORDER_PAY_SUCCESS","CARD_ORDER_PAY_FAIL","CARD_ORDER_PAY_RESET","CARD_ORDER_DELIVER_REQUEST","CARD_ORDER_DELIVER_SUCCESS","CARD_ORDER_DELIVER_FAIL","CARD_ORDER_LIST_MY_REQUEST","CARD_ORDER_LIST_MY_SUCCESS","CARD_ORDER_LIST_MY_FAIL","CARD_ORDER_LIST_MY_RESET","CARD_ORDER_UPDATE_REQUEST","CARD_ORDER_UPDATE_SUCCESS","CARD_ORDER_UPDATE_FAIL","CARD_ORDER_UPDATE_RESET","CARD_ORDER_LIST_REQUEST","CARD_ORDER_LIST_SUCCESS","CARD_ORDER_LIST_FAIL","CARD_NOTPAID_ORDER_LIST_MY_REQUEST","CARD_NOTPAID_ORDER_LIST_MY_SUCCESS","CARD_NOTPAID_ORDER_LIST_MY_FAIL","CARD_ORDER_DELETE_REQUEST","CARD_ORDER_DELETE_SUCCESS","CARD_ORDER_DELETE_FAIL","SOLD_CARD_CREATE_REQUEST","SOLD_CARD_CREATE_SUCCESS","SOLD_CARD_CREATE_FAIL","CARD_MY_REQUEST","CARD_MY_SUCCESS","CARD_MY_FAIL","createSoldCard","cardId","purchasedItems","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","userId","_id","axios","post","data","payload","response","message","CARD_LIST_REQUEST","CARD_LIST_SUCCESS","CARD_LIST_FAIL","CARD_LIST_FEW_REQUEST","CARD_LIST_FEW_SUCCESS","CARD_LIST_FEW_FAIL","CARD_DETAILS_REQUEST","CARD_DETAILS_SUCCESS","CARD_DETAILS_FAIL","CARD_DELETE_REQUEST","CARD_DELETE_SUCCESS","CARD_DELETE_FAIL","CARD_CREATE_REQUEST","CARD_CREATE_SUCCESS","CARD_CREATE_FAIL","CARD_CREATE_RESET","CARD_UPDATE_REQUEST","CARD_UPDATE_SUCCESS","CARD_UPDATE_FAIL","CARD_UPDATE_RESET","CARD_ITEM_DELIVER_REQUEST","CARD_ITEM_DELIVER_SUCCESS","CARD_ITEM_DELIVER_FAIL","CARD_ADD_ITEM_REQUEST","CARD_ADD_ITEM_SUCCESS","CARD_ADD_ITEM_FAIL","DRAWER_OPEN","DRAWER_CLOSE","MESSAGE_SET","MESSAGE_RESET","setMessage","listCards","keyword","pageNumber","get","listCardDetails","id","listFewCards","num","createCard","logout","deliverCardItems","numItems","orderId","patch","cardDeliverOrder","getCardOrderDetails","put","cardPayOrder","qty","paymentResult","listCardOrders","COCI_LIST_REQUEST","COCI_LIST_SUCCESS","COCI_LIST_FAIL","COCI_LIST_MY_REQUEST","COCI_LIST_MY_SUCCESS","COCI_LIST_MY_FAIL","COCI_DETAILS_REQUEST","COCI_DETAILS_SUCCESS","COCI_DETAILS_FAIL","COCI_DELETE_REQUEST","COCI_DELETE_SUCCESS","COCI_DELETE_FAIL","COCI_CREATE_REQUEST","COCI_CREATE_SUCCESS","COCI_CREATE_FAIL","COCI_CREATE_RESET","COCI_UPDATE_REQUEST","COCI_UPDATE_SUCCESS","COCI_UPDATE_FAIL","COCI_ITEM_DELIVER_REQUEST","COCI_ITEM_DELIVER_SUCCESS","COCI_ITEM_DELIVER_FAIL","COCI_BLOB_REQUEST","COCI_BLOB_SUCCESS","COCI_BLOB_FAIL","getChangeOfCourseBlob","Accept","responseType","file","Blob","fileURL","URL","createObjectURL","createChangeOfCourseOrder","order","getChangeOfCourseOrderDetailsById","listMyChangeOfCourseOrders","result","listChangeOfCourseOrders","OLEVEL_UPLOAD_LIST_REQUEST","OLEVEL_UPLOAD_LIST_SUCCESS","OLEVEL_UPLOAD_LIST_FAIL","OLEVEL_UPLOAD_LIST_MY_REQUEST","OLEVEL_UPLOAD_LIST_MY_SUCCESS","OLEVEL_UPLOAD_LIST_MY_FAIL","OLEVEL_UPLOAD_DETAILS_REQUEST","OLEVEL_UPLOAD_DETAILS_SUCCESS","OLEVEL_UPLOAD_DETAILS_FAIL","OLEVEL_UPLOAD_DELETE_REQUEST","OLEVEL_UPLOAD_DELETE_SUCCESS","OLEVEL_UPLOAD_DELETE_FAIL","OLEVEL_UPLOAD_CREATE_REQUEST","OLEVEL_UPLOAD_CREATE_SUCCESS","OLEVEL_UPLOAD_CREATE_FAIL","OLEVEL_UPLOAD_CREATE_RESET","OLEVEL_UPLOAD_UPDATE_REQUEST","OLEVEL_UPLOAD_UPDATE_SUCCESS","OLEVEL_UPLOAD_UPDATE_FAIL","OLEVEL_UPLOAD_ITEM_DELIVER_REQUEST","OLEVEL_UPLOAD_ITEM_DELIVER_SUCCESS","OLEVEL_UPLOAD_ITEM_DELIVER_FAIL","OLEVEL_UPLOAD_BLOB_REQUEST","OLEVEL_UPLOAD_BLOB_SUCCESS","OLEVEL_UPLOAD_BLOB_FAIL","createOlevelUploadOrder","orderItems","amount","paymentMethod","formData","FormData","console","log","subjectUpload","files","forEach","append","name","profileCode","schoolAttended","schoolType","JSON","stringify","status","update_time","email","getOlevelUploadOrderDetailsById","listMyOlevelUploadOrders","listOlevelUploadOrders","JAMB_PASSWORD_RESET_LIST_REQUEST","JAMB_PASSWORD_RESET_LIST_SUCCESS","JAMB_PASSWORD_RESET_LIST_FAIL","JAMB_PASSWORD_RESET_LIST_MY_REQUEST","JAMB_PASSWORD_RESET_LIST_MY_SUCCESS","JAMB_PASSWORD_RESET_LIST_MY_FAIL","JAMB_PASSWORD_RESET_DETAILS_REQUEST","JAMB_PASSWORD_RESET_DETAILS_SUCCESS","JAMB_PASSWORD_RESET_DETAILS_FAIL","JAMB_PASSWORD_RESET_DELETE_REQUEST","JAMB_PASSWORD_RESET_DELETE_SUCCESS","JAMB_PASSWORD_RESET_DELETE_FAIL","JAMB_PASSWORD_RESET_CREATE_REQUEST","JAMB_PASSWORD_RESET_CREATE_SUCCESS","JAMB_PASSWORD_RESET_CREATE_FAIL","JAMB_PASSWORD_RESET_CREATE_RESET","JAMB_PASSWORD_RESET_UPDATE_REQUEST","JAMB_PASSWORD_RESET_UPDATE_SUCCESS","JAMB_PASSWORD_RESET_UPDATE_FAIL","createJambPasswordResetOrder","getJambPasswordResetOrderDetailsById","listMyJambPasswordResetOrders","listJambPasswordResetOrders","normalConfig","getWalletAmount","emailAUser","emailMessage","getAUser","updateUser","user","localStorage","setItem","setUserImage","photoUrl","debitWallet","transactionType","transactionId","uuid","String","Date","getTime","price","removeItem","useStyles","makeStyles","theme","small","width","spacing","height","MainHeader","setShowDrawer","classes","location","useLocation","history","useHistory","useDispatch","path","pathname","imageUrl","useSelector","state","photo","useEffect","variants","animate","whileHover","onClick","document","querySelectorAll","link","ind","style","animation","className","to","src","alt","li","fontWeight","push","isAdmin","isEditor","Avatar","profile","picture","TestimonialContainer","HomeTopContainer","HomeTabContainer","HomeAltCardContainer","HomeTestimonialContainer","ScreenDiv","Image","props","variant","Button","button","Divider","createGlobalStyle","hr","Wavebottom","xmlns","viewBox","enable-background","d","fill","transform","TabContainer","ChildContainer","TabPanel","children","value","index","other","role","aria-labelledby","Box","p","Typography","a11yProps","tabitems","heading","description","details","icon","head","desc","image","TabChildren","FullWidthTabs","firstChild","secondChild","thirdChild","fourthChild","useState","activeFirst","setActiveFirst","activeSecond","setActiveSecond","activeThird","setActiveThird","activeFourth","setActiveFourth","useTheme","setValue","Tabs","onChange","e","newValue","indicatorColor","textColor","aria-label","Tab","label","backgroundColor","axis","direction","onChangeIndex","TabItems","map","item","dir","detail","backdrop","zIndex","drawer","color","SimpleBackdrop","Backdrop","open","CircularProgress","progress","REVIEW_LIST_REQUEST","REVIEW_LIST_SUCCESS","REVIEW_LIST_FAIL","REVIEW_DETAILS_REQUEST","REVIEW_DETAILS_SUCCESS","REVIEW_DETAILS_FAIL","REVIEW_DETAILS_BY_USER_REQUEST","REVIEW_DETAILS_BY_USER_SUCCESS","REVIEW_DETAILS_BY_USER_FAIL","REVIEW_DELETE_REQUEST","REVIEW_DELETE_SUCCESS","REVIEW_DELETE_FAIL","REVIEW_CREATE_REQUEST","REVIEW_CREATE_SUCCESS","REVIEW_CREATE_FAIL","REVIEW_CREATE_RESET","REVIEW_UPDATE_REQUEST","REVIEW_UPDATE_SUCCESS","REVIEW_UPDATE_FAIL","REVIEW_UPDATE_RESET","Testimonial","perPage","reviewList","loading","error","reviews","naturalSlideWidth","naturalSlideHeight","totalSlides","length","visibleSlides","infinite","isIntrinsicHeight","review","Rating","defaultValue","precision","readOnly","substring","fromCharCode","fontSize","buttonVariants","x","originX","delay","topCardVariants","CardContainer","TopCardPane","bcolor","TopCard","title","href","firstCardContainerVariants","y","secondCardContainerVariants","thirdCardContainerVariants","fourthCardContainerVariants","topcard_features","TopSection","examPerson","smooth","AltCard","anchor","loc","Alert","elevation","Message","severity","defaultProps","LoadCards","cards","chooseVariant","chooseColor","feature","upload","Meta","keywords","Helmet","content","HomePage","scroll","scrollToTop","cardListFew","cardsLoading","cardsError","Fragment","window","innerWidth","parseInt","AuthMainContainer","AuthTabContainer","AuthButton","FacebookButton","EmailConfirmation","PasswordResetContainer","ResetButton","Register","userRegister","password","showPassword","confirmPassword","showConfirmPassword","values","setValues","handleChange","prop","event","target","handleMouseDownPassword","preventDefault","mt","mb","gutterBottom","autoComplete","onSubmit","Grid","container","xs","TextField","required","fullWidth","InputProps","startAdornment","InputAdornment","position","endAdornment","IconButton","onMouseDown","Facebook","clicked","setClicked","appId","autoLoad","fields","callback","userID","accessToken","textButton","ConfirmLink","SignIn","includes","textAlign","textDecoration","root","Auth","signInActive","setSignInActive","signUpActive","setSignUpActive","borderStyle","newVal","borderLeft","borderBottom","borderRight","AuthPage","numCircle","BaseContainer","NumRangeContainer","numrangeDim","BackButton","NextButton","PayButton","customsize","EditButton","CardMoreContainer","ServicesContainer","ServiceTypeContainer","ServicesCard","ServicePanel","ListFeatureElement","NoMarginBackButton","ButtonGroup","ButtonSingle","ServiceAlertContainer","Base","TopImage","topText","ServicesItems","JambServiceHowTo","displayType","thousandSeparator","prefix","renderText","AllServices","changeOfCourseOrderCreate","cocLoading","cocError","cocSuccess","success","oLevelUploadOrderCreate","oluLoading","oluError","oluSuccess","jambPasswordResetOrderCreate","jprLoading","jprError","jprSuccess","walletDebit","walletLoading","walletError","BaseRoot","UserProfileContainer","AdminButton","AdminButtonAlt","AdminButtonPro","AdminHeader","header","DrawerContainer","RightAlign","AdminPrice","SchoolsOverviewContainer","ProfileContainer","ProfileButton","ProfileButtonAlt","WalletContainer","WalletButton","mh","ml","mr","ItemOverviewMain","ItemOverviewContainer","ReviewContainer","form","ReviewedOverlay","Modal","NotLoggedIn","modal","display","alignItems","justifyContent","paper","palette","background","border","boxShadow","shadows","padding","TransitionsModal","setOpen","caption","aria-describedby","onClose","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","Edits","openPass","setOpenPass","openMessage","setOpenMessage","userUpdate","address","phoneNo","FormControl","InputLabel","htmlFor","OutlinedInput","disabled","placeholder","labelWidth","edge","Object","some","maxHeight","StickyHeadTable","columns","rows","admin_upload","orderHeaders","React","page","setPage","rowsPerPage","setRowsPerPage","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","align","minWidth","TableBody","slice","row","cursor","hover","tabIndex","format","download","rel","createdAt","toDateString","code","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","MyCardOrders","itemId","queryString","parse","search","cardOrderListMy","orders","cardOrderDetails","detailLoading","Card","CardContent","card","isPaid","isDelivered","paidAt","deliveredAt","updatedAt","pin","serialNo","MyResultUploadOrders","oLevelUploadOrderListMy","oLevelUploadOrderDetails","MyJambPasswordReset","jambPasswordResetOrderDetails","jambPasswordResetOrderListMy","dateOfBirth","newPassword","MyChangeOfCourseOrders","changeOfCourseOrderListMy","changeOfCourseOrderDetails","fullName","otp","regNo","choices","choice","course","institution","preferredProgramme","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","Review","setHover","setDescription","reviewCreate","reviewDetailsByUser","loadingUser","createReview","val","onChangeActive","newHover","TextareaAutosize","rowsMin","activeFifth","setActiveFifth","activeSixth","setActiveSixth","PayStackPayment","onSuccess","simple","key","setKey","clientKey","getKey","reference","publicKey","PayStackHooks","initializePayment","usePaystackPayment","ref","App","service","public_key","tx_ref","now","currency","payment_options","customer","phonenumber","phoneNumber","customizations","logo","handleFlutterPayment","useFlutterwave","Wallet","pay","setPay","lowAmount","setLowAmount","setAmount","wallet","userWalletAmount","trxref","method","creditWallet","toFixed","margin","PayStack","ProfilePage","setUpload","profilePhoto","photoLoading","filesLimit","clearOnUnmount","onSave","newUserInfo","setProfilePhoto","submitButtonText","acceptedFiles","showPreviews","maxFileSize","LinearDeterminate","setProgress","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","LinearProgress","cardLoading","cardError","bgHeight","NumRange","setNum","setPrice","limit","max","newNum","PaymentMethods","FormLabel","RadioGroup","FormControlLabel","control","Radio","ChoosePayment","baseAmount","paymentMeans","setPaymentMeans","insufficientAmount","setInsufficientAmount","outOfStock","setOutOfStock","cardOrderCreate","createLoading","createSuccess","createError","cardDetails","balance","items","createCardOrder","ServiceHowTo","BaseChildren","availability","totalCost","setTotalCost","CardPage","scrollTo","expirationTime","jwt_decode","exp","splittedPath","split","countInStock","AllCardsPage","cardList","formControl","selectEmpty","marginTop","InstitutionChoice","stage","programme","setProgramme","setInstitution","setCourse","schools","setSchools","courses","setCourses","tempInstitution","setTempInstitution","select","onProgrammeChange","SelectProps","native","helperText","selectedIndex","selectedText","text","onInstitutionChange","school","SERVICE_CREATE_REQUEST","SERVICE_CREATE_SUCCESS","SERVICE_CREATE_FAIL","SERVICE_UPDATE_REQUEST","SERVICE_UPDATE_SUCCESS","SERVICE_UPDATE_FAIL","SERVICE_DETAILS_REQUEST","SERVICE_DETAILS_SUCCESS","SERVICE_DETAILS_FAIL","SERVICE_BY_NAME_REQUEST","SERVICE_BY_NAME_SUCCESS","SERVICE_BY_NAME_FAIL","SERVICE_LIST_REQUEST","SERVICE_LIST_SUCCESS","SERVICE_LIST_FAIL","listServiceByName","ServiceAlert","CourseChangeForm","setType","setName","setProfileCode","OTP","setOTP","setRegNo","activeStep","setActiveStep","moreInfo","setMoreInfo","toggleType","setToggleType","OTPStatus","setOTPStatus","serviceByName","cost","Checkbox","checked","NativeSelect","inputProps","TrendingFlat","FormHelperText","Input","ExitToApp","Code","LockOpen","InstitutionChoices","listItem","total","CourseChangeReview","List","ListItem","ListItemText","primary","secondary","first","second","third","fourth","PayStackCardPayment","FlutterwaveCardPayment","transaction_id","closePaymentModal","ServicePayment","serviceOrder","setPaymentMethod","stepper","steps","ChangeOfCourseInstitution","Stepper","Step","StepLabel","EditCards","cardObj","orderLoading","orderError","TablePane","StyledTableCell","withStyles","common","white","tableContainer","maxWidth","StyledTableRow","action","table","fontFamily","CustomizedTables","createData","scope","orderitem","WalletPayment","handleWalletPay","PayOrder","cardOrderPay","payError","payLoading","paySuccess","SUBJECT_CREATE_REQUEST","SUBJECT_CREATE_SUCCESS","SUBJECT_CREATE_FAIL","SUBJECT_LIST_REQUEST","SUBJECT_LIST_SUCCESS","SUBJECT_LIST_FAIL","UploadChoices","options","SubjectOptions","subjectList","subjects","subject","GradeOptions","ExamTypeOptions","UploadEntry","entryState","setEntryState","grade","examNumber","examType","OLevelUploadForm","entries","setEntries","schoollAttended","setSchoolAttended","setSchoolType","noFiles","setNoFiles","Fab","extendedIcon","fifth","sixth","seventh","eighth","nineth","OLevelUploadReview","lastModified","firstEntry","setFirstEntry","secondEntry","setSecondEntry","thirdEntry","setThirdEntry","fourthEntry","setFourthEntry","fifthEntry","setFifthEntry","sixthEntry","setSixthEntry","seventhEntry","setSeventhEntry","eighthEntry","setEighthEntry","ninethEntry","setNinethEntry","manualEntries","setManualEntries","setEmail","setDateOfBirth","setPassword","setConfirmPassword","setShowPassword","setShowConfirmPassword","passwordMismatch","setPasswordMismatch","utils","MomentUtils","DatePicker","date","tabindex","_d","JambPasswordReset","JambPasswordResetForm","JambPasswordResetReview","ActivateAccount","activateAccount","accountActivate","ResendEmail","emailResend","resendConfirmationEmail","ForgotPassword","passwordForgot","forgotPassword","ResetPassword","passwordReset","resetPassword","lightColor","themePart","createMuiTheme","light","main","dark","typography","h5","letterSpacing","shape","borderRadius","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","textTransform","contained","MuiTabs","marginLeft","indicator","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","marginRight","MuiAvatar","flexShrink","app","flex","flexDirection","footer","overflow","searchBar","searchInput","block","addUser","contentWrapper","secondaryBar","menuButton","iconButtonAvatar","borderColor","categoryHeader","paddingTop","paddingBottom","categoryHeaderPrimary","itemCategory","firebase","itemActiveItem","itemPrimary","itemIcon","divider","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","useTableStyles","marginBottom","visuallyHidden","clip","top","categories","descendingComparator","b","orderBy","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableHead","headCells","onSelectAllClick","numSelected","rowCount","onRequestSort","indeterminate","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","Navigator","Drawer","clsx","ListItemIcon","childId","onDrawerToggle","AppBar","Toolbar","Hidden","smUp","Link","Tooltip","Paperbase","TabContent","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","implementation","PaperProps","xsDown","EmailManager","singleEmailSubject","setSingleEmailSubject","singleEmailBody","setSingleEmailBody","multipleEmailSubject","setMultipleEmailSubject","multipleEmailBody","setMultipleEmailBody","userEmailByEmail","usersEmail","emailsLoading","messageAll","emailAUserByEmail","ManageEmails","Content","EnhancedTableToolbar","handleOverview","EnhancedTable","displayArr","showUser","showCost","setOrder","setOrderBy","selected","setSelected","dense","setDense","setItemId","emptyRows","isItemSelected","indexOf","labelId","newSelected","concat","handleClick","aria-checked","hasOwnProperty","isArray","colSpan","Switch","UsersList","usersList","users","getAnItem","UserProfile","deletePrompt","setDeletePrompt","setIsAdmin","setIsEditor","listMyCards","listMyNotPaidCardOrders","userList","cardMy","cardOrders","cardMyOrderNotPaidList","cocOrders","olruOrders","jprOrders","deleteLoading","userMakeAdmin","userMakeEditor","userDelete","confirmed","admin","replace","l","toUpperCase","adminStatus","editorStatus","delete","Users","CardsList","cardCreate","createdCard","CardDetails","updateLoading","cardUpdate","addLoading","cardAddItem","setPin","setSerialNo","setToken","addPrompt","setAddPrompt","isEmpty","obj","onValueChange","updateCard","Cards","cardOrderList","CardOrderDetails","deleteCardOrder","CardOrders","CardOrdersList","ChangeOfCourseList","changeOfCourseOrderList","ChangeOfCourseDetails","setSubject","emailBody","setEmailBody","userEmail","emailLoading","adminChangeOfCourseUpload","OLevelUploadList","oLevelUploadOrderList","OLevelUploadDetails","adminOlevelFileUpload","jambPasswordResetOrderList","JambPasswordResetList","JambPasswordResetDetails","Services","serviceValue","setServiceValue","serviceList","services","serviceUpdate","updateError","serviceDetails","newService","servicesToUpdate","filter","serviceToUpdate","updateService","SCHOOL_CREATE_REQUEST","SCHOOL_CREATE_SUCCESS","SCHOOL_CREATE_FAIL","SCHOOL_UPDATE_REQUEST","SCHOOL_UPDATE_SUCCESS","SCHOOL_UPDATE_FAIL","SCHOOL_DETAILS_REQUEST","SCHOOL_DETAILS_SUCCESS","SCHOOL_DETAILS_FAIL","SCHOOL_BY_PROGRAMME_REQUEST","SCHOOL_BY_PROGRAMME_SUCCESS","SCHOOL_BY_PROGRAMME_FAIL","SCHOOL_LIST_REQUEST","SCHOOL_LIST_SUCCESS","SCHOOL_LIST_FAIL","COURSE_DELETE_REQUEST","COURSE_DELETE_SUCCESS","COURSE_DELETE_FAIL","listSchools","listSchoolDetailsById","updateSchool","Schools","schoolList","schoolCreate","Courses","courseToDelete","setCourseToDelete","multiLineCourses","setMultiLineCourses","schoolId","schoolDetails","handleCourseDelete","newCourses","prevCourse","newSchool","goldish","handleDeletePrompt","ServiceMain","NotFoundContainer","UnAuthorizedContainer","AccessButton","NotFoundPage","data-text","HelpContainer","HelpButtonPro","CONTACT_CREATE_REQUEST","CONTACT_CREATE_SUCCESS","CONTACT_CREATE_FAIL","CONTACT_CREATE_RESET","CONTACT_DETAILS_REQUEST","CONTACT_DETAILS_SUCCESS","CONTACT_DETAILS_FAIL","CONTACT_LIST_REQUEST","CONTACT_LIST_SUCCESS","CONTACT_LIST_FAIL","CONTACT_LIST_BY_EMAIL_REQUEST","CONTACT_LIST_BY_EMAIL_SUCCESS","CONTACT_LIST_BY_EMAIL_FAIL","CONTACT_DELETE_REQUEST","CONTACT_DELETE_SUCCESS","CONTACT_DELETE_FAIL","Help","purpose","setPurpose","contactCreate","contactMessage","contact","multiline","nav","DrawerContent","backdropVariant","drawerVariant","mainListVariants","when","Socials","custom","SocialNetworks","fbBool","twBool","inBool","lnBool","ytBool","SideDrawer","drawerState","drawerToggle","exit","ul","FooterElement","Footer","hide","getFullYear","ScrollContainer","useWindowSize","setSize","useLayoutEffect","updateSize","pageYOffset","addEventListener","removeEventListener","ScrollButton","yOffset","useWindowYOffset","exact","HelpPage","ChangeOfCourseInstitutionPage","OLevelUploadPage","JambPasswordResetPage","AllServicesPage","UnauthorizedPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","pages","cardDelete","cardItemsDeliver","purchasedItem","soldCardCreate","cardOrderDelete","cardOrderUpdate","cardOrderDeliver","walletCredit","schoolByProgramme","schoolUpdate","courseDelete","serviceCreate","lorderItems","changeOfCourseOrderUpdate","changeOfCourseOrderDelete","changeOfCourseAdminUpload","changeOfCourseBlob","oLevelUploadOrderUpdate","oLevelUploadOrderDelete","oLevelUploadAdminUpload","oLevelUploadBlob","jambPasswordResetOrderUpdate","jambPasswordResetOrderDelete","reviewDetails","reviewDelete","reviewUpdate","contactDelete","contactDetails","contactListByEmail","contacts","contactList","subjectCreate","initialState","getItem","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.65dda6c8.chunk.js","sourcesContent":["export const size = {\n    mobile_sm: '320px',\n    mobile_md: '375px',\n    mobile_lg: '425px',\n    tablet_md: '540px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptop_lg: '1440px',\n    desktop: '2560px'\n  }\n  \n  \n  export const device = {\n    mobile_sm: `(max-width: ${size.mobile_sm})`,\n    mobile_md: `(max-width: ${size.mobile_md})`,\n    mobile_lg: `(max-width: ${size.mobile_lg})`,\n    tablet_md: `(max-width: ${size.tablet_md})`,\n    tablet: `(max-width: ${size.tablet})`,\n    laptop: `(max-width: ${size.laptop})`,\n    laptop_lg: `(max-width: ${size.laptop_lg})`,\n    desktop: `(max-width: ${size.desktop})`,\n    desktopL: `(max-width: ${size.desktop})`\n};\n\nexport const colors = {\n  darkbackground: \"#dcdcdd\",\n  background: '#F4F5F7' , // #EAE7DC\n  lightergray: '#DEEBFF',\n  lightgray: '#D8C3A5',\n  darkgray: '#8E8D8A',\n  lightred: '#E98074',\n  darkred: '#E85A4F',\n  darktext: '#253858', //#0B0C10\n  midtext: '#42526e',\n  bluetext: '#0065ff',\n  white: '#FFFFFF',\n  dimwhite: '#F4F4F4',\n  darkblue: '#172B4D',\n  lightgreen: '#79F2C0',\n  lightblue: '#0052CC',\n  goldish: '#FFC400',\n  facebookColor: \"#3B5998\"\n}\n\n","import styled from 'styled-components'\nimport { motion } from \"framer-motion\"\nimport { device, colors } from \"./breakpoints\"\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    padding: 10px 0;         \n    .logo{\n        height: 60px;\n        img{\n            height: 100%;\n        }\n    }   \n    @media ${device.tablet}{\n        margin-bottom: 10px;\n        justify-content: unset;\n        .svgDiv, .logo{\n            margin: 0 auto; \n        }\n        \n    }\n`\n\nexport const HeaderRightItems = styled(motion.div)`    \n    flex-grow: 0.7;\n    font-family: 'Jost', sans-serif;\n    ul{               \n        display: flex;\n        justify-content: flex-end;        \n        align-items: center;        \n        \n        li{\n            list-style:none;\n            margin-right: 30px;\n            a{\n                text-decoration: none;\n                color: ${colors.darktext};\n                &:hover{\n                    border-bottom: 2px solid ${colors.goldish};\n                    font-weight: bold;\n                }\n            }\n        }\n    }\n    \n    @media ${device.tablet}{\n        display:none;\n    }\n`\n\n\nexport const Image = styled.img`\n    max-width: 200px;    \n`\n\nexport const Hamburger = styled(motion.div)`\n    position: relative;\n    width: 40px;    \n    background-color: transparent;\n    align-self: flex-start;\n    padding-left: 30px;\n    div{\n        position: absolute;\n        width: 100%;\n        height: 3px;\n        background-color: ${colors.darktext};                \n    }\n    .line1{\n        top: 5px;\n    }\n    .line2{\n        top: 15px;\n    }\n    .line3{\n        top: 25px\n    }\n    \n    .avatar{\n        width: 12px !important;\n        height: 12px !important;\n    }\n    \n    @media ${device.desktop}{\n        display:none;\n    }\n    \n    @media ${device.tablet}{\n        display:block;\n    }    \n`\n","export const svgVariants = {\n    hidden: {rotate: 0, scale: 1.1},\n    visible: {\n      scale: 1,\n      rotate: [-5, 5, 0, 5, -5, 0],\n      transition: {\n        duration: 3\n      }\n    }\n  }\n  \n  export const pathVariants = {\n    hidden:{    \n      opacity: 0,\n      pathLength: 0\n    },\n    visible:{      \n      opacity: 1,\n      pathLength: 1,\n      transition:{\n        duration: 2,\n        ease: \"easeInOut\"\n      }\n    }\n  }\n  \n  export const headerRightVariants = {\n    hidden: {rotate: 0, scale: 1.1},\n    visible: {\n      scale: 1,\n      rotate: [-5, 5, 0],\n      transition: {        \n        duration: 1\n      }\n    }\n  }\n  \n  export const headerTextVariants = {\n    initial: { scale: 1},\n    onHover:{scale: 1.2}\n  }\n  \n  export const hamburgerVariants = {\n    hidden: {rotate: -60, scale: 2},\n    visible: {\n      scale: 1,\n      rotate: 0,\n      transition: {\n        duration: 1\n      }\n    },\n    onHover:{\n      scale: 1.1\n    }\n  }\n  \n  export const hamburgerItemsVariants = {\n    hidden: {rotate: 180, opacity: 0},\n    visible: {\n      opacity:1,\n      rotate: 0,\n      transition: {\n        duration: 1\n      }\n    }    \n  }","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\n\nexport const USER_CONFIRM_EMAIL_REQUEST = 'USER_CONFIRM_EMAIL_REQUEST'\nexport const USER_CONFIRM_EMAIL_SUCCESS = 'USER_CONFIRM_EMAIL_SUCCESS'\nexport const USER_CONFIRM_EMAIL_FAIL = 'USER_CONFIRM_EMAIL_FAIL'\n\nexport const USER_RESEND_CODE_REQUEST = 'USER_RESEND_CODE_REQUEST'\nexport const USER_RESEND_CODE_SUCCESS = 'USER_RESEND_CODE_SUCCESS'\nexport const USER_RESEND_CODE_FAIL = 'USER_RESEND_CODE_FAIL'\n\nexport const USER_FORGOT_PASSWORD_REQUEST = 'USER_FORGOT_PASSWORD_REQUEST'\nexport const USER_FORGOT_PASSWORD_SUCCESS = 'USER_FORGOT_PASSWORD_SUCCESS'\nexport const USER_FORGOT_PASSWORD_FAIL = 'USER_FORGOT_PASSWORD_FAIL'\n\nexport const USER_PASSWORD_RESET_REQUEST = 'USER_PASSWORD_RESET_REQUEST'\nexport const USER_PASSWORD_RESET_SUCCESS = 'USER_PASSWORD_RESET_SUCCESS'\nexport const USER_PASSWORD_RESET_FAIL = 'USER_PASSWORD_RESET_FAIL'\n\nexport const USER_PROFILE_PHOTO_REQUEST = 'USER_PROFILE_PHOTO_REQUEST'\nexport const USER_PROFILE_PHOTO_SUCCESS = 'USER_PROFILE_PHOTO_SUCCESS'\nexport const USER_PROFILE_PHOTO_FAIL = 'USER_PROFILE_PHOTO_FAIL'\n\nexport const WALLET_DEBIT_REQUEST = 'WALLET_DEBIT_REQUEST'\nexport const WALLET_DEBIT_SUCCESS = 'WALLET_DEBIT_SUCCESS'\nexport const WALLET_DEBIT_FAIL = 'WALLET_DEBIT_FAIL'\nexport const WALLET_DEBIT_RESET = 'WALLET_DEBIT_RESET'\n\nexport const WALLET_CREDIT_REQUEST = 'WALLET_CREDIT_REQUEST'\nexport const WALLET_CREDIT_SUCCESS = 'WALLET_CREDIT_SUCCESS'\nexport const WALLET_CREDIT_FAIL = 'WALLET_CREDIT_FAIL'\n\nexport const SET_PROFILE_IMAGE = 'SET_PROFILE_IMAGE'\n\nexport const USERS_LIST_REQUEST = 'USERS_LIST_REQUEST'\nexport const USERS_LIST_SUCCESS = 'USERS_LIST_SUCCESS'\nexport const USERS_LIST_FAIL = 'USERS_LIST_FAIL'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_MAKEADMIN_REQUEST = 'USER_MAKEADMIN_REQUEST'\nexport const USER_MAKEADMIN_SUCCESS = 'USER_MAKEADMIN_SUCCESS'\nexport const USER_MAKEADMIN_FAIL = 'USER_MAKEADMIN_FAIL'\n\nexport const USER_MAKEEDITOR_REQUEST = 'USER_MAKEEDITOR_REQUEST'\nexport const USER_MAKEEDITOR_SUCCESS = 'USER_MAKEEDITOR_SUCCESS'\nexport const USER_MAKEEDITOR_FAIL = 'USER_MAKEEDITOR_FAIL'\n\nexport const USER_EMAIL_REQUEST = 'USER_EMAIL_REQUEST'\nexport const USER_EMAIL_SUCCESS = 'USER_EMAIL_SUCCESS'\nexport const USER_EMAIL_FAIL = 'USER_EMAIL_FAIL'\n\nexport const USERS_EMAIL_REQUEST = 'USERS_EMAIL_REQUEST'\nexport const USERS_EMAIL_SUCCESS = 'USERS_EMAIL_SUCCESS'\nexport const USERS_EMAIL_FAIL = 'USERS_EMAIL_FAIL'\n\nexport const USER_EMAIL_BY_EMAIL_REQUEST = \"USER_EMAIL_BY_EMAIL_REQUEST\"\nexport const USER_EMAIL_BY_EMAIL_SUCCESS = \"USER_EMAIL_BY_EMAIL_SUCCESS\"\nexport const USER_EMAIL_BY_EMAIL_FAIL = \"USER_EMAIL_BY_EMAIL_FAIL\"\n\nexport const WALLET_AMOUNT_REQUEST = \"WALLET_AMOUNT_REQUEST\"\nexport const WALLET_AMOUNT_SUCCESS = \"WALLET_AMOUNT_SUCCESS\"\nexport const WALLET_AMOUNT_FAIL = \"WALLET_AMOUNT_FAIL\"","export const CARD_ORDER_CREATE_REQUEST = 'CARD_ORDER_CREATE_REQUEST'\nexport const CARD_ORDER_CREATE_SUCCESS = 'CARD_ORDER_CREATE_SUCCESS'\nexport const CARD_ORDER_CREATE_FAIL = 'CARD_ORDER_CREATE_FAIL'\nexport const CARD_ORDER_CREATE_RESET = 'CARD_ORDER_CREATE_RESET'\n\nexport const CARD_ORDER_DETAILS_REQUEST = 'CARD_ORDER_DETAILS_REQUEST'\nexport const CARD_ORDER_DETAILS_SUCCESS = 'CARD_ORDER_DETAILS_SUCCESS'\nexport const CARD_ORDER_DETAILS_FAIL = 'CARD_ORDER_DETAILS_FAIL'\n\nexport const CARD_ORDER_PAY_REQUEST = 'CARD_ORDER_PAY_REQUEST'\nexport const CARD_ORDER_PAY_SUCCESS = 'CARD_ORDER_PAY_SUCCESS'\nexport const CARD_ORDER_PAY_FAIL = 'CARD_ORDER_PAY_FAIL'\nexport const CARD_ORDER_PAY_RESET = 'CARD_ORDER_PAY_RESET'\n\nexport const CARD_ORDER_DELIVER_REQUEST = 'CARD_ORDER_DELIVER_REQUEST'\nexport const CARD_ORDER_DELIVER_SUCCESS = 'CARD_ORDER_DELIVER_SUCCESS'\nexport const CARD_ORDER_DELIVER_FAIL = 'CARD_ORDER_DELIVER_FAIL'\n\nexport const CARD_ORDER_LIST_MY_REQUEST = 'CARD_ORDER_LIST_MY_REQUEST'\nexport const CARD_ORDER_LIST_MY_SUCCESS = 'CARD_ORDER_LIST_MY_SUCCESS'\nexport const CARD_ORDER_LIST_MY_FAIL = 'CARD_ORDER_LIST_MY_FAIL'\nexport const CARD_ORDER_LIST_MY_RESET = 'CARD_ORDER_LIST_MY_RESET'\n\nexport const CARD_ORDER_UPDATE_REQUEST = 'CARD_ORDER_UPDATE_REQUEST'\nexport const CARD_ORDER_UPDATE_SUCCESS = 'CARD_ORDER_UPDATE_SUCCESS'\nexport const CARD_ORDER_UPDATE_FAIL = 'CARD_ORDER_UPDATE_FAIL'\nexport const CARD_ORDER_UPDATE_RESET = 'CARD_ORDER_UPDATE_RESET'\n\nexport const CARD_ORDER_LIST_REQUEST = 'CARD_ORDER_LIST_REQUEST'\nexport const CARD_ORDER_LIST_SUCCESS = 'CARD_ORDER_LIST_SUCCESS'\nexport const CARD_ORDER_LIST_FAIL = 'CARD_ORDER_LIST_FAIL'\n\nexport const CARD_NOTPAID_ORDER_LIST_MY_REQUEST = 'CARD_NOTPAID_ORDER_LIST_MY_REQUEST'\nexport const CARD_NOTPAID_ORDER_LIST_MY_SUCCESS = 'CARD_NOTPAID_ORDER_LIST_MY_SUCCESS'\nexport const CARD_NOTPAID_ORDER_LIST_MY_FAIL = 'CARD_NOTPAID_ORDER_LIST_MY_FAIL'\n\nexport const CARD_ORDER_DELETE_REQUEST = 'CARD_ORDER_DELETE_REQUEST'\nexport const CARD_ORDER_DELETE_SUCCESS = 'CARD_ORDER_DELETE_SUCCESS'\nexport const CARD_ORDER_DELETE_FAIL = 'CARD_ORDER_DELETE_FAIL'\n","export const SOLD_CARD_CREATE_REQUEST = 'SOLD_CARD_CREATE_REQUEST'\nexport const SOLD_CARD_CREATE_SUCCESS = 'SOLD_CARD_CREATE_SUCCESS'\nexport const SOLD_CARD_CREATE_FAIL = 'SOLD_CARD_CREATE_FAIL'\n\nexport const CARD_MY_REQUEST = \"CARD_MY_REQUEST\";\nexport const CARD_MY_SUCCESS = \"CARD_MY_SUCCESS\";\nexport const CARD_MY_FAIL = \"CARD_MY_FAIL\";","import axios from \"axios\"\nimport {\n    CARD_MY_FAIL,\n    CARD_MY_REQUEST,\n    CARD_MY_SUCCESS,\n    SOLD_CARD_CREATE_FAIL,\n    SOLD_CARD_CREATE_REQUEST,\n    SOLD_CARD_CREATE_SUCCESS,\n\n} from \"../constants/soldCardConstants\"\n\nexport const createSoldCard = (cardId, purchasedItems) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SOLD_CARD_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const userId = userInfo._id\n\n        const { data } = await axios.post(`/api/cards/sold/${cardId}/${userId}`,\n            { purchasedItems }, config)\n\n        dispatch({\n            type: SOLD_CARD_CREATE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: SOLD_CARD_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const listMyCards = (userId) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CARD_MY_REQUEST })\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/cards/sold/${userId}`, config)\n\n        dispatch({\n            type: CARD_MY_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: CARD_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}","export const CARD_LIST_REQUEST = \"CARD_LIST_REQUEST\";\nexport const CARD_LIST_SUCCESS = \"CARD_LIST_SUCCESS\";\nexport const CARD_LIST_FAIL = \"CARD_LIST_FAIL\";\n\nexport const CARD_LIST_FEW_REQUEST = \"CARD_LIST_FEW_REQUEST\";\nexport const CARD_LIST_FEW_SUCCESS = \"CARD_LIST_FEW_SUCCESS\";\nexport const CARD_LIST_FEW_FAIL = \"CARD_LIST_FEW_FAIL\";\n\nexport const CARD_DETAILS_REQUEST = \"CARD_DETAILS_REQUEST\";\nexport const CARD_DETAILS_SUCCESS = \"CARD_DETAILS_SUCCESS\";\nexport const CARD_DETAILS_FAIL = \"CARD_DETAILS_FAIL\";\n\nexport const CARD_DELETE_REQUEST = \"CARD_DELETE_REQUEST\";\nexport const CARD_DELETE_SUCCESS = \"CARD_DELETE_SUCCESS\";\nexport const CARD_DELETE_FAIL = \"CARD_DELETE_FAIL\";\n\nexport const CARD_CREATE_REQUEST = \"CARD_CREATE_REQUEST\";\nexport const CARD_CREATE_SUCCESS = \"CARD_CREATE_SUCCESS\";\nexport const CARD_CREATE_FAIL = \"CARD_CREATE_FAIL\";\nexport const CARD_CREATE_RESET = \"CARD_CREATE_RESET\";\n\nexport const CARD_UPDATE_REQUEST = \"CARD_UPDATE_REQUEST\";\nexport const CARD_UPDATE_SUCCESS = \"CARD_UPDATE_SUCCESS\";\nexport const CARD_UPDATE_FAIL = \"CARD_UPDATE_FAIL\";\nexport const CARD_UPDATE_RESET = \"CARD_UPDATE_RESET\";\n\nexport const CARD_ITEM_DELIVER_REQUEST = \"CARD_ITEM_DELIVER_REQUEST\";\nexport const CARD_ITEM_DELIVER_SUCCESS = \"CARD_ITEM_DELIVER_SUCCESS\";\nexport const CARD_ITEM_DELIVER_FAIL = \"CARD_ITEM_DELIVER_FAIL\";\n\nexport const CARD_ADD_ITEM_REQUEST = \"CARD_ADD_ITEM_REQUEST\";\nexport const CARD_ADD_ITEM_SUCCESS = \"CARD_ADD_ITEM_SUCCESS\";\nexport const CARD_ADD_ITEM_FAIL = \"CARD_ADD_ITEM_FAIL\";","export const DRAWER_OPEN = \"DRAWER_OPEN\";\nexport const DRAWER_CLOSE = \"DRAWER_CLOSE\";\n\nexport const MESSAGE_SET = \"MESSAGE_SET\"\nexport const MESSAGE_RESET = \"MESSAGE_RESET\"","import {\n    MESSAGE_SET\n} from \"../constants/utilConstants\"\n\nexport const toggleDrawer = () => async (dispatch) => {\n\n}\n\nexport const setMessage = (message) => dispatch => {\n    dispatch({\n        type: MESSAGE_SET,\n        payload: message\n    })\n}","import axios from 'axios'\nimport {\n  CARD_LIST_REQUEST,\n  CARD_LIST_SUCCESS,\n  CARD_LIST_FAIL,\n  CARD_DETAILS_REQUEST,\n  CARD_DETAILS_SUCCESS,\n  CARD_DETAILS_FAIL,\n  CARD_DELETE_SUCCESS,\n  CARD_DELETE_REQUEST,\n  CARD_DELETE_FAIL,\n  CARD_CREATE_REQUEST,\n  CARD_CREATE_SUCCESS,\n  CARD_CREATE_FAIL,\n  CARD_UPDATE_REQUEST,\n  CARD_UPDATE_SUCCESS,\n  CARD_UPDATE_FAIL,\n  CARD_LIST_FEW_REQUEST,\n  CARD_LIST_FEW_SUCCESS,\n  CARD_LIST_FEW_FAIL,\n  CARD_ITEM_DELIVER_REQUEST,\n  CARD_ITEM_DELIVER_SUCCESS,\n  CARD_ITEM_DELIVER_FAIL,\n  CARD_ADD_ITEM_SUCCESS,\n  CARD_ADD_ITEM_FAIL,\n  CARD_ADD_ITEM_REQUEST\n} from '../constants/cardConstants'\nimport { logout } from './userActions'\nimport { cardDeliverOrder } from \"./cardOrderActions\"\nimport { setMessage } from \"./utilActions\"\n\n\nexport const listCards = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: CARD_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/cards?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: CARD_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: CARD_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listCardDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: CARD_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/cards/${id}`)\n\n    dispatch({\n      type: CARD_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: CARD_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listFewCards = (num) => async (dispatch) => {\n  try {\n    dispatch({ type: CARD_LIST_FEW_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.get(`/api/cards/few/${num}`, config)\n\n    dispatch({\n      type: CARD_LIST_FEW_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: CARD_LIST_FEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteCard = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CARD_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/cards/${id}`, config)\n\n    dispatch({\n      type: CARD_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: CARD_DELETE_FAIL,\n      payload: message,\n    })\n    dispatch(setMessage(message))\n  }\n}\n\nexport const createCard = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CARD_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/cards`, {}, config)\n\n    dispatch({\n      type: CARD_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: CARD_CREATE_FAIL,\n      payload: message,\n    })\n    dispatch(setMessage(message))\n  }\n}\n\nexport const updateCard = (id, card) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CARD_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/cards/${id}`,\n      card,\n      config\n    )\n\n    dispatch({\n      type: CARD_UPDATE_SUCCESS,\n      payload: data,\n    })\n\n    dispatch(listCardDetails(id))\n    dispatch(setMessage(\"Card Updated Successfully\"))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: CARD_UPDATE_FAIL,\n      payload: message,\n    })\n    dispatch(setMessage(message))\n  }\n}\n\nexport const deliverCardItems = (\n  numItems,\n  id,\n  orderId\n) => async (\n  dispatch, getState\n) => {\n    try {\n      dispatch({ type: CARD_ITEM_DELIVER_REQUEST })\n\n      const {\n        userLogin: { userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n\n      const { data } = await axios.patch(\n        `/api/cards/${id}/items`, { numItems }, config\n      )\n\n      dispatch({\n        type: CARD_ITEM_DELIVER_SUCCESS,\n        payload: data,\n      })\n\n      if (data) {\n        dispatch(cardDeliverOrder(orderId, data.purchasedItems, id))\n      }\n\n    } catch (error) {\n      dispatch({\n        type: CARD_ITEM_DELIVER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\nexport const addCardItems = (id, items) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CARD_ADD_ITEM_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/cards/${id}/items`, { items }, config\n    )\n\n    dispatch({\n      type: CARD_ADD_ITEM_SUCCESS,\n      payload: data,\n    })\n    dispatch(listCardDetails(id))\n    dispatch(setMessage(\"Card item added successfully\"))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: CARD_ADD_ITEM_FAIL,\n      payload: message,\n    })\n    dispatch(setMessage(message))\n  }\n}\n","import axios from \"axios\"\nimport {\n    CARD_ORDER_CREATE_FAIL,\n    CARD_ORDER_CREATE_REQUEST,\n    CARD_ORDER_CREATE_SUCCESS,\n    CARD_ORDER_DETAILS_FAIL,\n    CARD_ORDER_DETAILS_REQUEST,\n    CARD_ORDER_DETAILS_SUCCESS,\n    CARD_ORDER_LIST_MY_REQUEST,\n    CARD_ORDER_LIST_MY_SUCCESS,\n    CARD_ORDER_LIST_MY_FAIL,\n    CARD_ORDER_PAY_FAIL,\n    CARD_ORDER_PAY_REQUEST,\n    CARD_ORDER_LIST_REQUEST,\n    CARD_ORDER_LIST_SUCCESS,\n    CARD_ORDER_PAY_SUCCESS,\n    CARD_ORDER_LIST_FAIL,\n    CARD_ORDER_UPDATE_REQUEST,\n    CARD_ORDER_UPDATE_SUCCESS,\n    CARD_ORDER_UPDATE_FAIL,\n    CARD_ORDER_DELIVER_REQUEST,\n    CARD_ORDER_DELIVER_SUCCESS,\n    CARD_ORDER_DELIVER_FAIL,\n    CARD_NOTPAID_ORDER_LIST_MY_REQUEST,\n    CARD_NOTPAID_ORDER_LIST_MY_SUCCESS,\n    CARD_NOTPAID_ORDER_LIST_MY_FAIL,\n    CARD_ORDER_DELETE_SUCCESS,\n    CARD_ORDER_DELETE_FAIL,\n    CARD_ORDER_DELETE_REQUEST\n} from \"../constants/cardOrderConstants\"\nimport { createSoldCard } from \"./soldCardActions\"\nimport { deliverCardItems } from \"./cardActions\"\nimport { setMessage } from \"./utilActions\"\n\nexport const createCardOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CARD_ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post('/api/cardorders', order, config)\n\n        dispatch({\n            type: CARD_ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const deleteCardOrder = (orderId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CARD_ORDER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/cardorders/${orderId}`, config)\n\n        dispatch({\n            type: CARD_ORDER_DELETE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        dispatch({\n            type: CARD_ORDER_DELETE_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\n\nexport const getCardOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CARD_ORDER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/cardorders/${id}`, config)\n\n        dispatch({\n            type: CARD_ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const listMyCardOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CARD_ORDER_LIST_MY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/cardorders/myorders', config)\n\n        dispatch({\n            type: CARD_ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const listMyNotPaidCardOrders = (userId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CARD_NOTPAID_ORDER_LIST_MY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/cardorders/${userId}/notpaid`, config)\n\n        dispatch({\n            type: CARD_NOTPAID_ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_NOTPAID_ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const cardUpdateOrder = (orderId, order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CARD_ORDER_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.patch(`/api/cardorders/${orderId}/update`,\n            order, config)\n\n        dispatch({\n            type: CARD_ORDER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_ORDER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const cardDeliverOrder =\n    (orderId, purchasedItems, cardId) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: CARD_ORDER_DELIVER_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.put(`/api/cardorders/${orderId}/deliver`,\n                { purchasedItems }, config)\n\n            dispatch({\n                type: CARD_ORDER_DELIVER_SUCCESS,\n                payload: data\n            })\n\n            if (data) {\n                dispatch(createSoldCard(cardId, purchasedItems))\n            }\n\n        } catch (error) {\n            dispatch({\n                type: CARD_ORDER_DELIVER_FAIL,\n                payload: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            })\n        }\n    }\n\n\nexport const cardPayOrder = (qty, cardId, orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CARD_ORDER_PAY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/cardorders/${orderId}/pay`, paymentResult, config)\n\n        dispatch({\n            type: CARD_ORDER_PAY_SUCCESS,\n            payload: data\n        })\n        if (data) {\n            dispatch(deliverCardItems(qty, cardId, orderId))\n        }\n\n    } catch (error) {\n        dispatch({\n            type: CARD_ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const listCardOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CARD_ORDER_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/cardorders`, config)\n\n        dispatch({\n            type: CARD_ORDER_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: CARD_ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}","export const COCI_LIST_REQUEST = \"COCI_LIST_REQUEST\";\nexport const COCI_LIST_SUCCESS = \"COCI_LIST_SUCCESS\";\nexport const COCI_LIST_FAIL = \"COCI_LIST_FAIL\";\n\nexport const COCI_LIST_MY_REQUEST = \"COCI_LIST_REQUEST\";\nexport const COCI_LIST_MY_SUCCESS = \"COCI_LIST_SUCCESS\";\nexport const COCI_LIST_MY_FAIL = \"COCI_LIST_FAIL\";\n\nexport const COCI_DETAILS_REQUEST = \"COCI_DETAILS_REQUEST\";\nexport const COCI_DETAILS_SUCCESS = \"COCI_DETAILS_SUCCESS\";\nexport const COCI_DETAILS_FAIL = \"COCI_DETAILS_FAIL\";\n\nexport const COCI_DELETE_REQUEST = \"COCI_DELETE_REQUEST\";\nexport const COCI_DELETE_SUCCESS = \"COCI_DELETE_SUCCESS\";\nexport const COCI_DELETE_FAIL = \"COCI_DELETE_FAIL\";\n\nexport const COCI_CREATE_REQUEST = \"COCI_CREATE_REQUEST\";\nexport const COCI_CREATE_SUCCESS = \"COCI_CREATE_SUCCESS\";\nexport const COCI_CREATE_FAIL = \"COCI_CREATE_FAIL\";\nexport const COCI_CREATE_RESET = \"COCI_CREATE_RESET\";\n\nexport const COCI_UPDATE_REQUEST = \"COCI_UPDATE_REQUEST\";\nexport const COCI_UPDATE_SUCCESS = \"COCI_UPDATE_SUCCESS\";\nexport const COCI_UPDATE_FAIL = \"COCI_UPDATE_FAIL\";\n\nexport const COCI_ITEM_DELIVER_REQUEST = \"COCI_ITEM_DELIVER_REQUEST\";\nexport const COCI_ITEM_DELIVER_SUCCESS = \"COCI_ITEM_DELIVER_SUCCESS\";\nexport const COCI_ITEM_DELIVER_FAIL = \"COCI_ITEM_DELIVER_FAIL\";\n\nexport const COCI_BLOB_REQUEST = \"COCI_BLOB_REQUEST\";\nexport const COCI_BLOB_SUCCESS = \"COCI_BLOB_SUCCESS\";\nexport const COCI_BLOB_FAIL = \"COCI_BLOB_FAIL\";\n","import axios from \"axios\"\nimport {\n    COCI_CREATE_FAIL,\n    COCI_CREATE_REQUEST,\n    COCI_CREATE_SUCCESS,\n    COCI_DETAILS_FAIL,\n    COCI_DETAILS_REQUEST,\n    COCI_DETAILS_SUCCESS,\n    COCI_LIST_MY_REQUEST,\n    COCI_LIST_MY_SUCCESS,\n    COCI_LIST_MY_FAIL,\n    COCI_LIST_REQUEST,\n    COCI_LIST_SUCCESS,\n    COCI_LIST_FAIL,\n    COCI_UPDATE_REQUEST,\n    COCI_UPDATE_SUCCESS,\n    COCI_UPDATE_FAIL,\n    COCI_ITEM_DELIVER_REQUEST,\n    COCI_ITEM_DELIVER_SUCCESS,\n    COCI_ITEM_DELIVER_FAIL,\n    COCI_DELETE_REQUEST,\n    COCI_DELETE_SUCCESS,\n    COCI_DELETE_FAIL,\n    COCI_BLOB_REQUEST,\n    COCI_BLOB_SUCCESS,\n    COCI_BLOB_FAIL,\n} from \"../constants/changeOfCourseConstants\"\nimport { setMessage } from \"./utilActions\"\n\n\n\nexport const getChangeOfCourseBlob = (orderId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COCI_BLOB_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Accept: 'application/pdf',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/changeofcourseinstitution/${orderId}/blob`,\n            { responseType: 'blob' }, config)\n\n        const file = new Blob([data], { type: 'application/pdf' })\n        const fileURL = URL.createObjectURL(file);\n\n        dispatch({\n            type: COCI_BLOB_SUCCESS,\n            payload: fileURL\n        })\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: COCI_BLOB_FAIL,\n            payload: message\n        })\n\n    }\n}\n\n\n\nexport const adminChangeOfCourseUpload = (id, formData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COCI_ITEM_DELIVER_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(`/api/changeofcourseinstitution/${id}/adminupload`,\n            formData, config)\n\n        dispatch({\n            type: COCI_ITEM_DELIVER_SUCCESS,\n            payload: data\n        })\n\n        dispatch(getChangeOfCourseBlob(id))\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: COCI_ITEM_DELIVER_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\nexport const deleteChangeOfCourseOrder = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COCI_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.delete(`/api/changeofcourseinstitution/${id}`, config)\n\n        dispatch({\n            type: COCI_DELETE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: COCI_DELETE_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\nexport const createChangeOfCourseOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COCI_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post('/api/changeofcourseinstitution', order, config)\n\n        dispatch({\n            type: COCI_CREATE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: COCI_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const getChangeOfCourseOrderDetailsById = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COCI_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/changeofcourseinstitution/${id}`, config)\n\n        dispatch({\n            type: COCI_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: COCI_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const listMyChangeOfCourseOrders = (userId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COCI_LIST_MY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        let result\n\n        if (userId) {\n            const { data } = await axios.get(`/api/changeofcourseinstitution/myorders/${userId}`, config)\n            result = data\n        } else {\n            const { data } = await axios.get('/api/changeofcourseinstitution/myorders', config)\n            result = data\n\n        }\n\n\n        dispatch({\n            type: COCI_LIST_MY_SUCCESS,\n            payload: result\n        })\n\n    } catch (error) {\n        dispatch({\n            type: COCI_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const updateChangeOfCourseOrder = (orderId, order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COCI_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/changeofcourseinstitution/${orderId}/`,\n            order, config)\n\n        dispatch({\n            type: COCI_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: COCI_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const listChangeOfCourseOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COCI_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/changeofcourseinstitution`, config)\n\n        dispatch({\n            type: COCI_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: COCI_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}","export const OLEVEL_UPLOAD_LIST_REQUEST = \"OLEVEL_UPLOAD_LIST_REQUEST\";\nexport const OLEVEL_UPLOAD_LIST_SUCCESS = \"OLEVEL_UPLOAD_LIST_SUCCESS\";\nexport const OLEVEL_UPLOAD_LIST_FAIL = \"OLEVEL_UPLOAD_LIST_FAIL\";\n\nexport const OLEVEL_UPLOAD_LIST_MY_REQUEST = \"OLEVEL_UPLOAD_LIST_REQUEST\";\nexport const OLEVEL_UPLOAD_LIST_MY_SUCCESS = \"OLEVEL_UPLOAD_LIST_SUCCESS\";\nexport const OLEVEL_UPLOAD_LIST_MY_FAIL = \"OLEVEL_UPLOAD_LIST_FAIL\";\n\nexport const OLEVEL_UPLOAD_DETAILS_REQUEST = \"OLEVEL_UPLOAD_DETAILS_REQUEST\";\nexport const OLEVEL_UPLOAD_DETAILS_SUCCESS = \"OLEVEL_UPLOAD_DETAILS_SUCCESS\";\nexport const OLEVEL_UPLOAD_DETAILS_FAIL = \"OLEVEL_UPLOAD_DETAILS_FAIL\";\n\nexport const OLEVEL_UPLOAD_DELETE_REQUEST = \"OLEVEL_UPLOAD_DELETE_REQUEST\";\nexport const OLEVEL_UPLOAD_DELETE_SUCCESS = \"OLEVEL_UPLOAD_DELETE_SUCCESS\";\nexport const OLEVEL_UPLOAD_DELETE_FAIL = \"OLEVEL_UPLOAD_DELETE_FAIL\";\n\nexport const OLEVEL_UPLOAD_CREATE_REQUEST = \"OLEVEL_UPLOAD_CREATE_REQUEST\";\nexport const OLEVEL_UPLOAD_CREATE_SUCCESS = \"OLEVEL_UPLOAD_CREATE_SUCCESS\";\nexport const OLEVEL_UPLOAD_CREATE_FAIL = \"OLEVEL_UPLOAD_CREATE_FAIL\";\nexport const OLEVEL_UPLOAD_CREATE_RESET = \"OLEVEL_UPLOAD_CREATE_RESET\";\n\nexport const OLEVEL_UPLOAD_UPDATE_REQUEST = \"OLEVEL_UPLOAD_UPDATE_REQUEST\";\nexport const OLEVEL_UPLOAD_UPDATE_SUCCESS = \"OLEVEL_UPLOAD_UPDATE_SUCCESS\";\nexport const OLEVEL_UPLOAD_UPDATE_FAIL = \"OLEVEL_UPLOAD_UPDATE_FAIL\";\n\nexport const OLEVEL_UPLOAD_ITEM_DELIVER_REQUEST = \"OLEVEL_UPLOAD_ITEM_DELIVER_REQUEST\";\nexport const OLEVEL_UPLOAD_ITEM_DELIVER_SUCCESS = \"OLEVEL_UPLOAD_ITEM_DELIVER_SUCCESS\";\nexport const OLEVEL_UPLOAD_ITEM_DELIVER_FAIL = \"OLEVEL_UPLOAD_ITEM_DELIVER_FAIL\";\n\nexport const OLEVEL_UPLOAD_BLOB_REQUEST = \"OLEVEL_UPLOAD_BLOB_REQUEST\";\nexport const OLEVEL_UPLOAD_BLOB_SUCCESS = \"OLEVEL_UPLOAD_BLOB_SUCCESS\";\nexport const OLEVEL_UPLOAD_BLOB_FAIL = \"OLEVEL_UPLOAD_BLOB_FAIL\";\n","import axios from \"axios\"\nimport {\n    OLEVEL_UPLOAD_CREATE_FAIL,\n    OLEVEL_UPLOAD_CREATE_REQUEST,\n    OLEVEL_UPLOAD_CREATE_SUCCESS,\n    OLEVEL_UPLOAD_DETAILS_FAIL,\n    OLEVEL_UPLOAD_DETAILS_REQUEST,\n    OLEVEL_UPLOAD_DETAILS_SUCCESS,\n    OLEVEL_UPLOAD_LIST_MY_REQUEST,\n    OLEVEL_UPLOAD_LIST_MY_SUCCESS,\n    OLEVEL_UPLOAD_LIST_MY_FAIL,\n    OLEVEL_UPLOAD_LIST_REQUEST,\n    OLEVEL_UPLOAD_LIST_SUCCESS,\n    OLEVEL_UPLOAD_LIST_FAIL,\n    OLEVEL_UPLOAD_UPDATE_REQUEST,\n    OLEVEL_UPLOAD_UPDATE_SUCCESS,\n    OLEVEL_UPLOAD_UPDATE_FAIL,\n    OLEVEL_UPLOAD_ITEM_DELIVER_REQUEST,\n    OLEVEL_UPLOAD_ITEM_DELIVER_SUCCESS,\n    OLEVEL_UPLOAD_ITEM_DELIVER_FAIL,\n    OLEVEL_UPLOAD_DELETE_REQUEST,\n    OLEVEL_UPLOAD_DELETE_SUCCESS,\n    OLEVEL_UPLOAD_DELETE_FAIL,\n    OLEVEL_UPLOAD_BLOB_REQUEST,\n    OLEVEL_UPLOAD_BLOB_SUCCESS,\n    OLEVEL_UPLOAD_BLOB_FAIL,\n} from \"../constants/oLevelResultUploadConstants\"\nimport { setMessage } from \"./utilActions\"\n\n\nexport const getOlevelUploadBlob = (orderId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OLEVEL_UPLOAD_BLOB_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Accept: 'application/pdf',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/olevelresultupload/${orderId}/blob`,\n            { responseType: 'blob' }, config)\n        const file = new Blob([data], { type: 'application/pdf' })\n        const fileURL = URL.createObjectURL(file);\n\n        dispatch({\n            type: OLEVEL_UPLOAD_BLOB_SUCCESS,\n            payload: fileURL\n        })\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: OLEVEL_UPLOAD_BLOB_FAIL,\n            payload: message\n        })\n\n    }\n}\n\n\nexport const adminOlevelFileUpload = (id, formData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OLEVEL_UPLOAD_ITEM_DELIVER_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(`/api/olevelresultupload/${id}/adminupload`,\n            formData, config)\n\n        dispatch({\n            type: OLEVEL_UPLOAD_ITEM_DELIVER_SUCCESS,\n            payload: data\n        })\n\n        dispatch(getOlevelUploadOrderDetailsById(id))\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: OLEVEL_UPLOAD_ITEM_DELIVER_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\nexport const deleteOlevelUploadOrder = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OLEVEL_UPLOAD_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.delete(`/api/olevelresultupload/${id}`, config)\n\n        dispatch({\n            type: OLEVEL_UPLOAD_DELETE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: OLEVEL_UPLOAD_DELETE_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\n\nexport const createOlevelUploadOrder = (\n    orderItems, amount, paymentMethod, paymentResult) =>\n    async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: OLEVEL_UPLOAD_CREATE_REQUEST\n            })\n\n            const {\n                userLogin: { userInfo },\n            } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n            const formData = new FormData()\n            console.log(orderItems.subjectUpload)\n\n            orderItems.files.forEach(file => formData.append('document', file))\n            formData.append('type', orderItems.type)\n            formData.append('name', orderItems.name)\n            formData.append('profileCode', orderItems.profileCode)\n            formData.append('schoolAttended', orderItems.schoolAttended)\n            formData.append('schoolType', orderItems.schoolType)\n            formData.append('subjectUpload', JSON.stringify(orderItems.subjectUpload))\n            formData.append('price', amount)\n            formData.append('paymentMethod', paymentMethod)\n            formData.append('paymentResultId', paymentResult.id)\n            formData.append('paymentResultStatus', paymentResult.status)\n            formData.append('paymentResultUpdateTime', paymentResult.update_time)\n            formData.append('paymentResultEmail', paymentResult.email)\n\n            const { data } = await axios.post('/api/olevelresultupload', formData, config)\n\n            dispatch({\n                type: OLEVEL_UPLOAD_CREATE_SUCCESS,\n                payload: data\n            })\n        } catch (error) {\n            dispatch({\n                type: OLEVEL_UPLOAD_CREATE_FAIL,\n                payload: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            })\n        }\n    }\n\nexport const getOlevelUploadOrderDetailsById = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OLEVEL_UPLOAD_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/olevelresultupload/${id}`, config)\n\n        dispatch({\n            type: OLEVEL_UPLOAD_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: OLEVEL_UPLOAD_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const listMyOlevelUploadOrders = (userId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OLEVEL_UPLOAD_LIST_MY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        let result\n\n        if (userId) {\n            const { data } = await axios.get(`/api/olevelresultupload/myorders/${userId}`, config)\n            result = data\n        } else {\n            const { data } = await axios.get('/api/olevelresultupload/myorders', config)\n            result = data\n\n        }\n\n        dispatch({\n            type: OLEVEL_UPLOAD_LIST_MY_SUCCESS,\n            payload: result\n        })\n\n    } catch (error) {\n        dispatch({\n            type: OLEVEL_UPLOAD_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const updateOlevelUploadOrder = (orderId, order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OLEVEL_UPLOAD_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/olevelresultupload/${orderId}/`,\n            order, config)\n\n        dispatch({\n            type: OLEVEL_UPLOAD_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: OLEVEL_UPLOAD_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const listOlevelUploadOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OLEVEL_UPLOAD_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/olevelresultupload`, config)\n\n        dispatch({\n            type: OLEVEL_UPLOAD_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: OLEVEL_UPLOAD_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}","export const JAMB_PASSWORD_RESET_LIST_REQUEST = \"JAMB_PASSWORD_RESET_LIST_REQUEST\";\nexport const JAMB_PASSWORD_RESET_LIST_SUCCESS = \"JAMB_PASSWORD_RESET_LIST_SUCCESS\";\nexport const JAMB_PASSWORD_RESET_LIST_FAIL = \"JAMB_PASSWORD_RESET_LIST_FAIL\";\n\nexport const JAMB_PASSWORD_RESET_LIST_MY_REQUEST = \"JAMB_PASSWORD_RESET_LIST_REQUEST\";\nexport const JAMB_PASSWORD_RESET_LIST_MY_SUCCESS = \"JAMB_PASSWORD_RESET_LIST_SUCCESS\";\nexport const JAMB_PASSWORD_RESET_LIST_MY_FAIL = \"JAMB_PASSWORD_RESET_LIST_FAIL\";\n\nexport const JAMB_PASSWORD_RESET_DETAILS_REQUEST = \"JAMB_PASSWORD_RESET_DETAILS_REQUEST\";\nexport const JAMB_PASSWORD_RESET_DETAILS_SUCCESS = \"JAMB_PASSWORD_RESET_DETAILS_SUCCESS\";\nexport const JAMB_PASSWORD_RESET_DETAILS_FAIL = \"JAMB_PASSWORD_RESET_DETAILS_FAIL\";\n\nexport const JAMB_PASSWORD_RESET_DELETE_REQUEST = \"JAMB_PASSWORD_RESET_DELETE_REQUEST\";\nexport const JAMB_PASSWORD_RESET_DELETE_SUCCESS = \"JAMB_PASSWORD_RESET_DELETE_SUCCESS\";\nexport const JAMB_PASSWORD_RESET_DELETE_FAIL = \"JAMB_PASSWORD_RESET_DELETE_FAIL\";\n\nexport const JAMB_PASSWORD_RESET_CREATE_REQUEST = \"JAMB_PASSWORD_RESET_CREATE_REQUEST\";\nexport const JAMB_PASSWORD_RESET_CREATE_SUCCESS = \"JAMB_PASSWORD_RESET_CREATE_SUCCESS\";\nexport const JAMB_PASSWORD_RESET_CREATE_FAIL = \"JAMB_PASSWORD_RESET_CREATE_FAIL\";\nexport const JAMB_PASSWORD_RESET_CREATE_RESET = \"JAMB_PASSWORD_RESET_CREATE_RESET\";\n\nexport const JAMB_PASSWORD_RESET_UPDATE_REQUEST = \"JAMB_PASSWORD_RESET_UPDATE_REQUEST\";\nexport const JAMB_PASSWORD_RESET_UPDATE_SUCCESS = \"JAMB_PASSWORD_RESET_UPDATE_SUCCESS\";\nexport const JAMB_PASSWORD_RESET_UPDATE_FAIL = \"JAMB_PASSWORD_RESET_UPDATE_FAIL\";\n","import axios from \"axios\"\nimport {\n    JAMB_PASSWORD_RESET_CREATE_FAIL,\n    JAMB_PASSWORD_RESET_CREATE_REQUEST,\n    JAMB_PASSWORD_RESET_CREATE_SUCCESS,\n    JAMB_PASSWORD_RESET_DETAILS_FAIL,\n    JAMB_PASSWORD_RESET_DETAILS_REQUEST,\n    JAMB_PASSWORD_RESET_DETAILS_SUCCESS,\n    JAMB_PASSWORD_RESET_LIST_MY_REQUEST,\n    JAMB_PASSWORD_RESET_LIST_MY_SUCCESS,\n    JAMB_PASSWORD_RESET_LIST_MY_FAIL,\n    JAMB_PASSWORD_RESET_LIST_REQUEST,\n    JAMB_PASSWORD_RESET_LIST_SUCCESS,\n    JAMB_PASSWORD_RESET_LIST_FAIL,\n    JAMB_PASSWORD_RESET_UPDATE_REQUEST,\n    JAMB_PASSWORD_RESET_UPDATE_SUCCESS,\n    JAMB_PASSWORD_RESET_UPDATE_FAIL,\n    JAMB_PASSWORD_RESET_DELETE_FAIL,\n    JAMB_PASSWORD_RESET_DELETE_SUCCESS,\n    JAMB_PASSWORD_RESET_DELETE_REQUEST,\n} from \"../constants/jambPasswordResetConstants\"\nimport { setMessage } from \"./utilActions\"\n\nexport const createJambPasswordResetOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post('/api/jambpasswordreset', order, config)\n\n        dispatch({\n            type: JAMB_PASSWORD_RESET_CREATE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const getJambPasswordResetOrderDetailsById = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/jambpasswordreset/${id}`, config)\n\n        dispatch({\n            type: JAMB_PASSWORD_RESET_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const listMyJambPasswordResetOrders = (userId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_LIST_MY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        let result\n\n        if (userId) {\n            const { data } = await axios.get(`/api/jambpasswordreset/myorders/${userId}`, config)\n            result = data\n        } else {\n            const { data } = await axios.get('/api/jambpasswordreset/myorders', config)\n            result = data\n\n        }\n\n        dispatch({\n            type: JAMB_PASSWORD_RESET_LIST_MY_SUCCESS,\n            payload: result\n        })\n\n    } catch (error) {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const updateJambPasswordResetOrder = (orderId, order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/jambpasswordreset/${orderId}/`,\n            order, config)\n\n        dispatch({\n            type: JAMB_PASSWORD_RESET_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const listJambPasswordResetOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/jambpasswordreset`, config)\n\n        dispatch({\n            type: JAMB_PASSWORD_RESET_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\n\nexport const deleteJambPasswordResetOrder = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: JAMB_PASSWORD_RESET_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.delete(`/api/jambpasswordreset/${id}`, config)\n\n        dispatch({\n            type: JAMB_PASSWORD_RESET_DELETE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: JAMB_PASSWORD_RESET_DELETE_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\n","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_CONFIRM_EMAIL_REQUEST,\n    USER_CONFIRM_EMAIL_SUCCESS,\n    USER_CONFIRM_EMAIL_FAIL,\n    USER_PASSWORD_RESET_REQUEST,\n    USER_PASSWORD_RESET_SUCCESS,\n    USER_PASSWORD_RESET_FAIL,\n    USER_FORGOT_PASSWORD_SUCCESS,\n    USER_FORGOT_PASSWORD_FAIL,\n    USER_FORGOT_PASSWORD_REQUEST,\n    USER_RESEND_CODE_REQUEST,\n    USER_RESEND_CODE_SUCCESS,\n    USER_RESEND_CODE_FAIL,\n    USER_PROFILE_PHOTO_REQUEST,\n    USER_PROFILE_PHOTO_SUCCESS,\n    USER_PROFILE_PHOTO_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    SET_PROFILE_IMAGE,\n    WALLET_DEBIT_REQUEST,\n    WALLET_DEBIT_SUCCESS,\n    WALLET_DEBIT_FAIL,\n    WALLET_CREDIT_REQUEST,\n    WALLET_CREDIT_SUCCESS,\n    WALLET_CREDIT_FAIL,\n    USERS_LIST_FAIL,\n    USERS_LIST_SUCCESS,\n    USERS_LIST_REQUEST,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_DELETE_FAIL,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_REQUEST,\n    USER_MAKEADMIN_FAIL,\n    USER_MAKEADMIN_SUCCESS,\n    USER_MAKEADMIN_REQUEST,\n    USER_EMAIL_REQUEST,\n    USER_EMAIL_SUCCESS,\n    USER_EMAIL_FAIL,\n    USERS_EMAIL_REQUEST,\n    USERS_EMAIL_SUCCESS,\n    USERS_EMAIL_FAIL,\n    USER_EMAIL_BY_EMAIL_REQUEST,\n    USER_EMAIL_BY_EMAIL_SUCCESS,\n    USER_EMAIL_BY_EMAIL_FAIL,\n    WALLET_AMOUNT_REQUEST,\n    WALLET_AMOUNT_SUCCESS,\n    WALLET_AMOUNT_FAIL,\n    USER_MAKEEDITOR_REQUEST,\n    USER_MAKEEDITOR_SUCCESS,\n    USER_MAKEEDITOR_FAIL\n} from \"../constants/userConstants\"\nimport uuid from 'react-uuid'\nimport { cardPayOrder } from './cardOrderActions'\nimport { createChangeOfCourseOrder } from './changeOfCourseActions'\nimport { createOlevelUploadOrder } from './oLevelResultUploadActions'\nimport { createJambPasswordResetOrder } from './jambPasswordResetActions'\nimport { setMessage } from './utilActions'\n\nconst normalConfig = {\n    headers: {\n        'Content-Type': 'application/json'\n    }\n}\n\nexport const getWalletAmount = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WALLET_AMOUNT_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.get(`/api/users/wallet/amount`, config)\n\n        dispatch({\n            type: WALLET_AMOUNT_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: WALLET_AMOUNT_FAIL,\n            payload: message\n        })\n    }\n}\n\n\n\nexport const emailAllUsers = (emailMessage) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USERS_EMAIL_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(`/api/users/email`, emailMessage, config)\n\n        dispatch({\n            type: USERS_EMAIL_SUCCESS,\n            payload: data\n        })\n\n        dispatch(setMessage(data))\n\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: USERS_EMAIL_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\nexport const emailAUser = (id, emailMessage) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_EMAIL_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(`/api/users/${id}/email`, emailMessage, config)\n\n        dispatch({\n            type: USER_EMAIL_SUCCESS,\n            payload: data\n        })\n\n        dispatch(setMessage(data))\n\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: USER_EMAIL_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\n\nexport const emailAUserByEmail = (email, emailMessage) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_EMAIL_BY_EMAIL_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(`/api/users/email/${email}`, emailMessage, config)\n\n        dispatch({\n            type: USER_EMAIL_BY_EMAIL_SUCCESS,\n            payload: data\n        })\n\n        dispatch(setMessage(data))\n\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        dispatch({\n            type: USER_EMAIL_BY_EMAIL_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\n\n\n\nexport const makeUserAdmin = (id, adminStatus) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_MAKEADMIN_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/users/makeadmin/${id}`, { adminStatus }, config)\n\n        dispatch({\n            type: USER_MAKEADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_MAKEADMIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n        dispatch(setMessage(\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        ))\n    }\n}\n\nexport const makeUserEditor = (id, editorStatus) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_MAKEEDITOR_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/users/makeeditor/${id}`, { editorStatus }, config)\n\n        dispatch({\n            type: USER_MAKEEDITOR_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_MAKEEDITOR_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n        dispatch(setMessage(\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        ))\n    }\n}\n\n\nexport const deleteAUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.delete(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n        dispatch(setMessage(\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        ))\n    }\n}\n\n\nexport const getAUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.get(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const getAllUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USERS_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.get('/api/users', config)\n\n        dispatch({\n            type: USERS_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USERS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const { data } = await axios.post('/api/users/login',\n            { email, password }, normalConfig)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        dispatch(getWalletAmount())\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const { data } = await axios.post('/api/users/register',\n            { name, email, password }, normalConfig)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        // localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put('/api/users/profile/update', { user }, config)\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        dispatch(getWalletAmount())\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const activateAccount = (token) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_CONFIRM_EMAIL_REQUEST\n        })\n\n        const { data } = await axios.put('/api/users/emailconfirmation',\n            { token }, normalConfig)\n\n        dispatch({\n            type: USER_CONFIRM_EMAIL_SUCCESS,\n            payload: data\n        })\n\n        // localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_CONFIRM_EMAIL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const resendConfirmationEmail = (email) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_RESEND_CODE_REQUEST\n        })\n\n        const { data } = await axios.patch('/api/users/resendemail',\n            { email }, normalConfig)\n\n        dispatch({\n            type: USER_RESEND_CODE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_RESEND_CODE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_FORGOT_PASSWORD_REQUEST\n        })\n\n        const { data } = await axios.put('/api/users/forgotpassword',\n            { email }, normalConfig)\n\n        dispatch({\n            type: USER_FORGOT_PASSWORD_SUCCESS,\n            payload: data\n        })\n\n        // localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_FORGOT_PASSWORD_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const resetPassword = (token, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_PASSWORD_RESET_REQUEST\n        })\n\n        const { data } = await axios.put('/api/users/resetpassword',\n            { token, password }, normalConfig)\n\n        dispatch({\n            type: USER_PASSWORD_RESET_SUCCESS,\n            payload: data\n        })\n\n        // localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_PASSWORD_RESET_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const facebooklogin = (userID, accessToken) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const { data } = await axios.post('/api/users/facebooklogin',\n            { userID, accessToken }, normalConfig)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const setProfilePhoto = (id, formData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_PROFILE_PHOTO_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/users/${id}/profilephoto`, formData, config)\n\n        dispatch({\n            type: USER_PROFILE_PHOTO_SUCCESS,\n            payload: data\n        })\n\n        const newUserInfo = { ...userInfo, profile: { ...userInfo.profile, picture: data } }\n        localStorage.setItem(\"userInfo\", JSON.stringify(newUserInfo))\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_PROFILE_PHOTO_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const setUserImage = (photoUrl) => async (dispatch, getState) => {\n    dispatch({\n        type: SET_PROFILE_IMAGE,\n        payload: photoUrl\n    })\n}\n\n\nexport const debitWallet = ({\n    transactionType = \"card\",\n    qty = 0,\n    cardId = '',\n    orderId = '',\n    amount,\n    orderItems = {},\n\n} = {}) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WALLET_DEBIT_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const id = userInfo._id\n        const transactionId = uuid()\n        const paymentMethod = 'wallet'\n\n        const paymentResult = {\n            id: transactionId,\n            status: 'success',\n            update_time: String((new Date()).getTime()),\n            email: userInfo.email\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put('/api/users/wallet/debit', { id, amount, paymentResult }, config)\n\n        dispatch({\n            type: WALLET_DEBIT_SUCCESS,\n            payload: data\n        })\n\n        if (data) {\n            if (transactionType === 'card') {\n                dispatch(cardPayOrder(qty, cardId, orderId, paymentResult))\n\n            } else if (transactionType === 'changeofcourse') {\n                dispatch(createChangeOfCourseOrder(\n                    { orderItems, price: amount, paymentMethod, paymentResult })\n                )\n\n            } else if (transactionType === 'olevelresultupload') {\n                dispatch(createOlevelUploadOrder(\n                    orderItems, amount, paymentMethod, paymentResult)\n                )\n            } else if (transactionType === 'jambpasswordreset') {\n                dispatch(createJambPasswordResetOrder(\n                    { orderItems, price: amount, paymentMethod, paymentResult }\n                ))\n            }\n        }\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        dispatch(getWalletAmount())\n\n    } catch (error) {\n        dispatch({\n            type: WALLET_DEBIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\n\n\nexport const creditWallet = (amount, paymentResult, method) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WALLET_CREDIT_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const id = userInfo._id\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put('/api/users/wallet/credit', { id, amount, paymentResult, method }, config)\n\n        dispatch({\n            type: WALLET_CREDIT_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        dispatch(getWalletAmount())\n\n    } catch (error) {\n        dispatch({\n            type: WALLET_CREDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n}","import React, { useEffect } from 'react'\nimport { Avatar } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Header, HeaderRightItems, Hamburger } from \"../styles/HeaderStyle\"\nimport {\n    headerRightVariants,\n    headerTextVariants,\n    hamburgerVariants,\n    hamburgerItemsVariants\n} from \"../animationVariants/HeaderVariants\"\nimport { motion } from \"framer-motion\"\nimport { Link, useHistory, useLocation } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { logout } from \"../redux/actions/userActions\"\nimport { DRAWER_OPEN } from \"../redux/constants/utilConstants\"\nimport { setUserImage } from \"../redux/actions/userActions\"\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n    },\n}));\n\nconst MainHeader = ({ setShowDrawer }) => {\n    const classes = useStyles();\n    const location = useLocation()\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n\n    const path = location.pathname\n\n    const photo = useSelector(state => state.photo)\n    const { imageUrl } = photo\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    useEffect(() => {\n        dispatch(setUserImage())\n    }, [dispatch])\n\n    const animateDrawer = () => {\n        const navLinks = document.querySelectorAll(\"nav ul li.item\");\n        navLinks.forEach((link, ind) => {\n            link.style.animation = `navlinkfade 1s ease forwards ${ind / 2 + 0.8}s`\n        })\n    }\n    const handleHamburgerClick = () => {\n        animateDrawer()\n        dispatch({ type: DRAWER_OPEN })\n    }\n    const logoutHandler = () => {\n        dispatch(logout())\n        history.push('/auth')\n    }\n\n\n    return (\n        <>\n\n            <Header>\n                <Hamburger\n                    variants={hamburgerVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    whileHover=\"onHover\"\n                    onClick={handleHamburgerClick}\n                >\n                    <motion.div variants={hamburgerItemsVariants} className=\"line1\"></motion.div>\n                    <motion.div variants={hamburgerItemsVariants} className=\"line2\"></motion.div>\n                    <motion.div variants={hamburgerItemsVariants} className=\"line3\"></motion.div>\n                </Hamburger>\n                {/* <SvgIcon /> */}\n                <Link to='/' className=\"logo\">\n                    <img src='/images/pincafes-logo.png' alt='Pin Cafes logo' />\n                </Link>\n                <HeaderRightItems variants={headerRightVariants} initial=\"hidden\" animate=\"visible\">\n                    <ul>\n                        {/* <motion.li\n                            variants={headerTextVariants}\n                            initial=\"initial\"\n                            whileHover=\"onHover\"\n                        >\n                            <Link\n                                to=\"/\"\n                                style={{ fontWeight: path === '/' && 'bold' }}>\n                                About\n                        </Link>\n                        </motion.li> */}\n                        <motion.li\n                            variants={headerTextVariants}\n                            initial=\"initial\"\n                            whileHover=\"onHover\"\n                        >\n                            <Link\n                                to=\"/allcards\"\n                                style={{ fontWeight: path === '/allcards' && 'bold' }}\n                            >\n                                Buy Pin\n                        </Link>\n                        </motion.li>\n                        <motion.li\n                            variants={headerTextVariants}\n                            initial=\"initial\"\n                            whileHover=\"onHover\"\n                        >\n                            <Link\n                                to=\"/data-correction\"\n                                style={{ fontWeight: path === '/data-correction' && 'bold' }}\n                            >\n                                Data Correction\n                        </Link>\n                        </motion.li>\n                        <motion.li\n                            variants={headerTextVariants}\n                            initial=\"initial\"\n                            whileHover=\"onHover\"\n                        >\n                            <Link\n                                to=\"/help\"\n                                style={{ fontWeight: path === '/help' && 'bold' }}\n                            >Get Help</Link>\n                        </motion.li>\n                        <motion.li\n                            variants={headerTextVariants}\n                            initial=\"initial\"\n                            whileHover=\"onHover\"\n                        >\n\n                            {userInfo ?\n                                (\n                                    <Link\n                                        onClick={logoutHandler}\n                                    >\n                                        Logout\n                                    </Link>\n                                )\n                                :\n                                (\n                                    <Link\n                                        to=\"/auth\"\n                                        style={{ fontWeight: path === '/join' && 'bold' }}\n                                    >\n                                        Join\n                                    </Link>\n                                )\n\n                            }\n\n                        </motion.li>\n\n\n                        {userInfo && (\n                            <>\n\n                                {\n                                    (userInfo.isAdmin || userInfo.isEditor) &&\n                                    <motion.li\n                                        variants={headerTextVariants}\n                                        initial=\"initial\"\n                                        whileHover=\"onHover\"\n                                    >\n                                        <Link\n                                            to=\"/admin\"\n                                            style={{ fontWeight: path === '/admin' && 'bold' }}\n                                        >\n                                            Admin Page\n                                </Link>\n                                    </motion.li>\n                                }\n\n                                <motion.li\n                                    variants={headerTextVariants}\n                                    initial=\"initial\"\n                                    whileHover=\"onHover\"\n                                >\n                                    <Link\n                                        to=\"/profile\"\n                                        style={{ fontWeight: path === '/profile' && 'bold' }}\n                                    >\n                                        <Avatar\n                                            className={classes.small}\n                                            src={\n                                                imageUrl ? imageUrl :\n                                                    userInfo.profile && userInfo.profile.picture ?\n                                                        userInfo.profile.picture\n                                                        :\n                                                        '/images/default-avatar.jpg'\n                                            }\n                                        />\n                                    </Link>\n                                </motion.li>\n                            </>\n                        )}\n                    </ul>\n                </HeaderRightItems>\n            </Header>\n        </>\n    )\n}\n\nexport default MainHeader\n","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { device, colors } from \"./breakpoints\"\n\nexport const TestimonialContainer = styled(motion.div)`\n    background: rgb(254,254,254);\n    background: linear-gradient(180deg, \n    rgba(244,245,247,1) 12%, \n    rgba(245,246,248,1) 27%, \n    rgba(248,248,250,1) 41%, \n    rgba(253,253,253,1) 57%, \n    rgba(253,254,254,1) 70%, \n    rgba(254,254,254,1) 83%);\n\n    font-family: 'Jost', sans-serif;\n    .carousel{                \n        .carousel__slide{\n            ${'' /* height: 150px !important;                     */}\n        }\n        \n        .carousel__inner-slide{\n                    \n            .slide__item{                \n                display:flex;\n                justify-content: center;\n                align-items: center;\n                @media ${device.tablet}{\n                    flex-direction: column;\n                }\n                div{\n                    \n                    p{                        \n                        margin: 0;  \n                    }\n                }\n                \n                height: 100%;\n                .avatar{\n                    width: 100px;                    \n                    height: 100px;\n                }\n                               \n                p{\n                    font-weight: 300;                    \n                    padding: 3px 10px;\n                    font-size: 1rem;   \n                                     \n                }\n                small{\n                    font-family: 'Aclonica';    \n                    font-size: 0.7rem;        \n                    padding: 0 10px;\n                }\n                p, small{\n                    @media ${device.tablet}{                        \n                        padding: 5px 60px;    \n                    }\n                    @media ${device.mobile_lg}{                        \n                        padding: 5px 35px;    \n                    }\n                    @media ${device.mobile_md}{                        \n                        padding: 0 0 0 15px;\n                    }\n                    @media ${device.mobile_sm}{                        \n                        padding: 0 5px;    \n                    }\n                }\n            }            \n        }\n        \n        position: relative;\n        .carousel__back-button, .carousel__next-button{\n            position: absolute;\n            top: 40%;                    \n            @media ${device.tablet}{                        \n                top: 20%;    \n            }\n            border: none;\n            outline: none;\n            background-color: transparent;\n            color: ${colors.darkred};\n        };\n        .carousel__back-button{\n            left: -20px;\n            @media ${device.mobile_lg}{                        \n                left: 0;\n            }\n            \n            @media ${device.mobile_md}{                        \n                left: -15px;\n            }\n            @media ${device.mobile_sm}{                        \n                left: -25px;\n            }\n        }\n        .carousel__next-button{                             \n            right: 0;\n            @media ${device.mobile_md}{                        \n                right: -20px;\n            }\n            @media ${device.mobile_md}{                        \n                right: -30px;\n            }\n        }\n    }\n`","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { device, colors } from \"./breakpoints\"\nimport { TestimonialContainer } from './TestimonialStyle'\n\nexport const HomeTopContainer = styled.div`\n    background: ${colors.background};         \n    height: fit-content; \n    position: relative;    \n    .wavebottom{\n        position: absolute;\n        width: 100%;\n        transform: rotateX(180deg);\n        transform: rotateZ(180deg);\n        background: ${colors.white};\n    }\n`\n\nexport const HomeTabContainer = styled.div`\n    background: rgb(254,254,254);\n    background: linear-gradient(180deg, rgba(254,254,254,1) 12%, rgba(253,254,254,1) 27%, rgba(253,253,253,1) 41%, rgba(248,248,250,1) 57%, rgba(245,246,248,1) 70%, rgba(244,245,247,1) 83%);\n    height: fit-content; \n    padding: 120px 80px 40px 80px;\n    @media ${device.mobile_lg}{\n        padding: 40px;\n    }\n    \n`\n\nexport const HomeAltCardContainer = styled.div`\n    background: ${colors.background};   \n    padding: 40px 80px;    \n\n    @media ${device.mobile_lg}{\n        padding: 40px;\n    }\n    \n    h2{\n        font-family: 'Aclonica', sans-serif;  \n        font-weight: 100;\n        margin-top: 80px;\n        font-size: 2rem;\n        color: ${colors.darktext}\n    };\n    .top__paragraph{\n        font-family: 'Jost', sans-serif;\n        margin-top: 20px;\n        width: 50vw;\n        font-weight: 300;\n    };\n    \n    \n    .card__container{        \n        height: fit-content;    \n        margin-top: 30px;\n        display: grid;\n        grid-gap: 20px;\n        grid-template-columns: repeat(4, 1fr);\n        @media ${device.tablet}{\n            grid-template-columns: repeat(2, 1fr);\n        } \n        @media ${device.mobile_lg}{\n            grid-template-columns: 1fr;\n        } \n    };\n      \n    \n`\n\nexport const HomeCardContainer = styled.div`\n    \n    background: ${colors.background};         \n    height: fit-content;         \n    padding: 50px 0;\n    .card__container{\n       width: 80%;       \n       margin: auto;\n       display: grid;\n       grid-template-columns: repeat(4, 1fr);           \n       place-items: center;\n    }\n    \n    @media ${device.laptop} {\n        .card__container{\n            width: 90%;\n            grid-template-columns: repeat(3, 1fr); \n        }\n    }\n    \n    @media ${device.tablet} {\n        .card__container{\n            grid-template-columns: repeat(2, 1fr); \n        }\n    }\n    \n    @media ${device.mobile_lg} {\n        .card__container{\n            grid-template-columns: 1fr; \n        }\n    }\n    \n`\n\nexport const HomeCounterContainer = styled.div`\n    font-family: 'Exo 2', sans-serif;\n    background: ${colors.darkgray};         \n    height: fit-content; \n    padding: 60px 0;    \n    display:flex;\n    justify-content: center;    \n    align-center: center;\n    \n    .counter__pane{\n        margin: 0 50px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        i{\n            color: ${colors.background};\n            font-size: 2rem;\n        }\n        p{\n            color: ${colors.white};\n            text-align: center;\n        }\n    }   \n    \n`\nexport const HomeTestimonialContainer = styled(TestimonialContainer)`\n    padding: 40px 80px;\n    @media ${device.mobile_lg}{\n        padding: 40px;\n    }\n    .testimonial__content{\n        h2{\n            font-family: 'Aclonica', sans-serif;\n            color: ${colors.darkblue}\n        }\n        p{\n            font-family: 'Jost', sans-serif;\n            margin: 20px 0 50px 0;\n        }\n        \n        padding: 80px 0;\n    }\n`\n\nexport const ScreenDiv = styled.div`\n    display: flex;    \n    justify-content: space-around;\n    align-items: center;\n    margin-right: 50px;\n    a{\n        text-decoration: none;\n    }\n    \n    div{\n        .topcards{\n            display:flex;  \n            @media ${device.tablet_md} {\n                display: grid;\n                grid-template-columns: repeat(2, 1fr);\n            }          \n            \n        }\n        \n        h1{\n            font-family: 'Aclonica', sans-serif;\n            font-weight: 400;\n            font-size: 3rem;\n            line-height: 60px;\n            color: ${colors.darktext};\n            margin-top: 30px;\n        }\n        p{\n            font-family: 'Jost', sans-serif;\n            font-size: 1.3rem;\n            line-height: 30px;\n            color: ${colors.darktext};\n            span{\n                color: ${colors.darkred};\n                font-weight: bold;\n            }\n            @media ${device.mobile_sm} {                \n                width: 70%;\n                margin: 0 auto;\n            }  \n        }\n    };        \n    \n    @media ${device.tablet} {\n        flex-direction: column;  \n        align-items: center;\n        justify-content: center;\n        margin-right: 0;\n        text-align: center;\n        \n        div{\n            margin: 10px 20px;\n        }\n        div h1{\n            font-size: 2.5rem;\n            line-height: 35px;\n            margin-bottom: 10px\n        }      \n        div p{\n            font-size: 1rem;\n            line-height: 20px;\n            margin-bottom: 10px\n        }\n        \n    };  \n    \n    @media ${device.mobile_lg} {        \n        \n        div h1{\n            font-size: 2rem;            \n        }      \n        div p{\n            font-size: 0.89rem;            \n        }        \n    };            \n}\n`\n\n\nexport const Image = styled.img`\n    width: ${props =>\n        props.width ||\n        (props.variant === 'homeTopVector' && '500px')\n        || '500px'};\n    height: ${props =>\n        props.height ||\n        (props.variant === 'homeTopVector' && '500px')\n        || '500px'};\n    \n    margin: ${props => props.variant === 'homeTopVector' && '50px 80px'};\n    \n    @media ${device.tablet} {        \n        width: ${props => (props.variant === 'homeTopVector' && '450px') || '400px'};\n        height: ${props => (props.variant === 'homeTopVector' && '350px') || '250px'};\n        margin: ${props => props.variant === 'homeTopVector' && '20px auto'};\n    }     \n    @media ${device.mobile_lg} {        \n        width: ${props => (props.variant === 'homeTopVector' && '300px') || '300px'};\n        height: ${props => (props.variant === 'homeTopVector' && '250px') || '250px'};\n        margin: ${props => props.variant === 'homeTopVector' && '20px auto'};\n    }        \n    \n`\n\n\n\nexport const Button = styled(motion.button)`\n    background: ${colors.darkred};\n    color: white;\n    font-family: 'Jost', sans-serif;\n    font-size: 1rem;\n    margin: 1rem auto;\n    padding: 0.8rem 1rem;\n    border: 2px solid ${colors.darkred};\n    border-radius: 3px;\n    width: 200px;\n    justify-self: center;\n    align-self: center;\n    cursor: pointer\n    \n`","import styled, { createGlobalStyle } from \"styled-components\"\nimport { colors } from \"./breakpoints\"\n\nexport const globalStyle = createGlobalStyle`\n    body{\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }  \n`\nexport const Divider = styled.hr`\n    height: 2px;\n    border: 0;\n    background-color: ${colors.darkbackground}        \n    \n`\n\n\n\n\n","import React from 'react'\n\nconst Wavebottom = () => {\n    return (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            className=\"wavebottom\"\n            viewBox=\"0 0 1440 68\" \n            enable-background=\"new 0 0 1440 68\">\n            <path \n                d=\"m1622.3 1937.7c0 0-410.7 169.1-913.4 75.5-502.7-93.6-977.7 56.3-977.7 56.3v440h1891.1v-571.8\" \n                fill=\"#F4F5F7\" \n                transform=\"translate(0-1977)\">\n            </path>\n        </svg>\n    )\n}\n\nexport default Wavebottom\n","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { device, colors } from \"./breakpoints\"\n\nexport const TabContainer = styled(motion.div)`\n    display: ${props => props.variant === 'center' ? 'grid' : null};\n    place-items: ${props => props.variant === 'center' ? 'center' : null};\n    \n    .tabs{            \n        \n        div div{            \n            width: 80vw;\n            \n           @media ${device.tablet}{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n           };               \n        }\n        div div button{  \n            font-family: 'Russo One' !important;                       \n            border-radius: 20px !important;    \n            span.MuiTab-wrapper{\n                text-transform: capitalize;\n                font-size: 1rem;\n            };\n            @media ${device.mobile_lg}{\n                margin-top: 20px;                \n            }   \n        }\n        .MuiTabs-indicator{\n            display:none;\n        }\n    }\n`\n\nexport const ChildContainer = styled(motion.div)`\n    \n    font-family: 'Jost', sans-serif;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    padding: 20px 0;\n    @media ${device.tablet}{\n        grid-template-columns: 1fr;        \n    }\n\n    \n    \n    .leftchild{\n        \n        h2, h4{\n            font-family: 'Aclonica';            \n        }\n        \n        h2{            \n            margin-bottom: 10px;            \n            font-size: 3rem;\n            color: ${colors.darktext};\n            @media ${device.mobile_lg}{\n                font-size: 1.5rem;                \n                width: 70%;\n            }\n        }\n        \n        p{\n            font-size: 1.5rem;\n            color: ${colors.midtext};\n            @media ${device.mobile_lg}{\n                font-size: 1rem;                \n                width: 70%;\n            }        \n        }\n        .cta{\n            margin-top: 10px;\n            display: block;\n            font-size: 1rem;\n        }\n        \n        \n        .child__items{\n            \n            .child__item{\n                display:flex;\n                align-items:center;  \n                margin-top: 30px;\n                i{\n                    background-color: ${colors.darkbackground};\n                    padding: 25px;\n                    font-size: 2rem;\n                    color: ${colors.bluetext};\n                    margin-right: 30px;\n                    &:hover{\n                        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n                    };\n                    @media ${device.mobile_lg}{\n                        font-size: 1rem;\n                        padding: 13px;\n                    }\n                    \n                }      \n                div{\n                    color: ${colors.midtext};\n                    font-size: 1rem;\n                    @media ${device.mobile_lg}{\n                       font-size: 0.9rem;                \n                        width: 60%;\n                    };                    \n                } \n                div h4{                    \n                    &:hover{\n                        color: ${colors.bluetext};                        \n                    }\n                }    \n                div span{\n                    @media ${device.mobile_lg}{                      \n                        display: block;\n                        width: 60%;\n                    };\n                }   \n            }\n        }\n        \n    }\n    \n    .rightchild{\n        img{\n            margin-top: 100px;\n            min-width: 500px;\n            max-width: 700px;\n            @media ${device.tablet}{\n                min-width: 300px;\n                max-width: 500px;\n            }\n            @media ${device.mobile_lg}{\n                min-width: 200px;\n                max-width: 250px;\n            }\n        }\n    }\n`","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  export default TabPanel","\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nexport default a11yProps;","\nconst tabitems = [\n    {\n        heading: \"Buy pins for all exams and institutions.\",\n        description: \"Buy cards with just a few mouse clicks. Make payment and get instant pin/token.\",\n        details: [\n            {\n                icon: \"fas fa-project-diagram\",\n                head: \"UTME/JAMB pins\",\n                desc: \"Jamb result checker, Jamb DE, etc\"\n            },\n            {\n                icon: \"fas fa-drafting-compass\",\n                head: \"NECO pins/tokens\",\n                desc: \"Neco result checkers, pins, tokens,etc\"\n            },\n            {\n                icon: \"fas fa-compass\",\n                head: \"WAEC pins/cards\",\n                desc: \"Waec scratch cards, tokens, pins\"\n            },\n            {\n                icon: \"fas fa-chart-pie\",\n                head: \"Other cards\",\n                desc: \"Nabteb cards, school exam cards, bced card, etc.\"\n            }\n        ],\n        image: \"/images/webdesign1.png\",\n        link: '/allcards'\n    },\n    {\n        heading: \"Correct your Jamb data with just a click.\",\n        description: \"Jamb data correction made easy. Hassles eliminated. Just with a few mouse clicks.\",\n        details: [\n            {\n                icon: \"fas fa-project-diagram\",\n                head: \"Change of course\",\n                desc: \"Change course for any institution in Nigeria\"\n            },\n            {\n                icon: \"fas fa-drafting-compass\",\n                head: \"Change of institution\",\n                desc: \"Change institution with just a mouse click\"\n            }\n        ],\n        image: \"/images/webdesign2.png\",\n        link: '/data-correction/change-of-course-institution'\n    },\n    {\n        heading: \"Get O Level Result Upload up and Running.\",\n        description: \"Upload your O level results in a go. You are just a click away.\",\n        details: [\n            {\n                icon: \"fas fa-project-diagram\",\n                head: \"Result upload for a sitting\",\n                desc: \"Upload single sitting O level results easily\"\n            },\n            {\n                icon: \"fas fa-drafting-compass\",\n                head: \"Result upload for two  sittings\",\n                desc: \"Upload single sitting O level results easily\"\n            },\n            {\n                icon: \"fas fa-chart-pie\",\n                head: \"Track changes and get instant response\",\n                desc: \"We respond to you in real time. Just hit us up and get it done.\"\n            }\n        ],\n        image: \"/images/webdesign3.jpg\",\n        link: '/data-correction/result-upload'\n    },\n    {\n        heading: \"We offer a bunch of other awesome services\",\n        description: \"We do our best to stay on top of the industry. Pin Cafes has got you covered\",\n        details: [\n            {\n                icon: \"fas fa-project-diagram\",\n                head: \"Jamb password reset service\",\n                desc: \"Reset your Jamb password with us today\"\n            },\n            {\n                icon: \"fas fa-chart-pie\",\n                head: \"Manage your account\",\n                desc: \"View your profile and your activities.\"\n            },\n            {\n                icon: \"fas fa-compass\",\n                head: \"We value your opinion.\",\n                desc: \"Drop a review for on our services. We value your opinion\"\n            }\n        ],\n        link: '/data-correction/jamb-password-reset'\n    }\n]\n\n\nexport default tabitems;","import React from 'react'\nimport {ChildContainer} from '../../styles/TabStyle'\n\nconst TabChildren = ({heading, description, image, children}) => {\n    return (\n        <ChildContainer>\n            <div className=\"leftchild\">\n                <h2>{heading}</h2>\n                <p>{description}</p>\n                <div className=\"child__items\">\n                    {children}                    \n                </div>\n            </div>\n            <div className=\"rightchild\">\n                <img src={image} alt=\"\"/>\n            </div>\n            \n        </ChildContainer>\n    )\n}\n\nexport default TabChildren\n","import React, { useState } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@material-ui/core/styles';\nimport { TabContainer } from \"../../styles/TabStyle\"\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TabPanel from \"./TabPanel\"\nimport a11yProps from \"./allProps\"\nimport { colors } from \"../../styles/breakpoints\"\nimport TabItems from \"./tabJsonAPI\"\nimport TabChildren from \"./TabChildren\"\nimport { Link } from 'react-router-dom';\n\nexport default function FullWidthTabs({ firstChild, secondChild, thirdChild, fourthChild }) {\n  const [activeFirst, setActiveFirst] = useState(true)\n  const [activeSecond, setActiveSecond] = useState(false)\n  const [activeThird, setActiveThird] = useState(false)\n  const [activeFourth, setActiveFourth] = useState(false)\n\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const handleFirstTab = () => {\n    setActiveFirst(true)\n    setActiveSecond(false)\n    setActiveThird(false)\n    setActiveFourth(false)\n  }\n\n  const handleSecondTab = () => {\n    setActiveFirst(false)\n    setActiveSecond(true)\n    setActiveThird(false)\n    setActiveFourth(false)\n  }\n\n  const handleThirdTab = () => {\n    setActiveFirst(false)\n    setActiveSecond(false)\n    setActiveThird(true)\n    setActiveFourth(false)\n  }\n\n  const handleFourthTab = () => {\n    setActiveFirst(false)\n    setActiveSecond(false)\n    setActiveThird(false)\n    setActiveFourth(true)\n  }\n  return (\n    <TabContainer >\n\n      <Tabs\n        className=\"tabs\"\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n        aria-label=\"Features tabs\"\n\n      >\n        <Tab label=\"Buy Tokens/Pins\"\n          {...a11yProps(0)}\n          style={{ backgroundColor: activeFirst && colors.lightergray }}\n          onClick={handleFirstTab} />\n        <Tab label=\"Correction of Data \"\n          {...a11yProps(1)}\n          style={{ backgroundColor: activeSecond && colors.lightergray }}\n          onClick={handleSecondTab} />\n        <Tab label=\"Result Upload\"\n          {...a11yProps(2)}\n          style={{ backgroundColor: activeThird && colors.lightergray }}\n          onClick={handleThirdTab} />\n        <Tab label=\"Other Services\"\n          {...a11yProps(2)}\n          style={{ backgroundColor: activeFourth && colors.lightergray }}\n          onClick={handleFourthTab} />\n      </Tabs>\n\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        {\n          TabItems.map((item, index) => (\n            <TabPanel value={value} key={index} index={index} dir={theme.direction}>\n              <TabChildren\n                heading={item.heading}\n                description={item.description}\n                image={item.image}\n              >\n                {\n                  item.details.map((detail, ind) => (\n                    <div key={ind} className=\"child__item\">\n                      <i className={detail.icon}></i>\n                      <div>\n                        <h4>{detail.head}</h4>\n                        <span>{detail.desc}</span>\n                      </div>\n                    </div>\n                  ))\n                }\n                <span className='cta'>Click <Link to={item.link}>here</Link> to proceed</span>\n              </TabChildren>\n            </TabPanel>\n          ))\n        }\n      </SwipeableViews>\n    </TabContainer>\n  );\n}\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n\n}));\n\nexport default function SimpleBackdrop() {\n  const classes = useStyles();\n\n\n  return (\n    <div>\n\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress className={classes.progress} color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","export const REVIEW_LIST_REQUEST = \"REVIEW_LIST_REQUEST\";\nexport const REVIEW_LIST_SUCCESS = \"REVIEW_LIST_SUCCESS\";\nexport const REVIEW_LIST_FAIL = \"REVIEW_LIST_FAIL\";\n\nexport const REVIEW_DETAILS_REQUEST = \"REVIEW_DETAILS_REQUEST\";\nexport const REVIEW_DETAILS_SUCCESS = \"REVIEW_DETAILS_SUCCESS\";\nexport const REVIEW_DETAILS_FAIL = \"REVIEW_DETAILS_FAIL\";\n\nexport const REVIEW_DETAILS_BY_USER_REQUEST = \"REVIEW_DETAILS_BY_USER_REQUEST\";\nexport const REVIEW_DETAILS_BY_USER_SUCCESS = \"REVIEW_DETAILS_BY_USER_SUCCESS\";\nexport const REVIEW_DETAILS_BY_USER_FAIL = \"REVIEW_DETAILS_BY_USER_FAIL\";\n\n\nexport const REVIEW_DELETE_REQUEST = \"REVIEW_DELETE_REQUEST\";\nexport const REVIEW_DELETE_SUCCESS = \"REVIEW_DELETE_SUCCESS\";\nexport const REVIEW_DELETE_FAIL = \"REVIEW_DELETE_FAIL\";\n\nexport const REVIEW_CREATE_REQUEST = \"REVIEW_CREATE_REQUEST\";\nexport const REVIEW_CREATE_SUCCESS = \"REVIEW_CREATE_SUCCESS\";\nexport const REVIEW_CREATE_FAIL = \"REVIEW_CREATE_FAIL\";\nexport const REVIEW_CREATE_RESET = \"REVIEW_CREATE_RESET\";\n\nexport const REVIEW_UPDATE_REQUEST = \"REVIEW_UPDATE_REQUEST\";\nexport const REVIEW_UPDATE_SUCCESS = \"REVIEW_UPDATE_SUCCESS\";\nexport const REVIEW_UPDATE_FAIL = \"REVIEW_UPDATE_FAIL\";\nexport const REVIEW_UPDATE_RESET = \"REVIEW_UPDATE_RESET\";\n","import React, { useEffect } from 'react'\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBackIos';\nimport Loader from \"./Loaders/SimpleLoader\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { listReviews } from '../redux/actions/reviewActions';\nimport Rating from '@material-ui/lab/Rating';\nimport { Avatar } from '@material-ui/core';\n\nconst Testimonial = ({ perPage }) => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(listReviews())\n    }, [dispatch])\n\n\n    const { loading, error, reviews } = useSelector(state => state.reviewList)\n\n    return (\n        <CarouselProvider\n            naturalSlideWidth={100}\n            naturalSlideHeight={50}\n            totalSlides={reviews && reviews.length}\n            visibleSlides={perPage}\n            infinite={true}\n            isIntrinsicHeight={true}\n        >\n            <Slider>\n\n                {\n                    loading ? <Loader />\n                        :\n                        error ? error\n                            :\n                            reviews && reviews.map((review, index) => (\n                                <Slide key={index} index={index}>\n                                    <div className=\"slide__item\">\n                                        <Avatar className=\"avatar\" src={\n                                            review.user && review.user.profile &&\n                                                review.user.profile.picture ?\n                                                review.user.profile.picture :\n                                                '/images/default-avatar.jpg'\n                                        }\n                                            alt={`${review.user && review.user.name} testimonial`} />\n                                        <div>\n                                            <p><Rating defaultValue={review.value} precision={0.5} readOnly /></p>\n                                            <p>\n                                                {\n                                                    review.description.length > 70\n                                                        ?\n\n                                                        review.description.substring(0, 70)\n                                                        + String.fromCharCode(8230)\n\n                                                        :\n                                                        review.description\n                                                }\n                                            </p>\n                                            <small>{review.user && review.user.name}</small>\n                                        </div>\n                                    </div>\n                                </Slide>\n                            ))\n                }\n\n\n            </Slider>\n            <ButtonBack><ArrowBackIcon fontSize='large' /></ButtonBack>\n            <ButtonNext><ArrowForwardIcon fontSize='large' /></ButtonNext>\n\n        </CarouselProvider>\n    )\n}\n\nexport default Testimonial\n","import axios from 'axios'\nimport {\n  REVIEW_LIST_REQUEST,\n  REVIEW_LIST_SUCCESS,\n  REVIEW_LIST_FAIL,\n  REVIEW_DETAILS_REQUEST,\n  REVIEW_DETAILS_SUCCESS,\n  REVIEW_DETAILS_FAIL,\n  REVIEW_DELETE_SUCCESS,\n  REVIEW_DELETE_REQUEST,\n  REVIEW_DELETE_FAIL,\n  REVIEW_CREATE_REQUEST,\n  REVIEW_CREATE_SUCCESS,\n  REVIEW_CREATE_FAIL,\n  REVIEW_UPDATE_REQUEST,\n  REVIEW_UPDATE_SUCCESS,\n  REVIEW_UPDATE_FAIL,\n  REVIEW_DETAILS_BY_USER_REQUEST,\n  REVIEW_DETAILS_BY_USER_SUCCESS,\n  REVIEW_DETAILS_BY_USER_FAIL,\n\n} from '../constants/reviewConstants'\nimport { logout } from './userActions'\nimport { setMessage } from \"./utilActions\"\n\n\nexport const listReviews = () => async (dispatch) => {\n  try {\n    dispatch({ type: REVIEW_LIST_REQUEST })\n\n    const { data } = await axios.get('/api/reviews')\n\n    dispatch({\n      type: REVIEW_LIST_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: REVIEW_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listReviewDetails = (id) => async (dispatch) => {\n\n  try {\n    dispatch({ type: REVIEW_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/reviews/${id}`)\n\n    dispatch({\n      type: REVIEW_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: REVIEW_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listReviewDetailsByUser = () => async (dispatch, getState) => {\n\n  try {\n    dispatch({ type: REVIEW_DETAILS_BY_USER_REQUEST })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get('/api/reviews/user', config)\n\n    dispatch({\n      type: REVIEW_DETAILS_BY_USER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: REVIEW_DETAILS_BY_USER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\n\nexport const deleteReview = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: REVIEW_DELETE_REQUEST,\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/reviews/${id}`, config)\n\n    dispatch({\n      type: REVIEW_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: REVIEW_DELETE_FAIL,\n      payload: message,\n    })\n    dispatch(setMessage(message))\n  }\n}\n\nexport const createReview = (review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: REVIEW_CREATE_REQUEST,\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/reviews`, review, config)\n\n    dispatch({\n      type: REVIEW_CREATE_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: REVIEW_CREATE_FAIL,\n      payload: message,\n    })\n\n  }\n}\n\nexport const updateReview = (id, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: REVIEW_UPDATE_REQUEST,\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/reviews/${id}`, review, config)\n\n    dispatch({\n      type: REVIEW_UPDATE_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: REVIEW_UPDATE_FAIL,\n      payload: message,\n    })\n    dispatch(setMessage(message))\n  }\n}\n\n","export default __webpack_public_path__ + \"static/media/proctor.be8a0dc3.svg\";","\nexport const buttonVariants = {\n    initial: {x: -1000, scale: 1},\n    animate: {x: 0},\n    onHover:{scale: 1.2, originX: 0},\n    transition:{\n        type:\"tween\",\n        delay: 1,\n        duration: 2        \n      }\n  }\n  \n  export const topCardVariants = {\n    initial: {x: 1000, scale: 1},\n    animate: {x: 0},\n    transition:{\n        type:\"tween\",\n        delay: 1,\n        duration: 2        \n      }\n  }\n  \n ","import styled from \"styled-components\"\nimport { motion } from \"framer-motion\"\nimport { colors } from \"./breakpoints\"\nimport { Button } from \"./HomeStyle\"\n\nexport const CardDeck = styled(motion.div)`\n    font-family: 'Didact Gothic', sans-serif;\n    font-size: 0.89rem;\n    background-color: ${colors.white};\n    -webkit-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    -moz-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    border-radius: 0;\n    min-width: 230px;\n    max-width: 250px;\n    height: 400px;\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n    transition: all 5s ease;\n    position: relative;\n    \n    .card__front{\n        height: 80%;    \n        position: absolute;\n        visibility: visible;                \n        transition: all 1s ease;\n        \n        \n        img{\n         width: 100%;\n         height: 180px;\n        }\n                \n        .card__frontElements{\n            padding: 15px;\n        }\n        \n        .card__frontElements .categories{\n            display:flex;\n            margin-bottom: 15px;\n            span:nth-child(odd){                \n                background-color: ${colors.darkgray}\n            }\n            span:nth-child(even){                \n                background-color: ${colors.darkred}\n            }\n            span{\n                border-radius: 3px;\n                padding: 3px 10px;\n                margin-right: 10px;\n                color: ${colors.white}\n            }\n        }\n        \n        \n    }\n    \n    .card__back{            \n        position: absolute;\n        visibility: hidden;\n        opacity: 0;\n        padding: 20px 15px;                                \n                        \n        h4{\n            margin: 20px 0 10px 0;\n            font-weight: 600;\n            font-size: 1.1rem;\n            text-align: center;\n        }\n        \n        .card__backTag{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            margin: 15px 0 15px 0;\n            .icon{\n                font-size: 16px;\n                color: ${colors.darkred};\n                margin-right: 5px;\n            }\n            span{\n                font-weight: 600;\n                font-size: 0.9rem;\n            }\n            \n        }\n        p{\n            text-align: center;\n            margin: 21px 0 20px 0;\n        }\n        .link{            \n            text-align: center;\n            a{\n                text-decoration: none;\n                color: ${colors.lightred}\n            }\n        }\n    } \n    \n    \n    \n    &:hover{\n        .card__front{\n            transform: rotateY(180deg);\n            visibility: hidden;\n            opacity: 0                            \n        }\n        .card__back{\n            visibility: visible;\n            opacity: 1\n        }\n    }\n`\n\nexport const CardButton = styled(Button)`\n    position: absolute;\n    bottom: 10px;\n    font-family: 'Didact Gothic', sans-serif;\n    width: 150px;\n    padding: 0.5rem 0.8rem;\n    \n`\n\n//Card Simple Definition\nexport const CardContainer = styled(motion.div)`\n    max-width: 300px;    \n    padding: 20px;\n    background-color: ${props =>\n        props.variant === 'darkblue' ? colors.darkblue :\n            props.variant === 'lightgreen' ? colors.lightgreen :\n                props.variant === 'lightblue' ? colors.lightblue :\n                    props.variant === 'goldish' ? colors.goldish\n                        : null\n    };\n    color: ${props =>\n        props.variant === 'darkblue' ? colors.white :\n            props.variant === 'lightgreen' ? colors.darktext :\n                props.variant === 'lightblue' ? colors.white :\n                    props.variant === 'goldish' ? colors.darktext\n                        : null\n    };\n    .cardimage__panel{\n        border-radius: 50%;\n        width: 140px;\n        background-color: ${props =>\n        props.variant === 'darkblue' ? colors.lightergray :\n            props.variant === 'lightgreen' ? colors.bluetext :\n                props.variant === 'lightblue' ? colors.lightgray :\n                    props.variant === 'goldish' ? colors.bluetext\n                        : null\n    };                                \n        padding: 15px;\n        img{            \n            width: 100%;\n        }\n    }\n        \n    i{\n        border-radius: 50%;\n        color: ${colors.white};\n        background-color: ${props =>\n        props.variant === 'darkblue' ? colors.lightergray :\n            props.variant === 'lightgreen' ? colors.bluetext :\n                props.variant === 'lightblue' ? colors.lightgray :\n                    props.variant === 'goldish' ? colors.bluetext\n                        : null\n    };                                \n        padding: 30px;\n        font-size: 4rem;\n    };      \n            \n    h4{\n        font-family: 'Aclonica', sans-serif;\n        font-size: 1.2rem;  \n        margin-top: 20px\n    }; \n    a{\n        text-decoration: none;     \n        margin-top: 20px !important;\n        color: ${props =>\n        props.variant === 'darkblue' ? colors.white :\n            props.variant === 'lightgreen' ? colors.bluetext :\n                props.variant === 'lightblue' ? colors.white :\n                    props.variant === 'goldish' ? colors.bluetext\n                        : null\n    }   \n    };\n    p,span, a{\n        margin-top: 20px;\n        font-family: 'Jost', sans-serif;\n        font-size: 1.1rem;        \n    }            \n    p{\n        margin-bottom: 20px;\n    }\n    \n    &:hover{       \n        box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.16), 0 12px 10px 0 rgba(0, 0, 0, 0.12);\n    }\n`\n\n//Top card definition\n\nexport const TopCardPane = styled(motion.div)`\n    background-color: ${colors.white};\n    width: 120px;\n    height: 120px;\n    border-radius: 8px;\n    -webkit-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    -moz-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    margin-right: 10px;\n    transition: all 0.5s ease-in-out;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    i{\n        color: ${colors.darkblue};\n        font-size: 30px;   \n        transition: all 1s ease-in-out;     \n    }\n    span{\n        font-family: 'Jost', sans-serif;\n        font-size: 0.9rem;\n    }\n    \n    &:hover{\n        transform: scale(1.1);\n        border-radius: 0 0 8px 8px;\n        border-top: 2px solid ${props =>\n        props.bcolor === 'darkblue' ? colors.darkblue :\n            props.bcolor === 'darkred' ? colors.darkred :\n                props.bcolor === 'lightgray' ? colors.lightgray :\n                    props.bcolor === 'goldish' ? colors.goldish :\n                        colors.lightred\n    };\n        i{\n          color: ${props =>\n        props.bcolor === 'darkblue' ? colors.darkblue :\n            props.bcolor === 'darkred' ? colors.darkred :\n                props.bcolor === 'lightgray' ? colors.lightgray :\n                    props.bcolor === 'goldish' ? colors.goldish :\n                        colors.lightred};\n            transform: rotate(360deg) scale(1.4);\n            \n        }\n`","import React from 'react'\nimport { TopCardPane } from \"../../styles/CardStyle\"\nimport {\n    topCardVariants,\n} from \"../../animationVariants/HomeVariants\"\nimport { Link } from \"react-router-dom\"\n\nconst TopCard = ({ icon, title, bcolor, href }) => {\n    return (\n        <Link to={href}>\n            <TopCardPane\n                bcolor={bcolor}\n                variants={topCardVariants}\n                initial=\"initial\"\n                animate=\"animate\"\n            >\n\n                <i className={icon} />\n                <span>{title}</span>\n\n            </TopCardPane>\n        </Link>\n    )\n}\n\nexport default TopCard\n","export const firstCardContainerVariants = {\n    initial: {y: 100},\n    animate: {y: 0},\n    onHover:{scale: 1.01},\n    transition:{\n        type:\"tween\",\n        delay: 0.1,   \n        duration: 0.1                  \n      }\n  }\n  \n  export const secondCardContainerVariants = {\n    initial: {y: 120},\n    animate: {y: 0},\n    onHover:{scale: 1.01},\n    transition:{\n        type:\"tween\",\n        delay: 0.3,\n        duration: 0.5        \n      }\n  }\n  export const thirdCardContainerVariants = {\n    initial: {y: 140},\n    animate: {y: 0},\n    onHover:{scale: 1.01},\n    transition:{\n        type:\"tween\",\n        delay: 0.5,\n        duration: 0.7        \n      }\n  }\n  \n  export const fourthCardContainerVariants = {\n    initial: {y: 160},\n    animate: {y: 0},\n    onHover:{scale: 1.01},\n    transition:{\n        type:\"tween\",\n        delay: 0.7,\n        duration: 0.9\n      }\n  }","import {\n    firstCardContainerVariants,\n    secondCardContainerVariants,\n    thirdCardContainerVariants,\n    fourthCardContainerVariants\n} from '../animationVariants/CardVariants'\n\n\n\n\nexport const altCardFeatures = [\n    {\n        title: 'Buy Waec Scratch Cards, Tokens, e-PIN',\n        anchor: \"Buy Now!\",\n        color: 'darkblue',\n        variants: firstCardContainerVariants,\n    },\n    {\n\n        title: 'Buy Nabteb Cards, Tokens, and PINs',\n        anchor: \"Buy Now!\",\n        color: 'lightgreen',\n        variants: secondCardContainerVariants,\n    },\n    {\n        title: 'Buy Neco Cards, Result Checker, PINs',\n        anchor: \"Buy Now!\",\n        color: 'lightblue',\n        variants: thirdCardContainerVariants,\n    },\n    {\n        title: \"Get Jamb UTME, Jamb DE, Cards, PINs\",\n        anchor: \"Buy Now!\",\n        color: 'goldish',\n        variants: fourthCardContainerVariants,\n    }\n\n]\n\nexport const counter = [\n    {\n        icon: \"fas fa-users\",\n        max: \"1000\",\n        description: \"lorem posium\"\n    },\n    {\n        icon: \"fas fa-user\",\n        max: \"500\",\n        description: \"lorem posium\"\n    },\n    {\n        icon: \"fab fa-servicestack\",\n        max: \"100\",\n        description: \"lorem posium\",\n    }\n\n\n]\n\n\nexport const topcard_features = [\n    {\n        icon: \"fas fa-exchange-alt\",\n        title: \"Data correction\",\n        bcolor: \"darkblue\",\n        href: '/data-correction/change-of-course-institution'\n    },\n    {\n        icon: \"fas fa-sliders-h\",\n        title: \"Password reset\",\n        bcolor: \"darkred\",\n        href: '/data-correction/jamb-password-reset'\n    },\n    {\n        icon: \"fas fa-cloud-upload-alt\",\n        title: \"Result upload\",\n        bcolor: \"lightgray\",\n        href: '/data-correction/result-upload'\n    },\n    {\n        icon: \"fas fa-shopping-cart\",\n        title: \"Buy pin\",\n        bcolor: \"goldish\",\n        href: '/allcards'\n    },\n]","import React from 'react'\nimport {\n    Image,\n    ScreenDiv,\n    Button\n} from \"../styles/HomeStyle\"\nimport examPerson from \"../svg/proctor.svg\"\nimport { buttonVariants } from \"../animationVariants/HomeVariants\"\nimport TopCard from \"./Cards/TopCard\"\nimport { topcard_features } from \"./JsonAPIs\"\nimport { Link } from 'react-scroll'\n\nconst TopSection = () => {\n    return (\n        <ScreenDiv>\n            <Image src={examPerson} variant=\"homeTopVector\" alt=\"with laptop\" />\n            <div>\n                <div className=\"topcards\">\n                    {topcard_features.map(({ icon, title, bcolor, href }, index) => (\n                        <TopCard\n                            key={index}\n                            icon={icon}\n                            title={title}\n                            bcolor={bcolor}\n                            href={href}\n                        />\n                    ))}\n                </div>\n                <h1>CBT Solutions</h1>\n                <p>Access topnotch CBT solutions including <span>cards, pins & tokens</span></p>\n                <p>Join thousands of learners today.</p>\n                <Link to=\"services\" smooth={true} >\n                    <Button\n                        variants={buttonVariants}\n                        initial=\"initial\"\n                        animate=\"animate\"\n                        whileHover=\"onHover\"\n                    >\n                        Get started\n                </Button>\n                </Link>\n            </div>\n        </ScreenDiv>\n    )\n}\n\nexport default TopSection\n","import React from 'react'\nimport { CardContainer } from \"../../styles/CardStyle\"\nimport { Link } from 'react-router-dom'\n\n\nconst AltCard = ({ id, src, title, desc, href, anchor, color, variants }) => {\n\n    const loc = href === 'all' ? '/allcards' : `/buycards/${id}`\n\n    return (\n        <CardContainer\n            variants={variants}\n            initial='initial'\n            animate='animate'\n            whileHover='onHover'\n            variant={color}\n        >\n\n            {/* <i className={icon}></i> */}\n            <div className=\"cardimage__panel\">\n                <img src={src} alt={title} />\n            </div>\n            <h4>{title}</h4>\n            <p>{desc}</p>\n            <Link to={loc} >{anchor}</Link>\n        </CardContainer>\n    )\n}\n\nexport default AltCard\n","import React from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Message = ({ variant, children }) => {\n\n  return (\n    <div >\n      <Alert severity={variant}>\n        {/* <AlertTitle>Error</AlertTitle> */}\n        {children}\n      </Alert>\n    </div>\n  );\n}\n\nMessage.defaultProps = {\n  severity: \"error\"\n}\n\nexport default Message;","import React from 'react'\nimport AltCard from \"./Cards/AltCard\"\nimport Loader from \"./Loaders/SimpleLoader\"\nimport Message from \"./Message\"\nimport {\n  firstCardContainerVariants,\n  secondCardContainerVariants,\n  thirdCardContainerVariants,\n  fourthCardContainerVariants\n} from '../animationVariants/CardVariants'\n\nconst LoadCards = ({ loading, cards, error, href }) => {\n\n  const chooseVariant = (index) => {\n    if (index === (10 % 10)) {\n      return firstCardContainerVariants\n    } else if (index === ((10 % 10) + 1)) {\n      return secondCardContainerVariants\n    } else if (index % 2 === 0) {\n      return thirdCardContainerVariants\n    } else if (index === ((10 % 10) + 3)) {\n      return fourthCardContainerVariants\n    } else if ((index % 2) !== 0) {\n      return thirdCardContainerVariants\n    } else {\n      return fourthCardContainerVariants\n    }\n  }\n\n  const chooseColor = (index) => {\n    if (index === (10 % 10)) {\n      return \"darkblue\"\n    } else if (index === ((10 % 10) + 1)) {\n      return \"lightgreen\"\n    } else if (index % 2 === 0) {\n      return \"lightblue\"\n    } else if (index === ((10 % 10) + 3)) {\n      return \"goldish\"\n    } else if ((index % 2) !== 0) {\n      return \"lightblue\"\n    } else {\n      return \"goldish\"\n    }\n  }\n\n  return (\n    <>\n      <h2>Our Cards</h2>\n      <p className=\"top__paragraph\">\n        At Pin Cafes, we are a step ahead in providing you the best card services. Buy cards from our pool of cards today.</p>\n\n      <div className=\"card__container\">\n        {loading ?\n          <Loader /> :\n          error ?\n            <Message variant=\"error\">\n              {error}\n            </Message>\n            :\n            cards && cards.map((feature, index) => (\n              <AltCard\n                key={feature._id}\n                id={feature._id}\n                src={feature.upload.image}\n                title={feature.name}\n                desc={feature.description}\n                anchor=\"Buy Now!\"\n                color={chooseColor(index)}\n                variants={chooseVariant(index)}\n                href={href}\n              />\n            ))\n        }\n      </div>\n    </>\n  )\n}\n\nexport default LoadCards\n","import React from \"react\"\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n    return (<Helmet>\n        <title>{title}</title>\n        <meta name='description' content={description} />\n        <meta name='keyword' content={keywords} />\n    </Helmet>\n\n\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Welcome To Pin Cafes',\n    description: 'Pin Cafes is the number one place to purchase WAEC, NECO, NABTEB and other exam scratch cards. You can also do Jamb data correction, O level upload and passport reset.',\n    keywords: 'cards, scratch cards, PINs, Tokens, result checkers, Jamb password reset, data correction, o level upload, JAMB, UTME, DE, Direct Entry',\n}\n\nexport default Meta","import React, { useEffect } from 'react'\nimport Header from \"../components/MainHeader\"\nimport {\n    HomeTopContainer,\n    HomeTabContainer,\n    HomeAltCardContainer,\n    HomeTestimonialContainer,\n} from \"../styles/HomeStyle\"\nimport { Divider } from \"../styles/globalStyles\"\nimport { size } from \"../styles/breakpoints\"\nimport Wavebottom from \"../svg/wavebottom.js\"\nimport Tabs from \"../components/TabContainer\"\nimport Testimonial from \"../components/Testimonial\"\nimport TopSection from \"../components/TopSection\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { listFewCards } from '../redux/actions/cardActions'\nimport LoadCards from \"../components/LoadCards\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst HomePage = ({ setShowDrawer }) => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(listFewCards(4))\n    }, [dispatch])\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    const cardListFew = useSelector(state => state.cardListFew)\n    const { loading: cardsLoading, cards, error: cardsError } = cardListFew\n\n\n\n    return (\n        <React.Fragment>\n            <Meta />\n            <HomeTopContainer>\n                <Header setShowDrawer={setShowDrawer} />\n                <TopSection />\n                <Wavebottom />\n            </HomeTopContainer>\n\n            <HomeTabContainer id=\"services\">\n                <Tabs />\n            </HomeTabContainer>\n\n\n            <HomeAltCardContainer>\n                <Divider />\n                <LoadCards\n                    loading={cardsLoading}\n                    cards={cards}\n                    error={cardsError}\n                    href=\"all\"\n                />\n\n            </HomeAltCardContainer>\n\n\n            <HomeTestimonialContainer>\n                <Divider />\n                <div className=\"testimonial__content\">\n                    <h2>Client testimonials</h2>\n                    <p>Hear what other customers say about Pin Cafes.</p>\n\n                    <Testimonial\n                        perPage={\n                            window.innerWidth >= parseInt(size.laptop_lg) ? 3 :\n                                window.innerWidth >= parseInt(size.tablet) ? 2 : 1}\n\n                    />\n                </div>\n\n            </HomeTestimonialContainer>\n\n        </React.Fragment>\n    )\n}\n\nexport default HomePage\n","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { device } from \"./breakpoints\"\nimport { TabContainer } from \"./TabStyle\"\nimport { Button } from \"./HomeStyle\"\n\nexport const AuthMainContainer = styled.div`\n    min-height: 70vh;\n    display: grid;\n    place-items: center;\n`\n\nexport const AuthTabContainer = styled(TabContainer)`\n    \n    -webkit-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    -moz-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    width:40%;\n    margin: 50px auto; \n    \n    \n    @media ${device.tablet}{\n        width:100%;\n    }\n   \n    .register__text{        \n        font-family: 'Jost', sans-serif;\n        text-align: center;\n        *{\n            margin-bottom: 20px;\n        }\n        h6{\n            font-family: 'Aclonica', sans-serif;\n            font-weight: 400\n        }\n        p{\n            font-weight: 300 !important;\n        }   \n    }\n\n    .actioncontainer{\n        margin: 0 auto;\n        width: 100%;\n    }\n    \n    .tabs div div{\n        \n        width: 100%;\n        @media ${device.tablet}{            \n            flex-direction: row;\n        };       \n    }   \n    .tabs div div button{\n        font-family: 'Jost', sans-serif !important;\n        border-radius: 0 !important;\n        background-color: #F9F9F9;\n        \n    }\n                                   \n    .login__buttons{\n        display:flex;\n        flex-direction: column;\n    }\n`;\n\nexport const AuthButton = styled(Button)`\n    width: 100% !important;\n`\n\nexport const FacebookButton = styled(motion.div)`\n    \n    width: 100% !important;        \n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 20px;\n    span{\n        border-radius: 10px !important;\n        width: 100%\n    }\n    \n    .MuiSvgIcon-root{\n        margin-right: 5px;\n    }\n    .kep-login-facebook{\n        font-family: 'Jost', sans-serif !important;\n        font-weight: 500 !important;\n        text-transform: capitalize;\n        width: 100% !important;\n       \n    }\n`\n\nexport const GoogleButton = styled(Button)``\n\nexport const EmailConfirmation = styled(motion.div)`\n    \n    height: 90vh;    \n    display: grid;\n    place-items: center;\n    div{\n        display: grid;\n        place-items: center;\n    }\n`;\n\nexport const PasswordResetContainer = styled(motion.div)`\n    height: 90vh;    \n    display: grid;\n    place-items: center;\n    font-family: 'Jost', sans-serif;    \n    .content{\n        .MuiInputLabel-root, .content, input, .message{\n            font-family: 'Jost', sans-serif;\n        }\n        .MuiFormControl-root, h2{\n            margin-bottom: 15px;\n        }\n        .message{\n            text-align: center;\n            margin-bottom: 20px;\n        }\n        -webkit-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        -moz-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        padding: 50px;\n        border-radius: 10px\n    }\n`\n\nexport const ResetButton = styled(Button)`\n    width: 100% !important;\n`","import React, {useState, useEffect} from 'react';\nimport {Grid, Typography, TextField, IconButton, InputAdornment, Box} from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport {AuthButton} from \"../../styles/AuthStyle\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {register} from \"../../redux/actions/userActions\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport Message from \"../../components/Message\"\nimport {useHistory} from \"react-router-dom\"\n\n\nexport default function Register() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    \n    const userRegister = useSelector(state => state.userRegister)\n    const{loading, error, result } = userRegister\n    \n    useEffect(()=>{\n    \n    }, [history])\n    \n  \n    const [values, setValues] = useState({        \n        password: '',        \n        showPassword: false,\n        confirmPassword: '',\n        showConfirmPassword: false,\n        email: '',\n        name: '',\n        message: ''                        \n    });\n    \n    const handleSubmit = (e) =>{\n      e.preventDefault()\n      //Dispatch register\n      if(values.password !== values.confirmPassword){\n        setValues({...values, message: 'Passwords do not match'})\n      }else{\n        dispatch(register(\n                  values.name, \n                  values.email, \n                  values.password\n          ))                 \n      }      \n    }\n    \n    \n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    \n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n      };\n    \n    const handleClickShowConfirmPassword = () => {\n        setValues({ ...values, showConfirmPassword: !values.showConfirmPassword });\n    };\n    \n      const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n      };\n    \n  return (\n    <React.Fragment>\n    \n      <Box className=\"register__text\" mt={2} mb={4} >      \n        <Typography variant=\"h6\" gutterBottom>\n            Welcome!\n            \n          </Typography>\n      \n        <p>\n            SignUp with Pin Cafes to get started\n        </p>  \n        <p> \n          {values.message && <Message variant=\"error\">{values.message}</Message>}  \n             \n        </p>\n        <p>         \n          {\n            loading ? <Loader /> :            \n            error ? <Message variant=\"error\">{error}</Message>  :\n            result && <Message>{result.message}</Message>\n          }  \n        </p>\n        \n      </Box>\n      \n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Grid container spacing={3}>        \n      \n      <Grid item xs={12}>\n          <TextField\n            required            \n            label=\"Name\"\n            value={values.name}\n            onChange={handleChange('name')}\n            fullWidth\n            autoComplete=\"Enter full name\"\n            InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <PersonIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n          />\n        </Grid>\n                \n        <Grid item xs={12}>\n          <TextField\n            required                \n            label=\"Email\"\n            type=\"email\"\n            value={values.email}\n            onChange={handleChange('email')}\n            fullWidth\n            autoComplete=\"off\"\n            InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <DraftsIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField   \n            required                     \n            label=\"Password\"\n            type={values.showPassword ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange('password')}\n            fullWidth\n            autoComplete=\"Enter password\"\n            InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <i className=\"fas fa-key\"></i>\n                                </InputAdornment>\n                            ),\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                    >\n                                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            ),\n                        }}\n          />\n        </Grid>\n        \n        <Grid item xs={12}>\n          <TextField         \n            required               \n            label=\"Confirm Password\"\n            value={values.confirmPassword}\n            type={values.showConfirmPassword ? 'text' : 'password'}\n            onChange={handleChange('confirmPassword')}\n            fullWidth\n            autoComplete=\"Enter password again\"\n            InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <i className=\"fas fa-key\"></i>\n                                </InputAdornment>\n                            ),\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowConfirmPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                    >\n                                        {values.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            ),\n                        }}\n          />\n        </Grid>\n        <AuthButton type=\"submit\">Sign Up</AuthButton>\n      </Grid>\n      </form>\n    </React.Fragment>\n  );\n}","import React, { useState } from 'react'\nimport FacebookLogin from \"react-facebook-login\"\nimport { useDispatch } from \"react-redux\"\nimport { facebooklogin } from \"../../redux/actions/userActions\"\nimport { FacebookButton } from \"../../styles/AuthStyle\"\n\n\nconst Facebook = () => {\n    const [clicked, setClicked] = useState(false)\n    const dispatch = useDispatch()\n\n\n    const componentClicked = () => {\n        setClicked(true)\n    }\n    const responseFacebook = response => {\n        dispatch(facebooklogin(response.userID, response.accessToken))\n    }\n\n    return (\n        <FacebookButton>\n            <FacebookLogin\n                icon=\"fa-facebook\"\n                appId=\"634436600775486\"\n                autoLoad={false}\n                fields=\"name,email,picture\"\n                onClick={componentClicked}\n                callback={clicked && responseFacebook}\n                textButton=\"&nbsp;Sign In with Facebook\"\n\n            />\n        </FacebookButton>\n    )\n}\n\nexport default Facebook\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Typography, TextField, IconButton, InputAdornment, Box } from '@material-ui/core';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { AuthButton } from \"../../styles/AuthStyle\"\n// import {FacebookButton} from \"../../styles/AuthStyle\"\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport FacebookButton from \"./Facebook\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport Message from \"../../components/Message\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { login } from \"../../redux/actions/userActions\"\nimport { useHistory, Link } from \"react-router-dom\"\n\nconst ConfirmLink = () => (\n  <div>\n    <span>You should first confirm your email </span>\n    <Link to=\"/auth/resendemail\">Resend Code</Link>\n  </div>\n)\n\nexport default function SignIn() {\n  const [values, setValues] = useState({\n    password: '',\n    showPassword: false,\n    email: '',\n    message: ''\n  });\n\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const userLogin = useSelector(state => state.userLogin)\n  const { error, loading, userInfo } = userLogin\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    dispatch(login(values.email, values.password))\n  }\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\")\n    }\n  }, [history, userInfo])\n\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (e) => {\n    e.preventDefault();\n  };\n\n\n\n\n  return (\n    <React.Fragment>\n\n      <Box className=\"register__text\" mt={2} mb={4} >\n        {loading && <Loader />}\n        <Typography variant=\"h6\" gutterBottom>\n          Welcome back!\n          </Typography>\n\n        <p>\n          Signin to get started\n            {values.message && <Message variant=\"info\">{values.message}</Message>}\n          {error && <Message variant=\"error\">\n            {error.includes('not confirmed') ?\n              <ConfirmLink />\n              : error}\n          </Message>}\n\n        </p>\n      </Box>\n\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n\n          <Grid item xs={12}>\n            <TextField\n              required\n              label=\"Email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange('email')}\n              fullWidth\n              autoComplete=\"email\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <DraftsIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              label=\"Password\"\n              type={values.showPassword ? 'text' : 'password'}\n              value={values.password}\n              onChange={handleChange('password')}\n              fullWidth\n              autoComplete=\"Enter password\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <i className=\"fas fa-key\"></i>\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <div style={{ width: '100%', textAlign: 'right' }}>\n              <Link\n                to=\"/auth/forgotpassword\"\n                style={{ textDecoration: 'none' }}>\n                <small>\n                  Forgot password?\n              </small>\n              </Link>\n            </div>\n\n          </Grid>\n\n          <div className=\"actioncontainer\">\n            <AuthButton>Sign In</AuthButton>\n\n            <FacebookButton>\n              <FacebookIcon /> <span>Signin with Facebook</span>\n            </FacebookButton>\n          </div>\n\n        </Grid>\n      </form>\n\n    </React.Fragment>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TabPanel from \"../TabContainer/TabPanel\"\nimport a11yProps from \"../TabContainer/allProps\"\nimport { colors } from \"../../styles/breakpoints\"\nimport Register from \"./Register\"\nimport SignIn from \"./SignIn\"\nimport { useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n}));\n\nexport default function Auth() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n  const [signInActive, setSignInActive] = useState(false)\n  const [signUpActive, setSignUpActive] = useState(true)\n\n  const history = useHistory()\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo) {\n      // history.goBack()\n    }\n  }, [userInfo, history])\n\n  const borderStyle = `0.5px solid ${colors.background}`\n\n  const handleSignInButton = () => {\n    setSignInActive(true)\n    setSignUpActive(false)\n  }\n\n  const handleSignUpButton = () => {\n    setSignInActive(false)\n    setSignUpActive(true)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        className=\"tabs\"\n        value={value}\n        onChange={(e, newVal) => setValue(newVal)}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n        aria-label=\"Auth tab\"\n      >\n        <Tab\n          label=\"Sign In\"\n          icon={<i className=\"fas fa-sign-in-alt\"></i>} {...a11yProps(0)}\n          style={{\n            backgroundColor: signUpActive && colors.white,\n            borderLeft: signInActive && borderStyle,\n            borderBottom: signInActive && borderStyle\n          }}\n          onClick={handleSignUpButton}\n        />\n\n        <Tab\n          label=\"Sign Up\"\n          icon={<i className=\"fas fa-user-plus\"></i>} {...a11yProps(1)}\n          style={{\n            backgroundColor: signInActive && colors.white,\n            borderRight: signUpActive && borderStyle,\n            borderBottom: signUpActive && borderStyle,\n          }}\n          onClick={handleSignInButton}\n        />\n      </Tabs>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={(index) => setValue(index)}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <SignIn />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <Register />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react'\nimport { AuthTabContainer, AuthMainContainer } from \"../styles/AuthStyle\"\nimport Header from \"../components/MainHeader\"\nimport AuthPanel from \"../components/Auth/\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst AuthPage = () => {\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    return (\n        <div>\n            <Meta />\n            <Header />\n            <AuthMainContainer>\n                <AuthTabContainer>\n                    <AuthPanel />\n                </AuthTabContainer>\n            </AuthMainContainer>\n        </div>\n    )\n}\n\nexport default AuthPage\n","import styled from \"styled-components\"\nimport { motion } from \"framer-motion\"\nimport { device, colors } from \"./breakpoints\"\nimport { CardContainer } from \"./CardStyle\"\n\nimport { Button, HomeAltCardContainer } from \"./HomeStyle\"\n\nconst numrangeDim = '200px'\nconst numCircle = '50px'\n\nexport const BaseContainer = styled(motion.div)`\n    background-color: ${colors.background};      \n    min-height: 65vh;  \n    \n    font-family: 'Jost', sans-serif;\n    h1{\n        font-family: 'Aclonica', sans-serif;\n        font-size: 1.5rem;\n        font-weight: 300;\n    }\n    \n    .topimage{\n        background-image: url(/images/slide5.jpg);\n        background-color: ${colors.darktext};\n        background-blend-mode: lighten;\n        background-position: center;\n        height: 30vh;     \n        @media ${device.laptop}{\n            height: ${props => props.height}\n        }\n        display: grid; \n        place-items: center; \n                \n        .centeritem{            \n            width: fit-content;                \n            \n            text-align:center;\n            img{\n                width: calc(40vh/1.8);                 \n            }            \n            h4{\n                color: ${colors.white};\n                font-weight: 400;\n                font-size: 2rem;\n            }\n        }\n        \n    }\n   \n    \n    .edit{\n        flex-direction: column;\n        align-items: center;\n        padding-top: 20px !important;   \n    }\n\n    .card__content__info{\n       display: flex;\n       justify-content: center;\n        margin: 50px 80px;    \n        @media ${device.tablet}{\n            flex-direction: column;\n            margin: 50px 0;    \n        }\n    }\n\n\n    .howto{\n        flex: 0.5;\n        margin: 0 50px;\n\n        @media ${device.tablet}{\n            flex: 1;\n            margin: 0 50px;\n            border-bottom: 2px solid ${colors.goldish}\n        }\n        \n        h2{\n            font-family: 'Aclonica', sans-serif;\n        }\n        ul{\n            list-style:none;\n            li{\n                padding: 10px 0;\n                display: flex;\n                align-items: center;\n                .MuiSvgIcon-root{\n                    color: ${colors.darkred};\n                    margin-right: 3px;\n                }\n            }\n        }\n        \n    }\n\n    .howto_services{\n        flex: 1;\n    }\n    \n    .buyinfo--first{\n        display:flex;\n        justify-content: center;\n        \n        padding-top: 50px;\n        \n        .contents{\n            .numrange{\n                h5{\n                    font-weight: 400;\n                    font-size: 1.2rem;\n                    text-align: center;\n                    margin-bottom: 5px;\n                    hr{\n                        width: 30%;\n                        margin: 5px auto 20px auto;\n                        height: 2px;\n                        border: 0;\n                        outline: 0;\n                        background-color: ${colors.goldish};\n                        color: ${colors.goldish};\n                    }\n                }\n            }\n            \n            margin-top: 30px;            \n                        \n            .price__items{\n                margin-top: 20px;\n                display: flex;\n                \n                \n                .price{\n                    font-size: 1.8rem;\n                    margin-right: 20px;\n                    font-weight: 600;\n                    color: ${colors.darkred}\n                }\n                small{\n                    display:flex;\n                    align-items: center;\n                    \n                    div{\n                        width: 8px;\n                        height: 8px;\n                        background-color: orange;\n                        border-radius: 50%;\n                    }\n                    span{\n                        margin-left: 5px;\n                    }\n                }\n            }\n        }\n    }\n    \n    .buyinfo--second{\n        \n        position: relative;\n        \n        .backbutton{\n            position: absolute;\n            top: 50px;\n        }\n        .MuiTableCell-root{\n            font-family: 'Jost' !important;\n        }\n        \n        .paymentmethod{                     \n            margin: 50px auto;\n            background-color: ${colors.white};\n            box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n            padding: 40px 80px;\n            border-radius: 5px;\n            .paymenttitle{                \n                margin-bottom: 15px;\n            }\n            .paymenttitle, .paymentitem .MuiFormControlLabel-label{\n                font-family: 'Jost' !important;\n            }\n        }   \n        hr{\n            border: 0;\n            outline: 0;\n            background: ${colors.goldish};\n            height: 2px;\n            margin-top: 20px;\n        }\n        .bottom{\n            margin-bottom: 20px;\n        }\n        .paymentmethod-alt{    \n            display: flex;\n            flex-direction: column;\n            align-items: center;                 \n            margin: 10px auto;            \n            background-color: ${colors.white};            \n            padding: 20px 0;\n            text-align: center;            \n            border-radius: 5px;\n            .paymenttitle{                \n                margin-bottom: 15px;\n            }\n            .paymenttitle, .paymentitem .MuiFormControlLabel-label{\n                font-family: 'Jost' !important;\n            }\n        }       \n    }\n    \n    .buyinfo--third{\n        \n        position: relative;\n        \n        .backbutton{\n            position: absolute;\n            top: 50px;\n        }\n        \n        .table{\n            margin: 0 auto;\n            width: fit-content;\n            \n            .table__action{\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                \n                a{\n                    display: flex;\n                    align-items: center;\n                    font-size: 1.2rem;\n                    color: ${colors.darkred};\n                    text-decoration: none;\n                }\n            }\n        }\n    }\n    .number{\n        font-family: 'Aclonica', sans-serif;\n        color: ${colors.goldish};\n        border-radius: 50%;\n        width: ${numCircle};\n        height: ${numCircle};\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 2px solid ${colors.goldish};\n        span{\n            font-size: calc(${numCircle}/1.4)\n        }\n        margin: 0 auto;\n        \n    }\n    \n    .buyinfo--edit{\n        flex: 0.5;\n        @media ${device.tablet}{\n            flex: 1;\n            align-items: center;\n            justify-content: center;\n          \n            padding: 0 40px;\n            margin: 0 auto;\n            margin-bottom: 40px;\n        }\n    \n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        background-color: white;\n       \n        width: fit-content;\n        @media ${device.mobile_lg}{\n                width: 100%;\n        }\n        padding-bottom: 20px;    \n    }\n    .editaction{\n        margin: 0 auto;\n    }\n    \n    .success{\n        margin-top: 10px;        \n        a{\n            color: ${colors.white};\n            text-decoration:none;\n            font-weight: 800;\n            margin-left: 3px;\n            border-bottom: 2px solid ${colors.goldish};\n        }\n    }\n`;\n\nexport const InputGroupContainer = styled(motion.div)`\n    display: flex;\n    border: 2px solid ${colors.lightergray};\n    background: #F9FAFD; \n    border-radius: 5px;    \n    width: ${props => `${props.width + 330}px` || '100%'};\n    \n    span{\n        \n        background: #F9FAFD;        \n        padding: 10px;                \n    }\n    input[type=text]{\n        margin-left: 5px;\n        border: 0;\n        outline: 0;\n        flex-grow: 1;\n        font-size: 1.5rem;        \n    }        \n`;\n\nexport const NumRangeContainer = styled(motion.div)`\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: ${props => `${props.size}px` || numrangeDim};\n    height: calc(${props => `${props.size}px` || numrangeDim} /3);\n    \n    button{\n        border: 0;\n        outline: 0;\n        cursor: pointer;\n        width: 33%;\n        height: 100%;\n    }\n    span{\n        font-size: calc(${props => `${props.size}px` || numrangeDim} / 4.7);\n        width: 33%;\n        height: 100%;\n        text-align: center;\n        margin: auto 0;\n    }\n`\nexport const CardButton = styled(Button)`\n    margin: 0 0 0 45px;\n    width: fit-content;\n    display:flex;\n    align-items: center;\n    .MuiSvgIcon-root{\n        margin-left: 5px;\n    }\n`\n\nexport const BackButton = styled(Button)`    \n    border: 2px solid ${props => props.variant || colors.lightgray};\n    background: ${props => props.variant || colors.lightgray};\n    margin: 0 0 0 80px;\n    width: fit-content;\n    display:flex;\n    align-items: center;\n    .MuiSvgIcon-root{\n        margin-left: 5px;\n    }\n`\nexport const NextButton = styled(BackButton)`        \n    margin:0 !important;    \n        \n`\n\n\nexport const PayButton = styled(NextButton)`                   \n    padding: 0.2rem 1.4rem;\n    \n    background: ${colors.lightred};    \n    border: 2px solid ${colors.lightred};\n    margin: 5px auto !important;\n    i{\n        margin: 0;\n        padding: 0;\n        font-size: ${props => props.customsize + 'px'}\n    }\n`\n\nexport const EditButton = styled(NextButton)`                   \n    padding: 0.2rem 1.4rem;\n    background: ${colors.goldish};    \n    border: 2px solid ${colors.goldish};\n    margin: 5px auto !important;\n    \n`\n\n\nexport const CardMoreContainer = styled(HomeAltCardContainer)`\n    padding: 0 80px 10px 80px !important;   \n    \n    @media ${device.mobile_lg}{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 0 20px 10px 20px !important;\n    }\n`\n\nexport const ServicesContainer = styled(HomeAltCardContainer)`\n    padding: 40px 80px 10px 80px !important;   \n    \n    @media ${device.mobile_lg}{\n        padding: 40px 20px 10px 20px !important;\n    }\n    .items{\n        display: grid;\n        place-items: center;\n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 20px;\n         @media ${device.tablet}{\n            grid-template-columns: 1fr;\n         }\n    }\n    \n   \n    grid-gap: 40px;\n`\n\nexport const ServiceTypeContainer = styled(HomeAltCardContainer)`\n    padding: 40px 80px 10px 80px !important;   \n    @media ${device.tablet_md}{\n        padding: 40px 5px 10px 5px !important;   \n    }\n    display: grid;    \n    place-items: center;\n    \n`\n\nexport const ServicesCard = styled(CardContainer)` \n    max-width: 100%;\n    text-align: center;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n    background-color: ${props =>\n        props.variant === 'lightish' ? colors.white\n            : null\n    };\n    \n    color: ${props =>\n        props.variant === 'lightish' ? colors.darktext\n            : null\n    };\n                    \n   .icondiv{\n       width: fit-content;       \n       margin: 0 auto;\n       i{\n        font-size: 3rem;              \n    }\n   }        \n    p{\n        text-align: center;\n        a{\n            font-weight: bold;\n            color: ${colors.darkred};\n            border-bottom: 1px solid ${colors.dimwhite}\n        }\n    }   \n`\n\nexport const ServicePanel = styled(ServicesCard)`\n    width: 70%;      \n   \n    @media ${device.tablet}{\n        width: 100%;\n    }    \n    display: block;\n    p, span, a{\n        margin-top: 0px;\n    }\n    p{\n        text-align: left;\n        margin-top: 0;\n        margin-bottom: 0;\n        font-size: 0.75rem;\n    }\n    .MuiFormControl-root{\n        margin-top: 15px;\n    }\n    textarea{\n        padding: 10px;\n        border: 1px solid ${colors.midtext};\n        border-radius: 10px;\n    }\n    \n    .choices{\n        display: grid;        \n        grid-template-columns: repeat(2, 1fr);\n        @media ${device.mobile_lg}{\n            grid-template-columns: 1fr;\n        }\n        grid-gap: 20px;                \n        place-items: center;\n        margin: 20px 0;\n        .choiceitem{       \n            box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);     \n            border-radius: 10px;\n            h3{\n                padding: 10px;\n                border-radius: 10px;\n                font-family: \"Aclonica\", sans-serif;\n                background-color: ${colors.dimwhite};                \n            }\n            .content{\n                padding: 10px 20px 15px 10px;\n            }\n        }\n    }\n\n    \n    .topmainitem{\n        display: flex;        \n        justify-content: space-between;    \n        @media ${device.mobile_lg}{\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            \n        }    \n        \n        div{            \n            i{\n                color: ${colors.darkred};\n                font-size: 1.5rem;\n            }            \n            display: flex;\n            align-items: center;\n            justify-content: flex-start;\n            \n        }\n    }\n    .numrange--services{\n        \n        div{          \n           margin-left: 0;            \n        }\n        .label{            \n            text-align: left;\n        }\n        margin: 20px 0;\n    }\n    \n    .filesection{\n        margin-bottom: 50px;\n    }\n\n    .subjectselect{\n        div.entry{\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            span{\n                align-self: flex-end;\n                padding-bottom: 8px;\n            }\n        }\n       \n    }\n    .paymentinfo{\n        display: grid;\n        place-items: center;    \n        position: relative;    \n        .paymentresults{\n            position: fixed;\n            left: 0;\n            height:100%;\n            width: 100%;\n            z-index: 3;\n        }\n        div{\n            margin: 0 auto;            \n        }\n               \n    }\n`\nexport const ListFeatureElement = styled.div`\n    margin: 20px 0;\n    padding: 0 10px;\n    border: 1px solid ${colors.background};\n\n    .entriesrow{\n        display: flex;\n        justify-content: space-between;\n    }\n`\nexport const NoMarginBackButton = styled(NextButton)`\n`\n\nexport const ButtonGroup = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-top: 20px;\n`\n\nexport const ButtonSingle = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n`\n\nexport const ServiceAlertContainer = styled.div`\n    font-family: 'Jost', sans-serif;\n    .amount{\n        color: ${colors.goldish};\n        font-weight: 800;\n        border-bottom: 2px solid ${colors.goldish}\n    }\n`","import React from 'react'\nimport { BaseContainer } from \"../../styles/ServiceStyle.js\"\nimport Header from \"../MainHeader\"\n\nconst Base = ({ TopImage, topText, children }) => {\n\n    return (\n        <>\n            <Header />\n            <BaseContainer height='20vh'>\n                <div className=\"topimage\">\n                    <div className=\"centeritem\">\n                        {TopImage}\n                        <h4>{topText}</h4>\n                    </div>\n                </div>\n                {children}\n            </BaseContainer>\n        </>\n    )\n}\n\nexport default Base","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    firstCardContainerVariants,\n    secondCardContainerVariants,\n    thirdCardContainerVariants,\n    // fourthCardContainerVariants\n} from '../../animationVariants/CardVariants'\nimport { ServicesCard } from \"../../styles/ServiceStyle\"\n\nconst ServicesItems = () => {\n    return (\n        <>\n            <ServicesCard\n                variants={firstCardContainerVariants}\n                initial='initial'\n                animate='animate'\n                whileHover='onHover'\n                variant=\"darkblue\"\n            >\n\n                <div className=\"icondiv\">\n                    <i className=\"fas fa-cloud-upload-alt\"></i>\n                </div>\n                <h4>Jamb O-Level Result Upload</h4>\n                <p>Fast Jamb O-Level upload. We offer fast response.\n                <Link to=\"/data-correction/result-upload\"> here</Link>\n                </p>\n            </ServicesCard>\n            <ServicesCard\n                variants={secondCardContainerVariants}\n                initial='initial'\n                animate='animate'\n                whileHover='onHover'\n                variant=\"lightgreen\"\n            >\n\n                <div className=\"icondiv\">\n                    <i className=\"fas fa-exchange-alt\"></i>\n                </div>\n                <h4>Change of Course & Institution</h4>\n                <p>Change institutions for all Jamb accredited schools.\n                Fast response and exceptional service. <Link to=\"/data-correction/change-of-course-institution\">here</Link>\n                </p>\n            </ServicesCard>\n            <ServicesCard\n                variants={thirdCardContainerVariants}\n                initial='initial'\n                animate='animate'\n                whileHover='onHover'\n                variant=\"lightblue\"\n            >\n\n                <div className=\"icondiv\">\n                    <i className=\"fas fa-history\"></i>\n                </div>\n                <h4>Jamb Password Reset</h4>\n                <p>Reset your Jamb password with just a few mouse clicks. <Link to=\"/data-correction/jamb-password-reset\">here</Link>\n                </p>\n            </ServicesCard>\n\n        </>\n    )\n}\n\nexport default ServicesItems\n","import React from 'react'\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CurrencyFormat from 'react-currency-format';\n\nconst JambServiceHowTo = () => {\n    return (\n        <div className='howto howto_services'>\n            <h2>How It Works</h2>\n            <ul>\n                <li>\n                    <CheckBoxIcon /> Choose the service you want from the cards.\n                </li>\n                <li>\n                    <CheckBoxIcon /> <p>\n                        Make sure you have successfully paid the <CurrencyFormat\n                            value={2500}\n                            displayType={'text'}\n                            thousandSeparator={true}\n                            prefix={'₦'}\n                            renderText={value => <span className='amount'>{value}</span>} /> in Jamb portal.\n                    </p>\n                </li>\n                <li>\n                    <CheckBoxIcon /> Fill the form and upload requisite documents (if required). Click next.\n                </li>\n                <li>\n                    <CheckBoxIcon /> Go through the overview and ensure your information is correct. Click next.\n                </li>\n                <li>\n                    <CheckBoxIcon /> Pay either with wallet, paystack, or flutterwave. Fund your wallet to use wallet.\n                </li>\n\n            </ul>\n        </div>\n    )\n}\n\nexport default JambServiceHowTo\n","import React, { useEffect } from 'react'\nimport BaseRoot from \"../components/Services/BaseRoot\"\nimport { ServicesContainer } from \"../styles/ServiceStyle\"\nimport ServicesItems from \"../components/Services/ServicesItems\"\nimport { useSelector } from \"react-redux\"\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport Message from \"../components/Message\"\nimport Meta from \"../components/Meta\"\nimport JambServiceHowTo from '../components/Services/JambServiceHowTo'\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst AllServices = () => {\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    const changeOfCourseOrderCreate = useSelector(state => state.changeOfCourseOrderCreate)\n    const { loading: cocLoading, error: cocError, success: cocSuccess } = changeOfCourseOrderCreate\n\n    const oLevelUploadOrderCreate = useSelector(state => state.oLevelUploadOrderCreate)\n    const { loading: oluLoading, error: oluError, success: oluSuccess } = oLevelUploadOrderCreate\n\n    const jambPasswordResetOrderCreate = useSelector(state => state.jambPasswordResetOrderCreate)\n    const { loading: jprLoading, error: jprError, success: jprSuccess } = jambPasswordResetOrderCreate\n\n    const walletDebit = useSelector(state => state.walletDebit)\n    const { loading: walletLoading, error: walletError } = walletDebit\n\n    return (\n        <BaseRoot topText=\"Services\">\n            <Meta />\n\n            {\n                walletLoading ? <Loader /> :\n                    walletError ?\n                        <Message variant=\"error\">\n                            {walletError}\n                                        Try again\n                                </Message>\n                        :\n                        null\n            }\n            {\n                cocLoading ? <Loader /> :\n                    cocError ?\n                        <Message variant=\"error\">{cocError}</Message>\n                        :\n                        cocSuccess ?\n                            <div>\n                                <Message variant=\"info\">\n                                    Successful. We'll get back to you soon.\n                                    </Message>\n                            </div>\n                            : ''\n            }\n\n            {\n                oluLoading ? <Loader /> :\n                    oluError ?\n                        <Message variant=\"error\">\n                            {oluError}\n                        </Message>\n                        :\n                        oluSuccess ?\n                            <Message variant=\"info\">\n                                Successful. We'll get back to you soon.\n                                </Message>\n                            : ''\n            }\n\n            {\n                jprLoading ? <Loader /> :\n                    jprError ?\n                        <Message variant=\"error\">\n                            {jprError}\n                        </Message>\n                        :\n                        jprSuccess ?\n                            <div><Message variant=\"info\">\n                                Successful. We'll get back to you soon.\n                                </Message> </div>\n                            : ''\n            }\n\n            <ServicesContainer>\n                <div className=\"items\">\n                    <ServicesItems />\n                </div>\n                <JambServiceHowTo />\n            </ServicesContainer>\n        </BaseRoot>\n    )\n}\n\nexport default AllServices\n","import styled from 'styled-components'\nimport { device, colors } from \"./breakpoints\"\nimport { Button } from \"./HomeStyle\"\n\nexport const UserProfileContainer = styled.div`\n    font-family: 'Jost', sans-serif;\n    h1, h2, h3{\n        font-family: 'Aclonica', sans-serif;\n    }\n    display: grid;            \n    grid-gap: 20px;\n    @media ${device.tablet}{\n        grid-template-columns: 1fr;\n    }\n    .container{\n        \n    }\n\n    .card__image{     \n        grid-column: 1; \n        min-width: 200px;\n        height: fit-content;\n        img{\n            width: 100%;\n            \n        }\n        @media ${device.tablet}{\n            grid-column: auto;\n        } \n        display: flex;\n        justify-content: center;\n        .profile_pic{\n           width: 150px;\n            height: 150px;        \n        }\n    }\n    .card__content{\n        grid-column: 2/10;\n        grid-row: 1/3;\n        @media ${device.tablet}{\n            grid-column: auto;\n            grid-row: auto;\n        } \n        \n        \n        .heading{\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            @media ${device.tablet}{\n                flex-direction: column;\n            }\n            div{\n                span{\n                    margin-right: 5px;\n                }\n                display: flex;\n            }\n        }\n        .contents{\n            margin: 10px 0;\n            display: grid;\n            \n            grid-template-columns: repeat(2, 1fr);            \n            grid-gap: 20px;\n            .fullwidth{\n                width: 100%;\n                grid-column: 1/span 2;\n                @media ${device.tablet}{\n                    grid-column: 1/1;\n                }\n            }\n            @media ${device.tablet}{\n                grid-template-columns: 1fr;\n                place-items: start;\n                grid-row-gap: 10px;\n            }\n            div > span:first-child{\n                margin-right: 5px;\n                font-weight: bold;\n            }\n            \n            textarea{\n                padding: 10px;\n                border: 1px solid ${colors.midtext};\n                border-radius: 10px;\n            }\n        }\n        \n        .actions{\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            width: 100%;\n            \n        }\n        \n        .delete{\n            \n            margin-top: 10px;\n            .deleteheader{\n               font-weight: bold;\n            }\n            .deleteconfirm{\n                display: flex;\n                justify-content: space-between;\n                \n            }\n        }\n        \n    }\n    .carditems, .messagecontainer{\n        grid-column: 1/10;\n    }\n    .embossitem{\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);     \n        padding: 20px 40px;\n        margin-bottom: 20px;\n       \n        div{    \n            img{\n                width: 50%;\n                @media ${device.tablet}{\n                    width: 100px;\n                }\n            }\n        }\n    }\n    .flexemboss{\n        display: flex;\n        width: 100%;\n        @media ${device.tablet}{\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n        }\n    }\n    \n    .results{\n        .head{\n            margin-bottom: 10px;\n            font-weight: 700;\n            border-bottom: 3px solid ${colors.lightergray};\n        }\n        .result_item{\n            display: flex;\n            justify-content: space-between;\n            margin-top: 10px;\n        }\n    }\n`\n\nexport const AdminButton = styled(Button)`\n    margin: 0.5rem;\n    \n    padding: 0.3rem 0.5rem;\n    width: fit-content;\n    font-weight: bold;\n`\n\nexport const AdminButtonAlt = styled(AdminButton)`\n    border-color: ${colors.midtext};\n    background-color: ${colors.midtext};\n    display: flex;\n    align-items: center;\n    margin: 0 auto;\n`\nexport const AdminButtonPro = styled(AdminButton)`\n    border-color: ${props => props.color};\n    background-color: ${props => props.color};\n    display: flex;\n    align-items: center;\n    justify-content: center\n`\n\n\nexport const AdminHeader = styled.header`    \n    .message{\n        font-family: \"Jost\", sans-serif;\n        background: ${colors.dimwhite};\n        font-weight: bold;\n        border-radius: 5px;\n        padding: 5px 0;\n        text-align: center;\n        color: ${colors.darkred}\n    }\n`\nexport const DrawerContainer = styled.div`\n    a{\n        text-decoration: none;        \n    }\n`\nexport const RightAlign = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    width: 'fit-content';\n    \n`\n\nexport const AdminPrice = styled.div`\n    display: grid;\n    place-items: center;\n    font-family: 'Jost', sans-serif;\n    h3{\n        font-family: 'Aclonica', sans-serif;\n    }\n    input[type=\"text\"]{\n        width: 100%;\n        margin: 20px 0;\n        padding: 7px 10px;\n        border-radius: 15px;\n        outline: none;\n    }\n`\n\nexport const SchoolsOverviewContainer = styled(UserProfileContainer)`\n    .courses{\n        margin-top: 40px;\n        display: grid;\n        place-items: center;        \n        .courseitems{\n            span{\n                display: flex;\n                align-items: center;\n                .MuiSvgIcon-root{\n                    color: ${colors.darkred}\n                }\n            }\n        }\n        .addcourse{\n            display: flex;\n        }                \n    }\n    .multiline_courses{\n        text-align: center;\n        padding: 40px;\n        margin-top: 30px;\n        textarea{\n            padding: 10px;\n        }\n        .actions{\n            margin: 10px auto;            \n            width: fit-content;\n        }\n    }\n`","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { colors, device } from \"./breakpoints\"\nimport { Button } from \"./HomeStyle\"\nimport { UserProfileContainer } from \"./AdminStyles\"\n\nexport const ProfileContainer = styled(motion.div)`\n    background: ${colors.background};\n    .backgroundheader{\n        background: url(/images/slide4.jpg);\n        width: 100%;\n        height: fit-content;\n        padding: 20px 0;\n        background-position: center;\n        background-size: cover;          \n        display: grid;\n        place-items: center;\n    }\n    .profileimage{\n        width: 100px;\n        height: 100px;\n        border-radius: 50%;     \n        border: 2px solid ${colors.lightred};\n        margin: 0 auto;\n        margin-top: -50px;                \n        z-index: 2;\n        position: relative;\n                \n        .file{            \n            width: 50%;\n            height: 50%;\n            opacity: 0;\n            cursor: pointer;            \n            z-index: 3;\n            position: absolute;\n        }\n        \n        img{\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;                                    \n        }   \n        \n        button.filebutton{\n            position: absolute;\n            color: white;\n            top: 20px;\n            right: -25px;\n        }\n        button.submitbutton{\n            position: absolute;\n            top: 15px;\n            right: -90px;\n        }\n        \n        .MuiSvgIcon-root{            \n            color: white;\n            \n        }\n    }   \n    .contentpane{\n        background-color: white;\n        margin: 20px auto;\n        padding: 20px;\n        border-radius: 10px;\n        -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.16), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\n        -moz-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.16), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\n        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.16), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\n        h2{\n            text-align: center;        \n        }\n        .MuiFormControl-root{     \n            \n            font-family: 'Jost', sans-serif;                       \n            margin: 15px 0;            \n        }\n    } \n    .submit{\n        display: grid;\n        place-items: center;\n    }\n`\n\nexport const ProfileButton = styled(Button)`    \n`\n\nexport const ProfileButtonAlt = styled(Button)`\n    padding: 0.2rem 0.5rem;\n`\n\nexport const UploadButton = styled(Button)`\n    padding: 0.2rem 0.5rem;\n    width: fit-content;\n    display:flex;\n    align-items: center;\n`\n\nexport const WalletContainer = styled(motion.div)`\n    font-family: 'Jost', sans-serif !important;\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 8px 50px;\n    border-radius: 10px;\n    margin: 0 auto;    \n    margin-bottom: ${props => `${props.mb}px`};\n    margin-top: ${props => `${props.mt}px`};\n    width: ${props => `${props.width}px`};\n    \n    i{\n        font-size: 30px;\n        color: ${colors.midtext}\n    }\n    h2{\n        margin-top: 5px;\n    }                     \n`\n\nexport const WalletButton = styled(Button)`    \n    padding: 0.2rem 0.5rem;\n    margin: 0.5rem ${props => props.mh + 'px' || 0};\n    margin-left: ${props => props.ml + 'px' || 0};\n    margin-right: ${props => props.mr + 'px' || 0};\n    width: 100%;\n`\n\nexport const ItemOverviewMain = styled.div`\n    font-family: 'Jost', sans-serif;\n    h2{\n         font-family: 'Aclonica', sans-serif;\n         text-align: center;\n         font-size: 1.3rem;\n         margin: 10px auto;\n         border-bottom: 2px solid ${colors.goldish};\n         width: fit-content;\n         \n    }\n \n`\n\nexport const ItemOverviewContainer = styled(UserProfileContainer)`\n    margin-top: 40px;\n    display: grid;\n    place-items: center;\n    .card__image{\n        width: 200px;\n        height: 200px;\n        .item__pic{\n            width: 100%;\n            height: 100%;\n        }\n    }\n`\n\nexport const ReviewContainer = styled.form`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    padding: 20px;    \n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.16), 0 1px 3px 0 rgba(0, 0, 0, 0.12);    \n    width: 50vw;\n    font-family: 'Jost', sans-serif;\n    @media ${device.tablet}{\n        width: 90vw;\n    }\n    \n    h2{\n        font-family: 'Aclonica', sans-serif;\n        align-self: center;        \n        margin-bottom: 20px;\n    }\n    .rating{\n        width: 200px;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        align-self: center;\n    }\n    .form__control{\n        margin-top: 20px;\n        min-width: 100%;\n        width: 100%;\n        \n    }\n    .error{\n        align-self: center;\n    }\n    textarea{\n        padding: 10px;\n        border: 1px solid ${colors.midtext};\n        border-radius: 10px;\n    }\n    .button{\n        align-self: center;\n        margin: 0 auto;        \n        width: fit-content;\n    }\n        \n`\nexport const ReviewedOverlay = styled.div`\n    width: 94%;        \n    height: 88%;\n    z-index: 5;\n    margin: -20px;\n    position: fixed;        \n    background-color: rgba(255, 255, 255, 0.7);\n    display: grid;\n    place-items: center;\n    .MuiSvgIcon-root{\n        color: ${colors.darkred};\n        font-size: 3rem;\n    }\n`","import styled from \"styled-components\"\nimport { motion } from \"framer-motion\"\nimport { colors } from \"./breakpoints\"\n\n\nexport const Modal = styled(motion.div)`\n    position: fixed;\n    top: 0;        \n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    z-index: 1;\n    display:grid;\n    place-items: center;\n    \n    .modalitem{\n        font-family: 'Jost', sans-serif;\n        -webkit-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        -moz-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        background-color: ${colors.white};\n        padding: 50px;\n        border-radius: 10px;\n        \n        p{\n            font-size: 1.5rem;\n            margin-bottom: 10px;\n        };\n        div{\n            font-size: 1.2rem;\n            display: flex;\n            align-items: center;\n            \n            a{\n                display: flex;\n                align-items: center;\n                color: ${colors.goldish};\n                margin-right: 8px;\n                .MuiSvgIcon-root{\n                    margin-left: 3px;\n                }\n            }\n        }\n        \n    }\n`","import React from 'react'\nimport {useSelector} from \"react-redux\"\nimport {Modal} from \"../../styles/ModalStyle\"\nimport {Link} from \"react-router-dom\"\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nconst NotLoggedIn = () => {\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    return (\n        <>                    \n          {\n                !userInfo && (\n                    <Modal>\n                        <div className=\"modalitem\">\n                            <p>You are not signed in</p>\n                            <div>\n                                <Link to=\"/auth\">Login <VpnKeyIcon /></Link>    \n                                <span>to continue</span>\n                            </div>                    \n                        </div>\n                    </Modal>\n                )\n            }  \n        </>\n    )\n}\n\nexport default NotLoggedIn\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function TransitionsModal({open, setOpen, caption, message}) {\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      \n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">{caption}</h2>\n            <p id=\"transition-modal-description\">{message}</p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, {useState} from 'react'\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n// import FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport PersonIcon from '@material-ui/icons/Person';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport {IconButton}  from \"@material-ui/core\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {ProfileButton} from \"../../styles/ProfileStyle\"\nimport {updateUser} from \"../../redux/actions/userActions\"\nimport MessageModal from \"../Utils/MessageModal\"\n\n\nconst Edits = ({values, setValues}) => {\n    const dispatch = useDispatch()\n    const [openPass, setOpenPass] = useState(false);\n    const [openMessage, setOpenMessage] = useState(false);\n    \n    \n    const {userInfo} = useSelector(state => state.userLogin)\n    const {loading, success, error} = useSelector(state => state.userUpdate)\n    \n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n    \n    const handleClickShowConfirmPassword = () => {\n        setValues({ ...values, showConfirmPassword: !values.showConfirmPassword });\n    };\n    \n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n    const handleMouseDownConfirmPassword = (event) => {\n        event.preventDefault();\n    };    \n    \n    \n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        if(!values.password){\n            dispatch(updateUser({\n                _id: userInfo._id,\n                name: values.name || userInfo.name,                        \n                profile:{\n                    ...userInfo.profile, \n                    address: values.address || userInfo.address,\n                    phoneNo: values.phoneNo || userInfo.phoneNo\n                }\n            }))  \n            if(success || error ){\n                setOpenMessage(true)\n            }\n            \n                 \n        }else{\n            if(values.password === values.confirmPassword){\n                dispatch(updateUser({\n                    _id: userInfo._id,\n                    name: values.name || userInfo.name,                        \n                    profile:{\n                        ...userInfo.profile, \n                        address: values.address || userInfo.address,\n                        phoneNo: values.phoneNo || userInfo.phoneNo\n                    },\n                    password: values.password\n                }))             \n                if(success || error ){\n                    setOpenMessage(true)\n                }\n                \n            }else{                \n                setOpenPass(true)\n            }\n        }\n        \n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"contentpane\">\n                <h2>Basic Info</h2>\n                    <FormControl fullWidth  variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-adornment-name\">Name</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-name\"\n                            value={values.name}\n                            disabled = {userInfo.type !== 'local'}\n                            placeholder={userInfo.name}\n                            onChange={handleChange('name')}                            \n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <PersonIcon />\n                                    </InputAdornment>\n                                }\n                            labelWidth={45}\n                        />\n                        </FormControl>                            \n                                                    \n                        <FormControl fullWidth  variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email\"\n                                value={values.email}\n                                onChange={handleChange('email')}\n                                disabled\n                                placeholder={userInfo.email}                                        \n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                    <DraftsIcon />\n                                    </InputAdornment>\n                                }\n                                labelWidth={45}\n                            />\n                        </FormControl>   \n                    </div>\n                    <div className=\"contentpane\">\n                        <h2>Additional Info</h2>\n                        <FormControl fullWidth  variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-phone\">Phone No.</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-phone\"\n                                value={values.phoneNo}\n                                placeholder={userInfo.profile && userInfo.profile.phoneNo}\n                                onChange={handleChange('phoneNo')}\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                    <PhoneIcon />\n                                    </InputAdornment>\n                                }\n                                labelWidth={75}\n                            />\n                        </FormControl>   \n                            \n                        <FormControl fullWidth  variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-address\">Address</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-address\"\n                                value={values.address}\n                                placeholder={userInfo.profile && userInfo.profile.address}\n                                onChange={handleChange('address')}\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <BusinessIcon />\n                                        </InputAdornment>\n                                    }\n                                labelWidth={60}\n                            />\n                        </FormControl>\n                    </div>\n                        \n                    {\n                        userInfo.type === 'local' &&\n                        <div className=\"contentpane\">\n                            <h2>Password</h2>\n                            \n                            <FormControl  fullWidth variant=\"outlined\">\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password\"\n                                    type={values.showPassword ? 'text' : 'password'}\n                                    value={values.password}\n                                    onChange={handleChange('password')}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                    labelWidth={70}\n                                />\n                            </FormControl>                              \n                                                        \n                            <FormControl  fullWidth variant=\"outlined\">\n                                <InputLabel htmlFor=\"outlined-adornment-password-confirm\">\n                                    Confirm Password\n                                </InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password-confirm\"\n                                    type={values.showConfirmPassword ? 'text' : 'password'}\n                                    value={values.confirmPassword}\n                                    onChange={handleChange('confirmPassword')}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowConfirmPassword}\n                                                onMouseDown={handleMouseDownConfirmPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                    labelWidth={135}\n                                />\n                            </FormControl>                              \n                        </div>\n                    }\n                    <div className=\"submit\">\n                        <ProfileButton \n                            disabled = {!Object.values(values).some(x => (x !== null && x !== ''))}\n                            type=\"submit\">Submit\n                        </ProfileButton>\n                    </div>               \n                <MessageModal \n                    open={openPass}\n                    setOpen={setOpenPass}\n                    caption=\"Mismatched\" \n                    message = \"Passwords do not match\"             \n                />\n                <MessageModal \n                    open={openMessage}\n                    setOpen={setOpenMessage}\n                    caption={error ? \"Error\" : success ? \"Successful\" : null} \n                    message = {\n                     loading ? \"Loading\" :  \n                        error ? error : \n                        success ? \"Details updated\" : null\n                    }             \n                />\n        </form>        \n    )\n}\n\nexport default Edits\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useHistory } from \"react-router-dom\"\n\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\n\nexport default function StickyHeadTable({ columns, rows, admin_upload, orderItems, orderHeaders }) {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const history = useHistory()\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                            {orderHeaders.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                            {\n                                admin_upload &&\n                                <TableCell\n                                    align=\"left\"\n                                    style={{ minWidth: 170 }}\n                                >\n                                    File\n                                </TableCell>\n                            }\n                            <TableCell align=\"left\" style={{ minWidth: 170 }}>\n                                Created At </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                            return (\n                                <TableRow\n                                    style={{ cursor: 'pointer' }}\n                                    onClick={() => history.push(`/profile/?itemId=${row._id}`)}\n                                    hover\n                                    role=\"checkbox\"\n                                    tabIndex={-1}\n                                    key={row.code}\n                                >\n\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ?\n                                                    column.format(value) : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                    {\n                                        orderItems &&\n                                        orderItems.map((item, index) => (\n                                            <TableCell align=\"left\" key={index} >\n                                                { row.orderItems.[item]}\n                                            </TableCell>\n                                        ))\n\n                                    }\n                                    {\n                                        admin_upload &&\n                                        <TableCell align=\"left\" >\n                                            {\n                                                row.admin_upload && row.admin_upload.image ?\n                                                    <>\n\n                                                        <a href={row.admin_upload && row.admin_upload.image} download\n                                                            target=\"_blank\" rel=\"noreferrer\">\n                                                            <img src={row.admin_upload && row.admin_upload.image}\n                                                                alt=\"admin upload\" width=\"50\" height=\"50\" />\n                                                        </a>\n\n                                                    </>\n                                                    :\n                                                    \"No file yet\"\n                                            }\n                                        </TableCell>\n                                    }\n                                    <TableCell align=\"left\" >\n                                        {\n                                            new Date(row.createdAt).toDateString()\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows && rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getCardOrderDetails, listMyCardOrders } from \"../../redux/actions/cardOrderActions\"\nimport { useLocation, useHistory } from \"react-router-dom\"\nimport queryString from 'query-string'\nimport FixedTable from \"./ProfileFixedHeaderTable\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport { ItemOverviewContainer, ProfileButtonAlt, ItemOverviewMain } from \"../../styles/ProfileStyle\"\nimport { Card, CardContent } from '@material-ui/core'\nimport { Avatar } from '@material-ui/core'\n\n\nconst MyCardOrders = () => {\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const history = useHistory()\n\n    const { itemId } = queryString.parse(location.search)\n\n    const headCells = [\n        { id: '_id', label: 'Order ID' },\n        { id: 'paymentMethod', label: 'Payment Method' },\n    ];\n    const orderHeaders = [\n        { id: 'name', label: \"Card name\" },\n        { id: 'price', label: \"Price\" },\n        { id: 'qty', label: \"Qty\" },\n    ]\n\n\n    useEffect(() => {\n        dispatch(listMyCardOrders())\n        dispatch(getCardOrderDetails(itemId))\n    }, [dispatch, itemId])\n\n    const { loading, error, orders } = useSelector(state => state.cardOrderListMy)\n    const { loading: detailLoading, order } = useSelector(state => state.cardOrderDetails)\n\n    return (\n        <ItemOverviewMain>\n            <h2>My card orders</h2>\n            {\n                loading ? <Loader />\n                    :\n                    error ? error\n                        :\n                        <FixedTable\n                            columns={headCells}\n                            rows={orders}\n                            orderItems={[\"name\", \"price\", \"qty\"]}\n                            orderHeaders={orderHeaders}\n                        />\n            }\n\n            <ItemOverviewContainer>\n                {\n                    detailLoading ? <Loader />\n                        :\n                        order ?\n                            <React.Fragment>\n                                <Card className=\"card__image\">\n                                    <CardContent>\n                                        <Avatar className=\"profile_pic\"\n                                            src={\n                                                order.orderItems && (order.orderItems.image\n                                                    || `/${order.orderItems.image}`)}\n                                        />\n\n                                    </CardContent>\n                                </Card>\n                                <Card className=\"card__content\">\n                                    <CardContent>\n\n                                        <div className=\"contents\">\n                                            <div>\n                                                <span>Card ID:</span>\n                                                <span>{order.orderItems && order.orderItems.card}</span>\n                                            </div>\n                                            <div>\n                                                <span>Qty: </span>\n                                                <span>{order.orderItems && order.orderItems.qty}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment status: </span>\n                                                <span style={{ color: order.isPaid ? 'green' : 'red' }}\n                                                >{order.isPaid ? \"Paid\" : \"Not Paid\"}</span>\n                                            </div>\n                                            <div>\n                                                <span>Delivered status: </span>\n                                                <span style={{ color: order.isDelivered ? 'green' : 'red' }}\n                                                >{order.isDelivered ? \"Delivered\" : \"Not Delivered\"}</span>\n                                            </div>\n                                            {\n                                                order.isPaid &&\n                                                <>\n                                                    <div>\n                                                        <span>Paid At:</span>\n                                                        <span>{new Date(order.paidAt).toDateString()}</span>\n                                                    </div>\n                                                    <div>\n                                                        <span>Delivered At:</span>\n                                                        <span>{new Date(order.deliveredAt).toDateString()}</span>\n                                                    </div>\n                                                </>\n                                            }\n                                            <div>\n                                                <span>Created on:</span>\n                                                <span>{new Date(order.createdAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Last updated:</span>\n                                                <span>{new Date(order.updatedAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment method:</span>\n                                                <span>{order.paymentMethod}</span>\n                                            </div>\n                                            {\n                                                order.paymentResult &&\n                                                <>\n                                                    <div>\n                                                        <span>Payment ID:</span>\n                                                        <span>{order.paymentResult.id}</span>\n                                                    </div>\n                                                    <div>\n                                                        <span>Payment Status:</span>\n                                                        <span>{order.paymentResult.status}</span>\n                                                    </div>\n                                                    <div>\n                                                        <span>Payment Email:</span>\n                                                        <span>{order.paymentResult.email}</span>\n                                                    </div>\n\n                                                    <div className=\"fullwidth\">\n                                                        {\n                                                            order.purchasedItems &&\n                                                            order.purchasedItems.map((item) => (\n                                                                (\n                                                                    <div className=\"embossitem\" key={item._id}>\n                                                                        {\n                                                                            item.pin &&\n                                                                            <div>\n                                                                                <span>PIN: </span>\n                                                                                <span>{item.pin}</span>\n                                                                            </div>\n                                                                        }\n                                                                        {\n                                                                            item.token &&\n                                                                            <div>\n                                                                                <span>Token: </span>\n                                                                                <span>{item.token}</span>\n                                                                            </div>\n                                                                        }\n                                                                        {\n                                                                            item.serialNo &&\n                                                                            <div>\n                                                                                <span>Serial Number: </span>\n                                                                                <span>{item.serialNo}</span>\n                                                                            </div>\n                                                                        }\n                                                                    </div>\n                                                                )\n                                                            ))\n                                                        }\n                                                    </div>\n                                                </>\n                                            }\n                                        </div>\n                                        {\n                                            !order.isPaid &&\n                                            <ProfileButtonAlt onClick={() => history.push(`/payorder/card?orderId=${order._id}`)}>\n                                                Make Payment\n                                            </ProfileButtonAlt>\n                                        }\n                                    </CardContent>\n                                </Card>\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any order\n                            </CardContent>\n                            </Card>\n                }\n            </ItemOverviewContainer>\n        </ItemOverviewMain>\n    )\n}\n\nexport default MyCardOrders\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { listMyOlevelUploadOrders, getOlevelUploadOrderDetailsById } from \"../../redux/actions/oLevelResultUploadActions\"\nimport FixedTable from \"./ProfileFixedHeaderTable\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport { useLocation } from \"react-router-dom\"\nimport queryString from 'query-string'\nimport { ItemOverviewContainer, ItemOverviewMain } from \"../../styles/ProfileStyle\"\nimport { Card, CardContent } from '@material-ui/core'\n\nconst MyResultUploadOrders = () => {\n    const dispatch = useDispatch()\n    const location = useLocation()\n\n    const { itemId } = queryString.parse(location.search)\n\n    const headCells = [\n        { id: '_id', label: 'Order ID' },\n        { id: 'price', label: 'Price' },\n    ];\n    const orderHeaders = [\n        { id: 'Type', label: 'Type' },\n        { id: 'Name', label: \"Name\" },\n    ]\n\n    useEffect(() => {\n        dispatch(listMyOlevelUploadOrders())\n        dispatch(getOlevelUploadOrderDetailsById(itemId))\n    }, [dispatch, itemId])\n\n    const { loading, error, orders } = useSelector(state => state.oLevelUploadOrderListMy)\n\n    const oLevelUploadOrderDetails = useSelector(state => state.oLevelUploadOrderDetails)\n    const { loading: detailLoading, order } = oLevelUploadOrderDetails\n\n\n    return (\n        <ItemOverviewMain>\n            <h2>My result upload orders</h2>\n            {\n                loading ? <Loader />\n                    :\n                    error ? error\n                        :\n                        <FixedTable\n                            columns={headCells}\n                            rows={orders}\n                            admin_upload={orders}\n                            orderItems={[\"type\", \"name\"]}\n                            orderHeaders={orderHeaders}\n                        />\n            }\n\n\n            <ItemOverviewContainer>\n\n                {\n                    detailLoading ? <Loader />\n                        :\n                        order ?\n                            <React.Fragment>\n                                <Card className=\"card__image\">\n                                    <CardContent >\n                                        {\n                                            order.admin_upload && order.admin_upload.image ?\n                                                <img\n                                                    className=\"item__pic\"\n                                                    src={order.admin_upload.image}\n                                                    alt=\"admin upload\"\n                                                />\n                                                :\n                                                \"No file yet. Admin will respond soon.\"\n                                        }\n                                    </CardContent>\n                                </Card>\n                                <Card className=\"card__content\">\n                                    <CardContent>\n                                        <div className=\"contents\">\n                                            <div>\n                                                <span>Candidate's name:</span>\n                                                <span>{order.orderItems && order.orderItems.name}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Candidate's Profile Code:</span>\n                                                <span>{order.orderItems && order.orderItems.profileCode}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Candidate's Order Type:</span>\n                                                <span>{order.orderItems && order.orderItems.type}</span>\n                                            </div>\n\n                                            <div className=\"fullwidth\">\n                                                <div className=\"embossitem flexemboss\">\n                                                    {\n                                                        order.orderItems &&\n                                                        order.orderItems.files &&\n                                                        order.orderItems.files.map((file) => (\n                                                            file && (\n                                                                <div key={file._id}>\n                                                                    <img src={file.image} alt={file.image} />\n\n                                                                </div>\n                                                            )\n                                                        ))\n                                                    }\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <span>Paid on:</span>\n                                                <span>{new Date(order.paidAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment method:</span>\n                                                <span>{order.paymentMethod}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment ID:</span>\n                                                <span>{order.paymentResult && order.paymentResult.id}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Email:</span>\n                                                <span>{order.paymentResult && order.paymentResult.email}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Status:</span>\n                                                <span>{order.paymentResult && order.paymentResult.status}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Created on:</span>\n                                                <span>{new Date(order.createdAt).toDateString()}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Last update on:</span>\n                                                <span>{new Date(order.updatedAt).toDateString()}</span>\n                                            </div>\n\n                                        </div>\n\n                                    </CardContent>\n                                </Card>\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any order\n                                    </CardContent>\n                            </Card>\n                }\n\n\n            </ItemOverviewContainer>\n\n        </ItemOverviewMain>\n    )\n}\n\nexport default MyResultUploadOrders\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport FixedTable from \"./ProfileFixedHeaderTable\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport { ItemOverviewContainer, ItemOverviewMain } from \"../../styles/ProfileStyle\"\nimport { listMyJambPasswordResetOrders, getJambPasswordResetOrderDetailsById } from '../../redux/actions/jambPasswordResetActions'\nimport { useLocation } from \"react-router-dom\"\nimport queryString from 'query-string'\nimport { Card, CardContent, Divider } from '@material-ui/core'\n\nconst MyJambPasswordReset = () => {\n    const dispatch = useDispatch()\n    const location = useLocation()\n\n    const { itemId } = queryString.parse(location.search)\n    const headCells = [\n        { id: '_id', label: 'Order ID' },\n        { id: 'price', label: 'Price' },\n    ];\n    const orderHeaders = [\n        { id: 'email', label: 'Email' },\n        { id: 'name', label: \"Name\" },\n\n    ]\n\n    useEffect(() => {\n        dispatch(listMyJambPasswordResetOrders())\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(getJambPasswordResetOrderDetailsById(itemId))\n    }, [dispatch, itemId])\n\n    const jambPasswordResetOrderDetails = useSelector(state => state.jambPasswordResetOrderDetails)\n    const { loading: detailLoading, order } = jambPasswordResetOrderDetails\n\n    const { loading, error, orders } = useSelector(state => state.jambPasswordResetOrderListMy)\n\n\n    return (\n        <ItemOverviewMain>\n            <h2>My password reset orders</h2>\n            {\n                loading ? <Loader />\n                    :\n                    error ? error\n                        :\n                        <FixedTable\n                            columns={headCells}\n                            rows={orders}\n                            orderItems={[\"email\", \"name\"]}\n                            orderHeaders={orderHeaders}\n                        />\n            }\n\n            <ItemOverviewContainer>\n\n                {\n                    detailLoading ? <Loader />\n                        :\n                        order ?\n                            <React.Fragment>\n\n                                <Card className=\"card__content\">\n                                    <CardContent>\n                                        <div className=\"contents\">\n                                            <div>\n                                                <span>Candidate's name:</span>\n                                                <span>{order.orderItems && order.orderItems.name}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Candidate's Email:</span>\n                                                <span>{order.orderItems && order.orderItems.email}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Candidate's Date of Birth:</span>\n                                                <span>{order.orderItems && new Date(order.orderItems.dateOfBirth).toDateString()}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Candidate's New Password</span>\n                                                <span>{order.orderItems && order.orderItems.newPassword}</span>\n                                            </div>\n                                            <div className=\"fullwidth\">\n                                                <Divider />\n                                            </div>\n                                            <div>\n                                                <span>Paid on:</span>\n                                                <span>{new Date(order.paidAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment method:</span>\n                                                <span>{order.paymentMethod}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment ID:</span>\n                                                <span>{order.paymentResult && order.paymentResult.id}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Email:</span>\n                                                <span>{order.paymentResult && order.paymentResult.email}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Status:</span>\n                                                <span>{order.paymentResult && order.paymentResult.status}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Created on:</span>\n                                                <span>{new Date(order.createdAt).toDateString()}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Last update on:</span>\n                                                <span>{new Date(order.updatedAt).toDateString()}</span>\n                                            </div>\n\n                                        </div>\n\n                                    </CardContent>\n                                </Card>\n\n\n\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any order\n                            </CardContent>\n                            </Card>\n                }\n\n\n            </ItemOverviewContainer>\n\n        </ItemOverviewMain>\n    )\n}\n\nexport default MyJambPasswordReset\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport FixedTable from \"./ProfileFixedHeaderTable\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport { listMyChangeOfCourseOrders, getChangeOfCourseOrderDetailsById } from '../../redux/actions/changeOfCourseActions'\nimport { useLocation } from \"react-router-dom\"\nimport queryString from 'query-string'\nimport { ItemOverviewContainer, ItemOverviewMain } from \"../../styles/ProfileStyle\"\nimport { Card, CardContent, Divider } from '@material-ui/core'\n\n\nconst MyChangeOfCourseOrders = () => {\n    const dispatch = useDispatch()\n    const location = useLocation()\n\n    const { itemId } = queryString.parse(location.search)\n\n    const headCells = [\n        { id: '_id', label: 'Order ID' },\n        { id: 'price', label: 'Price' },\n    ];\n    const orderHeaders = [\n        { id: 'type', label: 'Type' },\n        { id: 'name', label: \"Candidate's name\" },\n    ]\n\n    useEffect(() => {\n        dispatch(listMyChangeOfCourseOrders())\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(getChangeOfCourseOrderDetailsById(itemId))\n    }, [dispatch, itemId])\n\n    const { loading, error, orders } = useSelector(state => state.changeOfCourseOrderListMy)\n    const changeOfCourseOrderDetails = useSelector(state => state.changeOfCourseOrderDetails)\n    const { loading: detailLoading, order } = changeOfCourseOrderDetails\n\n    return (\n        <ItemOverviewMain>\n            <h2>My data correction orders</h2>\n            {\n                loading ? <Loader />\n                    :\n                    error ? error\n                        :\n                        <FixedTable\n                            columns={headCells}\n                            rows={orders}\n                            orderItems={[\"type\", \"fullName\"]}\n                            admin_upload={true}\n                            orderHeaders={orderHeaders}\n                        />\n            }\n\n\n            <ItemOverviewContainer>\n\n                {\n                    detailLoading ? <Loader />\n                        :\n                        order ?\n                            <React.Fragment>\n                                <Card className=\"card__image\">\n                                    <CardContent >\n                                        {\n                                            order.admin_upload && order.admin_upload.image ?\n\n                                                <img\n                                                    className=\"item__pic\"\n                                                    src={order.admin_upload.image}\n                                                    alt=\"admin upload\"\n                                                />\n                                                :\n                                                \"No file yet. Admin will respond soon.\"\n                                        }\n                                    </CardContent>\n                                </Card>\n                                <Card className=\"card__content\">\n                                    <CardContent>\n\n                                        <div className=\"contents\">\n                                            <div>\n                                                <span>Candidate's name:</span>\n                                                <span>{order.orderItems && order.orderItems.fullName}</span>\n                                            </div>\n                                            <div>\n                                                <span>Candidate's OTP:</span>\n                                                <span>{order.orderItems && order.orderItems.otp}</span>\n                                            </div>\n                                            <div>\n                                                <span>Candidate's Profile Code:</span>\n                                                <span>{order.orderItems && order.orderItems.profileCode}</span>\n                                            </div>\n                                            <div>\n                                                <span>Candidate's regNo:</span>\n                                                <span>{order.orderItems && order.orderItems.regNo}</span>\n                                            </div>\n                                            <div>\n                                                <span>Candidate's Order Type:</span>\n                                                <span>{order.orderItems && order.orderItems.type}</span>\n                                            </div>\n\n                                            <div className=\"fullwidth\">\n                                                {\n                                                    order.orderItems &&\n                                                    order.orderItems.choices &&\n                                                    order.orderItems.choices.map((choice, index) => (\n                                                        choice && (\n                                                            <div className=\"embossitem\" key={choice._id}>\n                                                                <div>\n                                                                    <span>Course {index + 1}: </span>\n                                                                    <span>{choice.course}</span>\n                                                                </div>\n                                                                <div>\n                                                                    <span>Institution {index + 1}: </span>\n                                                                    <span>{choice.institution}</span>\n                                                                </div>\n                                                                <div>\n                                                                    <span>Programme {index + 1}: </span>\n                                                                    <span>{choice.preferredProgramme}</span>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    ))\n                                                }\n                                            </div>\n                                            <div>\n                                                <span>Paid on:</span>\n                                                <span>{new Date(order.paidAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment method:</span>\n                                                <span>{order.paymentMethod}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment ID:</span>\n                                                <span>{order.paymentResult && order.paymentResult.id}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Email:</span>\n                                                <span>{order.paymentResult && order.paymentResult.email}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Status:</span>\n                                                <span>{order.paymentResult && order.paymentResult.status}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Created on:</span>\n                                                <span>{new Date(order.createdAt).toDateString()}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Last update on:</span>\n                                                <span>{new Date(order.updatedAt).toDateString()}</span>\n                                            </div>\n\n                                        </div>\n\n                                        <Divider />\n\n                                    </CardContent>\n                                </Card>\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any order\n                            </CardContent>\n                            </Card>\n                }\n\n\n            </ItemOverviewContainer>\n\n        </ItemOverviewMain>\n    )\n}\n\nexport default MyChangeOfCourseOrders\n","import React, { useState, useEffect } from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport { ReviewContainer, ProfileButtonAlt, ReviewedOverlay } from '../../styles/ProfileStyle';\nimport { Message as MessageIcon } from '@material-ui/icons'\nimport { TextareaAutosize, FormControl, InputAdornment } from '@material-ui/core'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport LockIcon from '@material-ui/icons/Lock';\nimport { createReview, listReviewDetailsByUser } from \"../../redux/actions/reviewActions\"\nimport { REVIEW_CREATE_RESET } from \"../../redux/constants/reviewConstants\"\n\nconst labels = {\n    0.5: 'Useless', 1: 'Useless+', 1.5: 'Poor', 2: 'Poor+', 2.5: 'Ok',\n    3: 'Ok+', 3.5: 'Good', 4: 'Good+', 4.5: 'Excellent', 5: 'Excellent+'\n};\n\nexport default function Review() {\n\n    const [value, setValue] = useState(4);\n    const [hover, setHover] = useState(-1);\n    const [description, setDescription] = useState(\"\");\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        dispatch({ type: REVIEW_CREATE_RESET })\n        dispatch(listReviewDetailsByUser())\n    }, [dispatch])\n\n    const { loading, error, result } = useSelector(state => state.reviewCreate)\n    const { loading: loadingUser, review } = useSelector(state => state.reviewDetailsByUser)\n\n    useEffect(() => {\n\n        if (review) {\n            setValue(review.value)\n            setDescription(review.description)\n        }\n    }, [review])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        dispatch(createReview({ value, description }))\n    }\n\n\n    return (\n        <ReviewContainer onSubmit={handleSubmit}>\n\n            {\n                review &&\n                <ReviewedOverlay>\n                    <LockIcon />\n                </ReviewedOverlay>\n            }\n            <h2>Drop a review</h2>\n            {\n                loading ? <Loader />\n                    :\n                    loadingUser ? <Loader />\n                        :\n\n                        error ? <div className=\"error\">{error}</div>\n\n                            :\n                            result ? <div className=\"error\">{result}</div>\n                                :\n                                <div>\n                                    <div className=\"rating\">\n                                        <Rating\n                                            value={value}\n                                            precision={0.5}\n                                            onChange={(e, val) => setValue(val)}\n                                            onChangeActive={(e, newHover) => setHover(newHover)}\n                                        />\n                                        {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n                                    </div>\n                                    <div className=\"fullwidth\">\n                                        <FormControl className=\"form__control\">\n                                            <TextareaAutosize\n                                                aria-label=\"minimum height\"\n                                                onChange={e => setDescription(e.target.value)}\n                                                required\n                                                value={description}\n                                                rowsMin={5}\n                                                startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                                                placeholder=\"Additional Information\" />\n                                        </FormControl>\n                                    </div>\n                                    <div className=\"button\">\n                                        <ProfileButtonAlt type=\"submit\">\n                                            Save Review\n                                    </ProfileButtonAlt>\n                                    </div>\n                                </div>\n            }\n        </ReviewContainer>\n    );\n}\n","import React, { useState } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@material-ui/core/styles';\nimport { TabContainer } from \"../../styles/TabStyle\"\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TabPanel from \"../TabContainer/TabPanel\"\nimport a11yProps from \"../TabContainer/allProps\"\nimport { colors } from \"../../styles/breakpoints\"\nimport Editables from \"./Edits\"\nimport MyCardOrders from \"./MyCardOrders\"\nimport MyResultUploadOrders from \"./MyResultUploadOrders\"\nimport MyJambPasswordReset from \"./MyJambPasswordReset\"\nimport MyChangeOfCourseOrders from \"./MyChangeOfCourseOrders\"\nimport Review from \"./Review\"\n\nexport default function FullWidthTabs({\n  values,\n  setValues\n}) {\n  const [activeFirst, setActiveFirst] = useState(true)\n  const [activeSecond, setActiveSecond] = useState(false)\n  const [activeThird, setActiveThird] = useState(false)\n  const [activeFourth, setActiveFourth] = useState(false)\n  const [activeFifth, setActiveFifth] = useState(false)\n  const [activeSixth, setActiveSixth] = useState(false)\n\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const handleFirstTab = () => {\n    setActiveFirst(true)\n    setActiveSecond(false)\n    setActiveThird(false)\n    setActiveFourth(false)\n    setActiveFifth(false)\n    setActiveSixth(false)\n  }\n\n  const handleSecondTab = () => {\n    setActiveFirst(false)\n    setActiveSecond(true)\n    setActiveThird(false)\n    setActiveFourth(false)\n    setActiveFifth(false)\n    setActiveSixth(false)\n  }\n\n  const handleThirdTab = () => {\n    setActiveFirst(false)\n    setActiveSecond(false)\n    setActiveThird(true)\n    setActiveFourth(false)\n    setActiveFifth(false)\n    setActiveSixth(false)\n  }\n\n  const handleFourthTab = () => {\n    setActiveFirst(false)\n    setActiveSecond(false)\n    setActiveThird(false)\n    setActiveFourth(true)\n    setActiveFifth(false)\n    setActiveSixth(false)\n  }\n\n  const handleFifthTab = () => {\n    setActiveFirst(false)\n    setActiveSecond(false)\n    setActiveThird(false)\n    setActiveFourth(false)\n    setActiveFifth(true)\n    setActiveSixth(false)\n  }\n\n  const handleSixthTab = () => {\n    setActiveFirst(false)\n    setActiveSecond(false)\n    setActiveThird(false)\n    setActiveFourth(false)\n    setActiveFifth(false)\n    setActiveSixth(true)\n  }\n  return (\n    <TabContainer variant=\"center\">\n\n      <Tabs\n        className=\"tabs\"\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n        aria-label=\"Features tabs\"\n\n      >\n        <Tab label=\"Profile\"\n          {...a11yProps(0)}\n          style={{ backgroundColor: activeFirst && colors.lightergray }}\n          onClick={handleFirstTab} />\n        <Tab label=\"Card Order Details\"\n\n          {...a11yProps(1)}\n          style={{ backgroundColor: activeSecond && colors.lightergray }}\n          onClick={handleSecondTab} />\n        <Tab label=\"Data Corrections\"\n          {...a11yProps(2)}\n          style={{ backgroundColor: activeThird && colors.lightergray }}\n          onClick={handleThirdTab} />\n        <Tab label=\"Result Uploads\"\n          {...a11yProps(2)}\n          style={{ backgroundColor: activeFourth && colors.lightergray }}\n          onClick={handleFourthTab} />\n        <Tab label=\"Jamb Password Reset\"\n          {...a11yProps(2)}\n          style={{ backgroundColor: activeFifth && colors.lightergray }}\n          onClick={handleFifthTab} />\n        <Tab label=\"Leave Review\"\n          {...a11yProps(2)}\n          style={{ backgroundColor: activeSixth && colors.lightergray }}\n          onClick={handleSixthTab} />\n      </Tabs>\n\n\n\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <Editables values={values} setValues={setValues} />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction} id='cardorderpane'>\n          <MyCardOrders />\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <MyChangeOfCourseOrders />\n        </TabPanel>\n        <TabPanel value={value} index={3} dir={theme.direction}>\n          <MyResultUploadOrders />\n        </TabPanel>\n        <TabPanel value={value} index={4} dir={theme.direction}>\n          <MyJambPasswordReset />\n        </TabPanel>\n        <TabPanel value={value} index={5} dir={theme.direction}>\n          <Review />\n        </TabPanel>\n\n      </SwipeableViews>\n    </TabContainer>\n  );\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"\nimport { usePaystackPayment } from 'react-paystack';\nimport { PayButton } from \"../../styles/ServiceStyle.js\"\nimport { useSelector } from \"react-redux\"\nimport { WalletButton } from \"../../styles/ProfileStyle\"\n\n\nconst PayStackPayment = ({ amount, onSuccess, simple }) => {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const [key, setKey] = useState(\"\")\n    useEffect(() => {\n        const getKey = async () => {\n            const { data: clientKey } = await axios.get('/api/config/paystack')\n            setKey(clientKey)\n        }\n        getKey()\n    }, [key])\n\n    const config = {\n        reference: (new Date()).getTime(),\n        email: userInfo.email,\n        amount: amount * 100,\n        publicKey: key,\n    };\n\n    const PayStackHooks = () => {\n        const initializePayment = usePaystackPayment(config);\n        return (\n            <>\n                {\n                    simple ?\n                        <WalletButton\n                            mr={10}\n                            onClick={() => {\n                                initializePayment(onSuccess, onClose)\n                            }}\n                        >\n                            Paystack\n                        </WalletButton>\n                        :\n                        <PayButton\n                            onClick={() => {\n                                initializePayment(onSuccess, onClose)\n                            }}\n                            customsize={40}\n                        >\n                            <i\n\n                                className=\"fab fa-amazon-pay\"></i>\n                        </PayButton>\n                }\n\n            </>\n\n        );\n    };\n\n    const onClose = (ref) => console.log(ref)\n\n    return (\n        <>\n            <PayStackHooks />\n        </>\n    )\n}\n\nexport default PayStackPayment\n","import React, { useEffect, useState } from 'react';\nimport { useFlutterwave, closePaymentModal } from 'flutterwave-react-v3';\nimport { WalletButton } from '../../styles/ProfileStyle';\nimport { PayButton } from '../../styles/ServiceStyle';\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios';\n\nexport default function App({ amount, service, simple, onSuccess }) {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const [key, setKey] = useState(\"\")\n    useEffect(() => {\n        const getKey = async () => {\n            const { data: clientKey } = await axios.get('/api/config/flutterwave')\n            setKey(clientKey)\n        }\n        getKey()\n    }, [key])\n\n    const config = {\n        public_key: key,\n        tx_ref: Date.now(),\n        amount,\n        currency: 'NGN',\n        payment_options: 'card,mobilemoney,ussd',\n        customer: {\n            email: userInfo.email,\n            phonenumber: userInfo.profile && userInfo.profile.phoneNumber,\n            name: userInfo.name,\n        },\n        customizations: {\n            title: 'Payment to Pin Cafes',\n            description: `Payment for Pin Cafes ${service} services`,\n            logo: 'https://st2.depositphotos.com/4403291/7418/v/450/depositphotos_74189661-stock-illustration-online-shop-log.jpg',\n        },\n    };\n\n\n\n    const handleFlutterPayment = useFlutterwave(config);\n\n    return (\n        <div className=\"App\">\n            {\n                simple ?\n                    <WalletButton\n                        mr={10}\n                        onClick={() => {\n                            handleFlutterPayment({\n                                callback: onSuccess,\n                                onClose: () => { },\n                            });\n                        }}\n                    >\n                        Flutterwave\n                    </WalletButton>\n                    :\n                    <PayButton\n                        onClick={() => {\n                            handleFlutterPayment({\n                                callback: onSuccess,\n                                onClose: () => { },\n                            });\n                        }}\n                        customsize={40}\n                    >\n                        <i\n\n                            className=\"fab fa-amazon-pay\"></i>\n                    </PayButton>\n            }\n\n        </div>\n    );\n}\n\n// callback: (response) => {\n//     console.log(response);\n//     closePaymentModal() // this will close the modal programmatically\n// },","import React, { useState, useEffect } from 'react'\nimport { WalletContainer, WalletButton } from \"../../styles/ProfileStyle\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport CurrencyFormat from 'react-currency-format'\nimport Loader from \"../Loaders/SimpleLoader\"\nimport MessageModal from \"../Utils/MessageModal\"\nimport { creditWallet, getWalletAmount } from '../../redux/actions/userActions';\nimport PayStack from \"../Payment/PayStack\"\nimport Flutterwave from \"../Payment/Flutterwave\"\n\nconst Wallet = ({ mt, mb, width }) => {\n    const dispatch = useDispatch()\n    const [pay, setPay] = useState(false)\n    const [lowAmount, setLowAmount] = useState(false)\n    const [amount, setAmount] = useState(0)\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch(getWalletAmount())\n    }, [dispatch])\n\n    const { wallet } = useSelector(state => state.userWalletAmount)\n\n    const handleCancelPay = (e) => {\n        e.preventDefault()\n        setPay(false)\n    }\n\n    const onSuccess = (reference) => {\n        const paymentResult = {\n            id: reference.trxref,\n            status: reference.status,\n            update_time: String((new Date()).getTime()),\n            email: userInfo.email\n        }\n\n        dispatch(creditWallet(amount, paymentResult, 'PayStack'))\n        setPay(false)\n    }\n\n\n\n    return (\n        <>\n            {\n                (userInfo) &&\n                <WalletContainer mt={mt} width={width} mb={mb}>\n                    {\n                        loading ? <Loader />\n                            :\n                            error ? error\n                                :\n                                <>\n                                    <i className=\"fas fa-wallet\"></i>\n                                    <CurrencyFormat\n                                        value={\n                                            wallet && wallet.toFixed(2)\n                                        }\n                                        displayType={'text'}\n                                        thousandSeparator={true}\n                                        prefix={'₦'}\n                                        renderText={value => <h2>{value}</h2>}\n                                    />\n\n                                    <WalletButton onClick={() => setPay(true)}>\n                                        Fund Wallet\n                        </WalletButton>\n                                </>\n                    }\n                </WalletContainer>\n            }\n\n            <MessageModal\n                open={pay}\n                setOpen={setPay}\n                caption=\"Add to Your Wallet\"\n                message=\n                {\n                    <div>\n                        <FormControl fullWidth\n                            style={{ margin: '15px auto' }}\n                            variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-amount\">\n                                Amount\n                                </InputLabel>\n                            <OutlinedInput\n                                required\n                                type=\"number\"\n                                id=\"outlined-adornment-amount\"\n                                value={amount}\n                                onChange={(e) => setAmount(e.target.value)}\n                                startAdornment={<InputAdornment position=\"start\">\n                                    ₦\n                                    </InputAdornment>}\n                                labelWidth={60}\n                            />\n                            <div style={{ display: 'flex' }}>\n\n                                <PayStack\n                                    amount={amount}\n                                    onSuccess={onSuccess}\n                                    simple={true}\n                                />\n                                <Flutterwave\n                                    amount={amount}\n                                    service=\"wallet funding\"\n                                    onSuccess={onSuccess}\n                                    simple={true}\n                                />\n                                <WalletButton\n                                    ml={10}\n                                    onClick={handleCancelPay}\n                                >Cancel</WalletButton>\n                            </div>\n                        </FormControl>\n\n                    </div>\n                }\n            />\n\n            <MessageModal\n                open={lowAmount}\n                setOpen={setLowAmount}\n                caption=\"Error!\"\n                message={`Amount cannot be less than ${amount}`}\n\n            />\n        </>\n    )\n}\n\nexport default Wallet\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getAUser, setProfilePhoto, setUserImage } from \"../redux/actions/userActions\"\nimport { ProfileContainer } from \"../styles/ProfileStyle\"\nimport Header from \"../components/MainHeader\"\nimport NotLoggedIn from \"../components/Utils/NotLoggedIn\"\nimport { IconButton } from \"@material-ui/core\"\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport TabIndex from \"../components/Profile/TabIndex\"\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport Wallet from \"../components/Utils/Wallet\"\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst ProfilePage = () => {\n    const [upload, setUpload] = useState({\n        open: false,\n        files: []\n    })\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        address: '',\n        phoneNo: '',\n        image: '',\n        message: ''\n    })\n    const dispatch = useDispatch()\n\n    const profilePhoto = useSelector(state => state.profilePhoto)\n    const { loading: photoLoading, success, photoUrl } = profilePhoto\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    useEffect(() => {\n        dispatch(setUserImage())\n        if (success) {\n            dispatch(getAUser(userInfo._id))\n        }\n    }, [dispatch, userInfo, success])\n\n    const handleFileSave = (files) => {\n        setUpload({ files: files, open: false })\n        const formData = new FormData()\n        formData.append('image', files[0])\n        dispatch(setProfilePhoto(userInfo._id, formData))\n\n    }\n\n\n    return (\n        <div>\n            <Meta />\n            <Header />\n            {\n                !userInfo ? <NotLoggedIn /> :\n                    <>\n\n                        <ProfileContainer>\n                            <div className=\"backgroundheader\">\n                                <div className=\"wallet\">\n                                    <Wallet mb={15} />\n                                </div>\n                            </div>\n                            <div className=\"profileimage\">\n                                {photoLoading ? <Loader /> :\n                                    <img src={\n                                        photoUrl ? photoUrl :\n                                            userInfo.profile && userInfo.profile.picture ?\n                                                userInfo.profile.picture\n                                                :\n                                                'https://www.minervastrategies.com/wp-content/uploads/2016/03/default-avatar.jpg'\n                                    }\n                                        alt=\"\" />\n                                }\n                                <IconButton className=\"filebutton\">\n                                    <AddAPhotoIcon onClick={() => setUpload({ ...upload, open: true })} />\n                                    <DropzoneDialog\n                                        open={upload.open}\n                                        filesLimit={1}\n                                        clearOnUnmount={false}\n                                        // onChange={(files) => console.log('Files:', files)}\n                                        onSave={handleFileSave}\n                                        submitButtonText=\"Add image\"\n                                        acceptedFiles={['image/jpeg', 'image/png']}\n                                        showPreviews={true}\n                                        maxFileSize={1000000}\n                                        onClose={() => setUpload({ ...upload, open: false })}\n                                    />\n\n                                </IconButton>\n\n                            </div>\n                            <div>\n\n                            </div>\n\n                            <>\n                                <TabIndex values={values} setValues={setValues} />\n                            </>\n\n                        </ProfileContainer>\n\n                    </>\n            }\n        </div>\n    )\n}\n\nexport default ProfilePage\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n});\n\nexport default function LinearDeterminate() {\n    const classes = useStyles();\n    const [progress, setProgress] = React.useState(0);\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((oldProgress) => {\n                if (oldProgress === 100) {\n                    return 0;\n                }\n                const diff = Math.random() * 10;\n                return Math.min(oldProgress + diff, 100);\n            });\n        }, 500);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress variant=\"determinate\" value={progress} />\n        </div>\n    );\n}\n","import React from 'react'\nimport {\n    BaseContainer,\n    CardMoreContainer,\n} from \"../../styles/ServiceStyle.js\"\nimport LoadCards from \"../LoadCards\"\nimport Header from \"../MainHeader\"\nimport LinearLoader from \"../Loaders/LinearLoader\"\nimport Message from \"../Message\"\n\nconst Base = ({\n    cardLoading,\n    cardError,\n    cards,\n    TopImage,\n    topText,\n    children,\n    bgHeight\n}) => {\n\n    // const drawerToggle = useSelector(state => state.drawerToggle)\n\n    return (\n        <>\n            <Header />\n            <BaseContainer >\n                <div className=\"topimage\">\n                    <div className=\"centeritem\">\n                        {TopImage}\n\n                        <h4>{topText}</h4>\n                    </div>\n                </div>\n                {\n                    cardLoading ? <LinearLoader />\n                        :\n                        cardError ?\n                            <Message variant=\"error\">\n                                {cardError}\n                            </Message>\n                            :\n                            <>\n                                {children}\n                                <CardMoreContainer>\n                                    <LoadCards\n                                        loading={cardLoading}\n                                        cards={cards}\n                                        error={cardError}\n                                    />\n                                </CardMoreContainer>\n                            </>\n                }\n            </BaseContainer>\n        </>\n    )\n}\n\nexport default Base\n","import React from 'react'\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport { NumRangeContainer } from \"../styles/ServiceStyle.js\"\n\nconst NumRange = ({ num, setNum, setPrice, amount, limit }) => {\n    const max = limit > 0 ? limit : 1\n    const handleNumDecrement = () => {\n        const newNum = num === 1 ? num : num - 1\n        setNum(newNum)\n        setPrice(newNum * amount)\n    }\n\n    const handleNumIncrement = () => {\n        const newNum = num === max ? num : num + 1\n        setNum(newNum)\n        setPrice(parseInt(newNum * amount))\n    }\n    return (\n        <NumRangeContainer>\n            <button onClick={handleNumDecrement}>\n                <RemoveIcon />\n            </button>\n            <span>{num}</span>\n            <button onClick={handleNumIncrement}>\n                <AddIcon />\n            </button>\n        </NumRangeContainer>\n    )\n}\n\nexport default NumRange\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nexport default function PaymentMethods({ value, setValue }) {\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\" className=\"paymenttitle\">Choose Payment Methods</FormLabel>\n      <RadioGroup\n        aria-label=\"payment methods\"\n        className=\"paymentitem\"\n        value={value}\n        onChange={handleChange}\n      >\n        <FormControlLabel value=\"PayStack\" control={<Radio />} label=\"PayStack\" />\n        <FormControlLabel value=\"Flutterwave\" control={<Radio />} label=\"Flutterwave\" />\n        <FormControlLabel value=\"Wallet\" control={<Radio />} label=\"Wallet\" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import React, { useState, useEffect } from 'react'\nimport { NextButton } from \"../../styles/ServiceStyle.js\"\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport PaymentMethods from \"../Payment/PaymentMethods\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { createCardOrder } from \"../../redux/actions/cardOrderActions\"\nimport { CARD_ORDER_CREATE_RESET } from \"../../redux/constants/cardOrderConstants\"\nimport MessageModal from \"../Utils/MessageModal\"\n\n\nconst ChoosePayment = ({ num, baseAmount }) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch({ type: CARD_ORDER_CREATE_RESET })\n    }, [dispatch])\n\n    const [paymentMeans, setPaymentMeans] = useState('PayStack');\n    const [insufficientAmount, setInsufficientAmount] = useState(false)\n    const [outOfStock, setOutOfStock] = useState(false)\n\n    const cardOrderCreate = useSelector(state => state.cardOrderCreate)\n    const { loading: createLoading, order, success: createSuccess, error: createError }\n        = cardOrderCreate\n\n    const { userInfo } = useSelector(state => state.userLogin)\n\n    const { wallet } = useSelector(state => state.userWalletAmount)\n\n    const { card } = useSelector(state => state.cardDetails)\n\n    useEffect(() => {\n        if (createSuccess) {\n            history.push(`/payorder/card?orderId=${order._id}`)\n        }\n    }, [createSuccess, history, order])\n\n    const balance = wallet && parseInt(wallet - num * baseAmount)\n\n\n    const handleOrderPlacement = () => {\n        if (userInfo) {\n            if (paymentMeans === 'Wallet') {\n                if (balance < 0) {\n                    setInsufficientAmount(true)\n                    return\n                }\n            }\n            if (card.items.length === 0) {\n                setOutOfStock(true)\n                return\n            }\n\n            dispatch(createCardOrder({\n                orderItems: {\n                    card: card._id,\n                    name: card.name,\n                    qty: num,\n                    image: card.upload.image,\n                    price: num * baseAmount\n                },\n                paymentMethod: paymentMeans\n            }))\n\n        }\n    }\n\n    return (\n        <div className=\"buyinfo--second\">\n\n            <div className=\"paymentmethod-alt\"\n            >\n                {\n                    createLoading ? <Loader /> :\n                        createError ?\n                            createError\n                            :\n                            (\n                                <>\n                                    <PaymentMethods\n                                        value={paymentMeans}\n                                        setValue={setPaymentMeans}\n                                    />\n                                    {\n                                        userInfo ?\n\n                                            <NextButton\n                                                onClick={handleOrderPlacement}\n                                            >\n                                                Place Order <ArrowForwardIosIcon />\n                                            </NextButton>\n                                            :\n                                            <NextButton\n                                                onClick={() => history.push(\"/auth\")}>\n                                                Login to Place Order <ArrowForwardIosIcon />\n                                            </NextButton>\n                                    }\n\n                                </>\n                            )\n                }\n\n            </div>\n            <MessageModal\n                open={insufficientAmount}\n                setOpen={setInsufficientAmount}\n                caption=\"Insufficient Fund\"\n                message=\n                {<div>\n                    Please add money to your wallet or <br />choose another payment method\n                    </div>}\n            />\n\n            <MessageModal\n                open={outOfStock}\n                setOpen={setOutOfStock}\n                caption=\"Out of Stock\"\n                message=\n                {<div>\n                    Sorry. This card is out of stock. <br />\n                        Try another card.\n                    </div>}\n            />\n        </div>\n    )\n}\n\nexport default ChoosePayment\n","import React from 'react'\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst ServiceHowTo = () => {\n    return (\n        <div className='howto'>\n            <h2>How It Works</h2>\n            <ul>\n                <li>\n                    <CheckBoxIcon /> Choose the number of cards you want to buy and select your\n                    payment method (Paystack, Flutterwave or Wallet).\n                </li>\n                <li>\n                    <CheckBoxIcon /> Want to pay by wallet? Fund your wallet with a click.\n                    You can pay in money from your bank account.\n                    Your information is safe.\n                </li>\n                <li>\n                    <CheckBoxIcon /> Click on \"Place Order\" to place an order.\n                </li>\n                <li>\n                    <CheckBoxIcon /> Confirm your order and pay. Your purchased card will be sent to your email and also available in your profile.\n                </li>\n\n            </ul>\n        </div>\n    )\n}\n\nexport default ServiceHowTo\n","import React, { useState, useEffect } from 'react'\nimport NumRange from \"../NumRange\"\nimport { useSelector } from \"react-redux\"\nimport ChoosePayment from './ChoosePayment';\nimport Wallet from \"../Utils/Wallet\"\nimport CurrencyFormat from 'react-currency-format';\nimport ServiceHowTo from './ServiceHowTo';\n\nconst BaseChildren = ({ baseAmount, availability, name }) => {\n\n    const cardDetails = useSelector(state => state.cardDetails)\n    const { loading: cardLoading, card, error: cardError } = cardDetails\n\n    const [num, setNum] = useState(1)\n    const [totalCost, setTotalCost] = useState(null)\n\n    const cardOrderCreate = useSelector(state => state.cardOrderCreate)\n    const { success: createSuccess } = cardOrderCreate\n\n    useEffect(() => {\n        if (!cardLoading && !cardError) {\n            setTotalCost(card.price)\n        }\n    }, [cardLoading, cardError, card])\n\n\n\n\n    return (\n        <div className=\"children\">\n\n            <Wallet mt={50} width={300} />\n            <div className=\"card__content__info\" id='buypane'>\n                <div className=\"buyinfo--edit\">\n                    {\n                        !createSuccess &&\n                        <div className=\"buyinfo--first edit\">\n                            <div className=\"number\" >\n                                <span>1</span>\n                            </div>\n\n                            <div className=\"contents\">\n                                <div className=\"numrange\">\n                                    <h5>How many cards?\n                            <hr />\n                                    </h5>\n                                    <NumRange\n                                        num={num}\n                                        setNum={setNum}\n                                        setPrice={setTotalCost}\n                                        amount={parseInt(card && card.price)}\n                                        limit={card && card.items && card.items.length}\n                                    />\n                                    <div className=\"price__items\">\n                                        <span className=\"price\">\n                                            <CurrencyFormat\n                                                value={parseInt(totalCost)}\n                                                displayType={'text'}\n                                                thousandSeparator={true}\n                                                prefix={'₦'}\n                                                renderText={value => <h2>{value}</h2>}\n                                            />\n\n                                        </span>\n\n                                        <small>\n                                            <div></div>\n                                            <span>\n                                                {\n                                                    card && card.items &&\n                                                    (card.items.length > 0 ? \"In stock\" : \"Out of stock\")\n                                                }\n                                            </span>\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    }\n\n                    <div className=\"buyinfo--second\">\n                        <hr />\n\n                        <div className=\"paymentmethod-alt\">\n                            <div className=\"number bottom\" >\n                                <span>2</span>\n                            </div>\n                            <ChoosePayment\n                                num={num}\n                                baseAmount={baseAmount}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <ServiceHowTo />\n            </div>\n\n        </div>\n    )\n}\n\nexport default BaseChildren\n","import React, { useEffect } from 'react'\nimport jwt_decode from 'jwt-decode'\nimport BaseFile from \"../components/Services/Base\"\nimport BaseChildren from \"../components/Services/BaseChildren\"\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { logout } from \"../redux/actions/userActions\"\nimport { DRAWER_CLOSE } from \"../redux/constants/utilConstants\"\nimport { Modal } from \"../styles/ModalStyle\"\nimport { Link } from \"react-router-dom\"\nimport {\n    listCardDetails,\n    listFewCards\n} from '../redux/actions/cardActions'\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\nimport { CARD_ORDER_CREATE_RESET, CARD_ORDER_UPDATE_RESET } from '../redux/constants/cardOrderConstants'\n\nconst CardPage = () => {\n    const history = useHistory()\n    const location = useLocation()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const cardListFew = useSelector(state => state.cardListFew)\n    const { loading: cardsLoading, cards, error: cardsError } = cardListFew\n\n    const cardDetails = useSelector(state => state.cardDetails)\n    const { loading: cardLoading, card } = cardDetails\n\n    useEffect(() => {\n        scroll.scrollTo(350)\n\n    }, [])\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch({ type: CARD_ORDER_CREATE_RESET })\n        dispatch({ type: CARD_ORDER_UPDATE_RESET })\n        dispatch({ type: DRAWER_CLOSE })\n    }, [dispatch])\n\n    useEffect(() => {\n        if (userInfo) {\n            const { exp } = jwt_decode(userInfo.token)\n            const expirationTime = (exp * 1000) - 6000\n            if (Date.now() >= expirationTime) {\n                dispatch(logout())\n            }\n        }\n\n    }, [dispatch, userInfo, history])\n\n    useEffect(() => {\n        const splittedPath = location.pathname.split(/\\//)\n        const id = splittedPath[splittedPath.length - 1]\n\n        dispatch(listCardDetails(id))\n        dispatch(listFewCards(4))\n    }, [dispatch, location])\n\n    return (\n        <div>\n            <Meta />\n\n            {\n                !userInfo && (\n                    <Modal>\n                        <div className=\"modalitem\">\n                            <p>You are not signed in</p>\n                            <div>\n                                <Link to=\"/auth\">Login <VpnKeyIcon /></Link>\n                                <span>to continue</span>\n                            </div>\n                        </div>\n                    </Modal>\n                )\n            }\n            <BaseFile\n                loading={cardsLoading}\n                cards={cards}\n                error={cardsError}\n                TopImage={<img src={card && card.upload && card.upload.image} alt={card && card.name} />}\n                topText={card && card.name}\n            >\n                {\n                    cardLoading ? <Loader />\n                        :\n\n                        <BaseChildren\n                            baseAmount={card && card.price}\n                            availability={card && card.countInStock > 0 ? \"In stock\" : \"Out of stock\"}\n                            name={card && card.name}\n                        />\n\n                }\n            </BaseFile>\n        </div>\n    )\n}\n\nexport default CardPage\n","import React, { useEffect } from 'react'\nimport Base from \"../components/Services/Base\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { listCards } from '../redux/actions/cardActions'\nimport { DRAWER_CLOSE } from \"../redux/constants/utilConstants\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\nimport { CARD_ORDER_CREATE_RESET, CARD_ORDER_UPDATE_RESET } from \"../redux/constants/cardOrderConstants\"\nimport { WALLET_DEBIT_RESET } from '../redux/constants/userConstants'\n\n\nconst AllCardsPage = () => {\n\n    const cardList = useSelector(state => state.cardList)\n    const { loading: cardsLoading, cards, error: cardsError } = cardList\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch({ type: DRAWER_CLOSE })\n        dispatch({ type: CARD_ORDER_CREATE_RESET })\n        dispatch({ type: CARD_ORDER_UPDATE_RESET })\n        dispatch({ type: WALLET_DEBIT_RESET })\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(listCards())\n    }, [dispatch])\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    return (\n        <div>\n            <Meta />\n            <Base\n                loading={cardsLoading}\n                cards={cards}\n                error={cardsError}\n                topText=\"Browse All Cards. A Click Away to Purchase.\"\n            >\n\n            </Base>\n        </div>\n    )\n}\n\nexport default AllCardsPage\n","import axios from \"axios\"\nimport React, { useState } from 'react'\nimport { FormControl, InputAdornment, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\nimport SchoolIcon from '@material-ui/icons/School';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst InstitutionChoice = ({ stage, programme, setProgramme,\n    institution, setInstitution,\n    course, setCourse, required }) => {\n    const classes = useStyles();\n    const [schools, setSchools] = useState([])\n    const [courses, setCourses] = useState([])\n    const [tempInstitution, setTempInstitution] = useState()\n\n    const onProgrammeChange = (stage) => async (e) => {\n        setProgramme({ ...programme, [stage]: e.target.value })\n        const { data } = await axios.get(`/api/schools/programme/${e.target.value}`)\n        setSchools(data)\n        console.log(data)\n    }\n\n    const onInstitutionChange = (stage) => async (e) => {\n        const index = e.target.selectedIndex\n        const selectedText = e.target[index].text\n        setTempInstitution(e.target.value)\n        setInstitution({ ...institution, [stage]: selectedText })\n\n        const { data } = await axios.get(`/api/schools/${e.target.value}`)\n        setCourses(data.courses)\n    }\n\n\n    return (\n        <div className=\"content\">\n            <FormControl fullWidth className={classes.formControl}>\n                <TextField\n                    select\n                    id={`programme-${stage}`}\n                    required={required}\n                    label=\"Preferred Programme\"\n                    value={programme.[stage]}\n                    onChange={onProgrammeChange(stage)}\n                    SelectProps={{\n                        native: true\n                    }}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><LoyaltyIcon /> </InputAdornment>\n                    }}\n                    helperText=\"Please select preferred programme\"\n                >\n                    <>\n                        <option value=\"\" ></option>\n                        <option value=\"donotchange\">Do not change</option>\n                        <option value=\"degree\">Degree</option>\n                        <option value=\"HND\">HND</option>\n                        <option value=\"NCEOND\">NCE/OND</option>\n                        <option value=\"IEI\">IEI</option>\n                    </>\n                </TextField>\n            </FormControl>\n\n            <FormControl fullWidth className={classes.formControl}>\n                <TextField\n                    select\n                    required={required}\n                    value={tempInstitution}\n                    label=\"Institution\"\n                    onChange={onInstitutionChange(stage)}\n                    SelectProps={{\n                        native: true\n                    }}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><SchoolIcon /> </InputAdornment>\n                    }}\n                    helperText=\"Please select institution\"\n                >\n                    {\n                        schools &&\n                        <>\n                            {\n                                schools.length !== 0 &&\n                                <option value=\"\">Choose an institution</option>\n                            }\n                            {schools.map((school) => (\n                                <option key={school._id} value={school._id}>\n                                    {school.institution}\n                                </option>\n                            ))}\n                        </>\n                    }\n                </TextField>\n            </FormControl>\n\n            <FormControl fullWidth className={classes.formControl}>\n                <TextField\n                    select\n                    required={required}\n                    label=\"Courses\"\n                    value={course.[stage]}\n                    onChange={(e) => setCourse({ ...course, [stage]: e.target.value })}\n                    SelectProps={{\n                        native: true,\n                    }}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><MenuBookIcon /> </InputAdornment>\n                    }}\n                    helperText=\"Please select course\"\n                >\n\n                    {\n                        courses &&\n                        <>\n                            {\n                                courses.length !== 0 &&\n                                <option value=\"\">Choose a course</option>\n                            }\n                            {courses.map((course, ind) => (\n                                <option key={ind} value={course}>\n                                    {course}\n                                </option>\n                            ))}\n                        </>\n                    }\n\n                </TextField>\n            </FormControl>\n        </div>\n    )\n}\n\nexport default InstitutionChoice\n","export const SERVICE_CREATE_REQUEST = \"SERVICE_CREATE_REQUEST\";\nexport const SERVICE_CREATE_SUCCESS = \"SERVICE_CREATE_SUCCESS\";\nexport const SERVICE_CREATE_FAIL = \"SERVICE_CREATE_FAIL\";\n\nexport const SERVICE_UPDATE_REQUEST = \"SERVICE_UPDATE_REQUEST\";\nexport const SERVICE_UPDATE_SUCCESS = \"SERVICE_UPDATE_SUCCESS\";\nexport const SERVICE_UPDATE_FAIL = \"SERVICE_UPDATE_FAIL\";\n\nexport const SERVICE_DELETE_REQUEST = \"SERVICE_DELETE_REQUEST\";\nexport const SERVICE_DELETE_SUCCESS = \"SERVICE_DELETE_SUCCESS\";\nexport const SERVICE_DELETE_FAIL = \"SERVICE_DELETE_FAIL\";\n\nexport const SERVICE_DETAILS_REQUEST = \"SERVICE_DETAILS_REQUEST\";\nexport const SERVICE_DETAILS_SUCCESS = \"SERVICE_DETAILS_SUCCESS\";\nexport const SERVICE_DETAILS_FAIL = \"SERVICE_DETAILS_FAIL\";\n\nexport const SERVICE_BY_NAME_REQUEST = \"SERVICE_BY_NAME_REQUEST\";\nexport const SERVICE_BY_NAME_SUCCESS = \"SERVICE_BY_NAME_SUCCESS\";\nexport const SERVICE_BY_NAME_FAIL = \"SERVICE_BY_NAME_FAIL\";\n\nexport const SERVICE_LIST_REQUEST = \"SERVICE_LIST_REQUEST\";\nexport const SERVICE_LIST_SUCCESS = \"SERVICE_LIST_SUCCESS\";\nexport const SERVICE_LIST_FAIL = \"SERVICE_LIST_FAIL\";","import axios from 'axios'\nimport {\n  SERVICE_LIST_REQUEST,\n  SERVICE_LIST_SUCCESS,\n  SERVICE_LIST_FAIL,\n\n  SERVICE_DETAILS_REQUEST,\n  SERVICE_DETAILS_SUCCESS,\n  SERVICE_DETAILS_FAIL,\n\n  SERVICE_CREATE_REQUEST,\n  SERVICE_CREATE_SUCCESS,\n  SERVICE_CREATE_FAIL,\n\n  SERVICE_UPDATE_REQUEST,\n  SERVICE_UPDATE_SUCCESS,\n  SERVICE_UPDATE_FAIL,\n\n  SERVICE_BY_NAME_REQUEST,\n  SERVICE_BY_NAME_SUCCESS,\n  SERVICE_BY_NAME_FAIL\n} from '../constants/serviceConstants'\nimport { logout } from './userActions'\nimport { setMessage } from './utilActions'\n\nexport const listServices = () => async (dispatch) => {\n  try {\n    dispatch({ type: SERVICE_LIST_REQUEST })\n\n    const { data } = await axios.get(`/api/services`)\n\n    dispatch({\n      type: SERVICE_LIST_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: SERVICE_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listServiceDetailsById = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: SERVICE_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/services/${id}`)\n\n    dispatch({\n      type: SERVICE_DETAILS_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: SERVICE_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\nexport const listServiceByName = (name) => async (dispatch) => {\n  try {\n    dispatch({ type: SERVICE_BY_NAME_REQUEST })\n\n    const { data } = await axios.get(`/api/services/name/${name}`)\n\n    dispatch({\n      type: SERVICE_BY_NAME_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: SERVICE_BY_NAME_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\nexport const createService = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SERVICE_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/services/`, {}, config)\n\n    dispatch({\n      type: SERVICE_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SERVICE_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateService = (service) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SERVICE_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/services/${service._id}`, service, config)\n\n    dispatch({\n      type: SERVICE_UPDATE_SUCCESS,\n      payload: data,\n    })\n\n    dispatch(listServiceByName(service.name))\n    dispatch(setMessage(\"Service updated\"))\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SERVICE_UPDATE_FAIL,\n      payload: message,\n    })\n    dispatch(setMessage(message))\n  }\n}\n\n","import React from 'react'\nimport CurrencyFormat from 'react-currency-format'\nimport { ServiceAlertContainer } from '../../styles/ServiceStyle'\nimport Message from \"../Message\"\n\nconst ServiceAlert = () => {\n    return (\n\n        <ServiceAlertContainer>\n            <Message variant='info'>\n                If you are on this page, we expect that you have already made a successful payment\n                 of <CurrencyFormat\n                    value={2500}\n                    displayType={'text'}\n                    thousandSeparator={true}\n                    prefix={'₦'}\n                    renderText={value => <span className='amount'>{value}</span>} /> on the Jamb portal\n            </Message>\n        </ServiceAlertContainer>\n    )\n}\n\nexport default ServiceAlert\n","import React, { useState, useEffect } from 'react'\nimport { ButtonSingle, NextButton } from \"../../styles/ServiceStyle\"\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Input, NativeSelect, FormControl, FormHelperText } from '@material-ui/core'\nimport { TextareaAutosize, InputLabel, InputAdornment } from '@material-ui/core'\nimport { Person as PersonIcon, TrendingFlat as TrendingFlatIcon } from '@material-ui/icons'\nimport { ExitToApp as ExitToAppIcon, Code as CodeIcon } from '@material-ui/icons'\nimport { LockOpen as LockOpenIcon, Message as MessageIcon } from '@material-ui/icons'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport InstitutionChoices from \"./InstitutionChoices\"\nimport CurrencyFormat from 'react-currency-format';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { listServiceByName } from \"../../redux/actions/serviceActions\"\nimport { WALLET_DEBIT_RESET } from '../../redux/constants/userConstants'\nimport ServiceAlert from './ServiceAlert';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\n\nconst CourseChangeForm = ({\n    type,\n    setType,\n    name,\n    setName,\n    profileCode,\n    setProfileCode,\n    OTP,\n    setOTP,\n    regNo,\n    setRegNo,\n    programme,\n    setProgramme,\n    institution,\n    setInstitution,\n    course,\n    setCourse,\n    activeStep,\n    setActiveStep,\n    moreInfo,\n    setMoreInfo\n}) => {\n    const classes = useStyles();\n    const [toggleType, setToggleType] = useState(type === 'UTME' ? true : type === 'DE' ? false : true)\n    const [OTPStatus, setOTPStatus] = useState(false)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const name = 'jamb change of course and institution'\n\n        dispatch(listServiceByName(name))\n        dispatch({ type: WALLET_DEBIT_RESET })\n    }, [dispatch])\n\n    const { service } = useSelector(state => state.serviceByName)\n\n\n    const handleTypeChange = (e) => {\n        const val = e.target.value\n        setType(val)\n        if (val === 'UTME') {\n            setToggleType(true)\n        } else {\n            setToggleType(false)\n        }\n    }\n    const onSubmit = e => {\n        e.preventDefault()\n        setActiveStep(activeStep + 1)\n    }\n\n    return (\n        <div>\n            <ServiceAlert />\n            <div className=\"topmainitem\">\n                <div>\n                    <i className=\"fas fa-tags\"></i>\n                    <CurrencyFormat\n                        value={service && service.cost}\n                        displayType={'text'}\n                        thousandSeparator={true}\n                        prefix={'₦'}\n                        renderText={value => <h3>{value}</h3>} />\n                </div>\n                <div>\n                    <FormControlLabel\n                        label=\"Check if you have OTP\"\n                        control={\n                            <Checkbox\n                                checked={OTPStatus}\n                                onChange={(e) => setOTPStatus(e.target.checked)}\n                                color=\"secondary\"\n                            />\n                        }\n                    />\n                </div>\n            </div>\n            <form onSubmit={onSubmit} style={{ display: OTPStatus ? 'block' : 'none' }}>\n                <FormControl className={classes.formControl}>\n                    <NativeSelect\n                        fullWidth\n                        required\n                        className={classes.selectEmpty}\n                        value={type}\n                        onChange={handleTypeChange}\n                        inputProps={{ 'aria-label': 'type' }}\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <TrendingFlatIcon />\n                            </InputAdornment>}\n                    >\n                        <option value=\"UTME\">UTME</option>\n                        <option value=\"DE\">Direct Entry</option>\n                    </NativeSelect>\n                    <FormHelperText>Select Type</FormHelperText>\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-name\">Full Name</InputLabel>\n                    <Input\n                        id=\"standard-adornment-name\"\n                        value={name}\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-amount\">Jamb Registration Number</InputLabel>\n                    <Input\n                        id=\"standard-adornment-regNo\"\n                        value={regNo}\n                        required\n                        onChange={(e) => setRegNo(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><ExitToAppIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-amount\">ProfileCode</InputLabel>\n                    <Input\n                        id=\"standard-adornment-amount\"\n                        value={profileCode}\n                        required\n                        onChange={(e) => setProfileCode(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><CodeIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-amount\">OTP</InputLabel>\n                    <Input\n                        id=\"standard-adornment-amount\"\n                        value={OTP}\n                        required\n                        onChange={(e) => setOTP(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><LockOpenIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <div className=\"choices\">\n                    <div className=\"choiceitem\">\n                        <h3>1st Choice</h3>\n                        <InstitutionChoices\n                            programme={programme}\n                            setProgramme={setProgramme}\n                            institution={institution}\n                            setInstitution={setInstitution}\n                            course={course}\n                            setCourse={setCourse}\n                            stage=\"first\"\n                            required={true}\n                        />\n                    </div>\n                    <div className=\"choiceitem\">\n                        <h3>2st Choice</h3>\n                        <InstitutionChoices\n                            programme={programme}\n                            setProgramme={setProgramme}\n                            institution={institution}\n                            setInstitution={setInstitution}\n                            course={course}\n                            setCourse={setCourse}\n                            stage=\"second\"\n                            required={true}\n                        />\n                    </div>\n                    <div className=\"choiceitem\" style={{ display: toggleType ? 'block' : 'none' }}>\n                        <h3>3rd Choice</h3>\n                        <InstitutionChoices\n                            programme={programme}\n                            setProgramme={setProgramme}\n                            institution={institution}\n                            setInstitution={setInstitution}\n                            course={course}\n                            setCourse={setCourse}\n                            stage=\"third\"\n                            required={toggleType}\n                        />\n                    </div>\n                    <div className=\"choiceitem\" style={{ display: toggleType ? 'block' : 'none' }}>\n                        <h3>4th Choice</h3>\n                        <InstitutionChoices\n                            programme={programme}\n                            setProgramme={setProgramme}\n                            institution={institution}\n                            setInstitution={setInstitution}\n                            course={course}\n                            setCourse={setCourse}\n                            stage=\"fourth\"\n                            required={toggleType}\n                        />\n                    </div>\n                </div>\n                <FormControl className={classes.formControl}>\n                    <TextareaAutosize\n                        aria-label=\"minimum height\"\n                        onChange={e => setMoreInfo(e.target.value)}\n                        value={moreInfo}\n                        rowsMin={5}\n                        startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                        placeholder=\"Additional Information (Optional)\" />\n                </FormControl>\n                <ButtonSingle>\n                    <NextButton\n                        type=\"submit\" >Next <NavigateNextIcon />\n                    </NextButton>\n                </ButtonSingle>\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default CourseChangeForm\n","import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport {ListFeatureElement, ButtonGroup, NextButton, NoMarginBackButton} from \"../../styles/ServiceStyle\"\nimport {colors} from \"../../styles/breakpoints\"\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst useStyles = makeStyles((theme) => ({\n    listItem: {\n      padding: theme.spacing(1, 0),\n    },\n    total: {\n      fontWeight: 700,\n    },\n    title: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\nconst CourseChangeReview = ({\n    type, \n    name, \n    profileCode,\n    OTP,\n    regNo, \n    programme,\n    institution,\n    course,\n    moreInfo,\n    activeStep,\n    setActiveStep\n}) => {\n    const classes = useStyles();\n  return (\n    <div>\n        <List>\n            <ListItem className={classes.listItem} key={`type ${type}`}>\n                <ListItemText primary=\"Upload Type\" secondary=\"UTME or Direct Entry\" />\n                <Typography variant=\"body2\">{type}</Typography>\n            </ListItem>\n            <ListItem className={classes.listItem} key={`name ${name}`}>\n                <ListItemText primary=\"Candidate's Name\" secondary={`Name of ${type} candidate`}  />\n                <Typography variant=\"body2\">{name}</Typography>\n            </ListItem>\n            <ListItem className={classes.listItem} key={`profileCode ${profileCode}`}>\n                <ListItemText primary=\"Candidate's Profile Code\" secondary={`Profile Code ${type} candidate`}  />\n                <Typography variant=\"body2\">{profileCode}</Typography>\n            </ListItem>\n            <ListItem className={classes.listItem} key={`otp ${OTP}`}>\n                <ListItemText primary=\"One Time Password\" secondary={`OTP on ${type} candidate's purchase`}  />\n                <Typography variant=\"body2\">{OTP}</Typography>\n            </ListItem>\n            <ListItem className={classes.listItem} key={`regNo ${regNo}`}>\n                <ListItemText primary=\"Candidate's Registration Number\" secondary={`Registration Number of ${type} candidate`}  />\n                <Typography variant=\"body2\">{regNo}</Typography>\n            </ListItem>\n            \n            \n            <ListFeatureElement>\n              <ListItem className={classes.listItem} key={`programme ${programme.first}`}>\n                  <ListItemText primary=\"First Preferred Programme\" secondary='Your first programme of choice'  />\n                  <Typography variant=\"body2\">{programme.first}</Typography>\n              </ListItem>\n              <ListItem className={classes.listItem} key={`institution ${institution.first}`}>\n                  <ListItemText primary=\"First Institution\" secondary={`Institution for ${programme.first}`}  />\n                  <Typography variant=\"body2\">{institution.first}</Typography>\n              </ListItem>\n              <ListItem className={classes.listItem} key={`programme ${course.first}`}>\n                  <ListItemText primary=\"First course\" secondary={`Course for ${institution.first}`}  />\n                  <Typography variant=\"body2\">{course.first}</Typography>\n              </ListItem>\n            </ListFeatureElement>\n\n            <ListFeatureElement>\n              <ListItem className={classes.listItem} key={`programme ${programme.second}`}>\n                  <ListItemText primary=\"Second Preferred Programme\" secondary='Your second programme of choice'  />\n                  <Typography variant=\"body2\">{programme.second}</Typography>\n              </ListItem>\n              <ListItem className={classes.listItem} key={`institution ${institution.second}`}>\n                  <ListItemText primary=\"Second Institution\" secondary={`Institution for ${programme.second}`}  />\n                  <Typography variant=\"body2\">{institution.second}</Typography>\n              </ListItem>\n              <ListItem className={classes.listItem} key={`programme ${course.second}`}>\n                  <ListItemText primary=\"Second course\" secondary={`Course for ${institution.second}`}  />\n                  <Typography variant=\"body2\">{course.second}</Typography>\n              </ListItem>\n            </ListFeatureElement>            \n            {\n              programme.third && (\n                <ListFeatureElement>\n                  <ListItem className={classes.listItem} key={`programme ${programme.third}`}>\n                    <ListItemText primary=\"Third Preferred Programme\" secondary='Your third programme of choice'  />\n                    <Typography variant=\"body2\">{programme.third}</Typography>\n                  </ListItem>\n                  <ListItem className={classes.listItem} key={`institution ${institution.third}`}>\n                    <ListItemText primary=\"Third Institution\" secondary={`Institution for ${programme.third}`}  />\n                    <Typography variant=\"body2\">{institution.third}</Typography>\n                  </ListItem>\n                  <ListItem className={classes.listItem} key={`programme ${course.third}`}>\n                    <ListItemText primary=\"Third course\" secondary={`Course for ${institution.third}`}  />\n                    <Typography variant=\"body2\">{course.third}</Typography>\n                  </ListItem>\n                </ListFeatureElement>\n              )\n            }\n            \n            {\n              programme.fourth && (\n                <ListFeatureElement>\n                  <ListItem className={classes.listItem} key={`programme ${programme.fourth}`}>\n                    <ListItemText primary=\"Fourth Preferred Programme\" secondary='Your fourth programme of choice'  />\n                    <Typography variant=\"body2\">{programme.fourth}</Typography>\n                  </ListItem>\n                  <ListItem className={classes.listItem} key={`institution ${institution.fourth}`}>\n                    <ListItemText primary=\"Fourth Institution\" secondary={`Institution for ${programme.fourth}`}  />\n                    <Typography variant=\"body2\">{institution.fourth}</Typography>\n                  </ListItem>\n                  <ListItem className={classes.listItem} key={`programme ${course.fourth}`}>\n                    <ListItemText primary=\"Fourth course\" secondary={`Course for ${institution.fourth}`}  />\n                    <Typography variant=\"body2\">{course.fourth}</Typography>\n                  </ListItem>\n                </ListFeatureElement>\n              )\n            }\n          \n            { moreInfo &&\n              <ListItem className={classes.listItem} key={`additional information ${moreInfo}`}>\n                <ListItemText primary=\"Additional Information\" secondary=\"Further details you need to add\"  />\n                <Typography variant=\"body2\">{moreInfo}</Typography>\n              </ListItem>\n            }\n          \n            <ButtonGroup>\n              <NoMarginBackButton \n                variant={colors.darkred}\n                onClick={() => setActiveStep(activeStep - 1)}>\n                <NavigateBeforeIcon /> Previous\n              </NoMarginBackButton>\n              <NextButton \n                variant={colors.darkblue}\n                onClick={() => setActiveStep(activeStep + 1)}>\n                 Next <NavigateNextIcon/>\n              </NextButton>\n            </ButtonGroup>\n        </List>      \n    </div>\n  )\n}\n\nexport default CourseChangeReview\n","import React from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { createChangeOfCourseOrder } from '../../redux/actions/changeOfCourseActions'\nimport { createJambPasswordResetOrder } from '../../redux/actions/jambPasswordResetActions'\nimport { createOlevelUploadOrder } from '../../redux/actions/oLevelResultUploadActions'\nimport PayStack from \"./PayStack\"\n\nconst PayStackCardPayment = ({ transactionType, orderItems }) => {\n    const dispatch = useDispatch()\n    const { service } = useSelector(state => state.serviceByName)\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    const onSuccess = (reference) => {\n        const paymentResult = {\n            id: reference.trxref,\n            status: reference.status,\n            update_time: String((new Date()).getTime()),\n            email: userInfo.email\n        }\n\n        if (transactionType === 'changeofcourse') {\n            dispatch(createChangeOfCourseOrder(\n                {\n                    orderItems, price: parseInt(service.cost),\n                    paymentMethod: 'PayStack', paymentResult\n                })\n            )\n        } else if (transactionType === 'jambpasswordreset') {\n            dispatch(createJambPasswordResetOrder(\n                {\n                    orderItems, price: parseInt(service.cost),\n                    paymentMethod: 'PayStack', paymentResult\n                })\n            )\n        } else if (transactionType === 'olevelresultupload') {\n\n            dispatch(createOlevelUploadOrder(\n                orderItems,\n                parseInt(service.cost),\n                'PayStack',\n                paymentResult\n            )\n            )\n        }\n    }\n\n    return (\n        <PayStack\n            amount={service && service.cost}\n            onSuccess={onSuccess}\n        />\n    )\n}\n\nexport default PayStackCardPayment\n","import { closePaymentModal } from 'flutterwave-react-v3'\nimport React from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { createChangeOfCourseOrder } from '../../redux/actions/changeOfCourseActions'\nimport { createJambPasswordResetOrder } from '../../redux/actions/jambPasswordResetActions'\nimport { createOlevelUploadOrder } from '../../redux/actions/oLevelResultUploadActions'\nimport Flutterwave from \"./Flutterwave\"\n\nconst FlutterwaveCardPayment = ({ transactionType, orderItems }) => {\n    const dispatch = useDispatch()\n    const { service } = useSelector(state => state.serviceByName)\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    const onSuccess = (reference) => {\n        const paymentResult = {\n            id: reference.transaction_id,\n            status: reference.status,\n            update_time: String((new Date()).getTime()),\n            email: userInfo.email\n        }\n\n        if (transactionType === 'changeofcourse') {\n            dispatch(createChangeOfCourseOrder(\n                {\n                    orderItems, price: parseInt(service.cost),\n                    paymentMethod: 'Flutterwave', paymentResult\n                })\n            )\n        } else if (transactionType === 'jambpasswordreset') {\n            dispatch(createJambPasswordResetOrder(\n                {\n                    orderItems, price: parseInt(service.cost),\n                    paymentMethod: 'Flutterwave', paymentResult\n                })\n            )\n        } else if (transactionType === 'olevelresultupload') {\n\n            dispatch(createOlevelUploadOrder(\n                orderItems,\n                parseInt(service.cost),\n                'Flutterwave',\n                paymentResult\n            ))\n        }\n        closePaymentModal()\n    }\n\n    return (\n        <Flutterwave\n            amount={service && service.cost}\n            service={orderItems.name}\n            onSuccess={onSuccess}\n        />\n\n    )\n}\n\nexport default FlutterwaveCardPayment\n","import React, { useState, useEffect } from 'react'\nimport Wallet from \"../Utils/Wallet\"\nimport { ButtonGroup, NextButton, NoMarginBackButton } from \"../../styles/ServiceStyle\"\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport PaymentMethods from \"../Payment/PaymentMethods\"\nimport { colors } from \"../../styles/breakpoints\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { debitWallet } from \"../../redux/actions/userActions\"\nimport PaystackPayment from \"../Payment/PayStackServicesPayment\"\nimport FlutterwavePayment from \"../Payment/FlutterwaveServicesPayment\"\nimport Loader from \"../Loaders/SimpleLoader\"\nimport Message from \"../Message\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nconst ServicePayment = ({\n    activeStep,\n    setActiveStep,\n    serviceOrder,\n\n}) => {\n    const history = useHistory()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayStack')\n    const { service } = useSelector(state => state.serviceByName)\n    const changeOfCourseOrderCreate = useSelector(state => state.changeOfCourseOrderCreate)\n    const { loading: cocLoading, error: cocError, success: cocSuccess } = changeOfCourseOrderCreate\n\n    const oLevelUploadOrderCreate = useSelector(state => state.oLevelUploadOrderCreate)\n    const { loading: oluLoading, error: oluError, success: oluSuccess } = oLevelUploadOrderCreate\n\n    const jambPasswordResetOrderCreate = useSelector(state => state.jambPasswordResetOrderCreate)\n    const { loading: jprLoading, error: jprError, success: jprSuccess } = jambPasswordResetOrderCreate\n\n    const walletDebit = useSelector(state => state.walletDebit)\n    const { loading: walletLoading, error: walletError } = walletDebit\n\n\n\n    const dispatch = useDispatch()\n\n    const handleWalletPayment = () => {\n        const { transactionType, orderItems } = serviceOrder()\n        const amount = parseInt(service.cost)\n        dispatch(debitWallet({ transactionType, orderItems, amount }))\n    }\n\n    useEffect(() => {\n        if (cocSuccess || oluSuccess || jprSuccess || cocError || oluError || jprError || walletError) {\n            history.push('/data-correction')\n        }\n    }, [cocSuccess, oluSuccess, jprSuccess, cocError, jprError, oluError, walletError, history])\n\n    return (\n        <div>\n            <Wallet width={300} />\n            <div className=\"paymentinfo\">\n\n                <div className={(walletError || cocError || oluError || jprError) && 'paymentresults'}>\n                    {\n                        walletLoading ? <Loader /> :\n                            walletError ?\n                                <Message variant=\"error\">\n                                    {walletError}\n                                    <Link onClick={() => setActiveStep(0)} >\n                                        Try again\n                                </Link>\n                                </Message>\n                                :\n                                null\n                    }\n                    {\n                        cocLoading ? <Loader /> :\n                            cocError ?\n                                <Message variant=\"error\">{cocError}</Message>\n                                :\n                                cocSuccess ?\n                                    <div>\n                                        <Message variant=\"info\">\n                                            Successful. We'll get back to you soon.\n                                    </Message>\n                                    </div>\n                                    : ''\n                    }\n\n                    {\n                        oluLoading ? <Loader /> :\n                            oluError ?\n                                <Message variant=\"error\">\n                                    {oluError}\n                                </Message>\n                                :\n                                oluSuccess ?\n                                    <Message variant=\"info\">\n                                        Successful. We'll get back to you soon.\n                                </Message>\n                                    : ''\n                    }\n\n                    {\n                        jprLoading ? <Loader /> :\n                            jprError ?\n                                <Message variant=\"error\">\n                                    {jprError}\n                                </Message>\n                                :\n                                jprSuccess ?\n                                    <div><Message variant=\"info\">\n                                        Successful. We'll get back to you soon.\n                                </Message> </div>\n                                    : ''\n                    }\n                </div>\n\n                <PaymentMethods\n                    value={paymentMethod}\n                    setValue={setPaymentMethod}\n                />\n            </div>\n\n            <ButtonGroup>\n                <NoMarginBackButton\n                    variant={colors.darkred}\n                    onClick={() => setActiveStep(activeStep - 1)}>\n                    <NavigateBeforeIcon /> Previous\n            </NoMarginBackButton>\n                {\n                    paymentMethod === 'PayStack' ?\n                        <PaystackPayment\n                            transactionType={serviceOrder().transactionType}\n                            orderItems={serviceOrder().orderItems}\n                        />\n                        :\n                        paymentMethod === 'Flutterwave' ?\n                            <FlutterwavePayment\n                                transactionType={serviceOrder().transactionType}\n                                orderItems={serviceOrder().orderItems}\n                            />\n                            :\n                            <NextButton\n                                variant={colors.darkblue}\n                                onClick={handleWalletPayment}\n                            >\n                                Pay <NavigateNextIcon />\n                            </NextButton>\n                }\n\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default ServicePayment\n","import React, { useState, useEffect } from 'react'\nimport BaseRoot from \"../components/Services/BaseRoot\"\nimport { ServiceTypeContainer, ServicePanel } from \"../styles/ServiceStyle\"\nimport { firstCardContainerVariants } from '../animationVariants/CardVariants'\nimport CourseChangeForm from \"../components/Services/CourseChangeForm\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport CourseChangeReview from '../components/Services/CourseChangeReview'\nimport ServicePayment from '../components/Services/ServicePayment'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { WALLET_DEBIT_RESET } from '../redux/constants/userConstants'\nimport { OLEVEL_UPLOAD_CREATE_RESET } from '../redux/constants/oLevelResultUploadConstants'\nimport { JAMB_PASSWORD_RESET_CREATE_RESET } from '../redux/constants/jambPasswordResetConstants'\nimport { COCI_CREATE_RESET } from '../redux/constants/changeOfCourseConstants'\nimport NotLoggedIn from \"../components/Utils/NotLoggedIn\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst useStyles = makeStyles((theme) => ({\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n}));\n\nconst steps = ['Form Entry', 'Review your order', 'Payment'];\n\nconst ChangeOfCourseInstitution = () => {\n    const classes = useStyles();\n    const [type, setType] = useState(\"UTME\")\n    const [name, setName] = useState(\"\")\n    const [regNo, setRegNo] = useState(\"\")\n    const [profileCode, setProfileCode] = useState(\"\")\n    const [OTP, setOTP] = useState(\"\")\n    const [activeStep, setActiveStep] = useState(0);\n    const [moreInfo, setMoreInfo] = useState(\"\");\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    useEffect(() => {\n        dispatch({ type: WALLET_DEBIT_RESET })\n        dispatch({ type: OLEVEL_UPLOAD_CREATE_RESET })\n        dispatch({ type: JAMB_PASSWORD_RESET_CREATE_RESET })\n        dispatch({ type: COCI_CREATE_RESET })\n\n    }, [dispatch])\n\n    const [programme, setProgramme] = useState({\n        first: null,\n        second: null,\n        third: null,\n        fourth: null\n    })\n\n    const [institution, setInstitution] = useState({\n        first: null,\n        second: null,\n        third: null,\n        fourth: null\n    })\n\n    const [course, setCourse] = useState({\n        first: null,\n        second: null,\n        third: null,\n        fourth: null\n    })\n\n\n\n    const changeOfCourseOrder = () => {\n        return {\n            transactionType: 'changeofcourse',\n            orderItems: {\n                type,\n                fullName: name,\n                regNo,\n                profileCode,\n                otp: OTP,\n                choices: [\n                    { preferredProgramme: programme.first, institution: institution.first, course: course.first },\n                    { preferredProgramme: programme.second, institution: institution.second, course: course.second },\n                    programme.third && { preferredProgramme: programme.third, institution: institution.third, course: course.third },\n                    programme.fourth && { preferredProgramme: programme.fourth, institution: institution.fourth, course: course.fourth },\n                ]\n            }\n        }\n    }\n\n\n\n    return (\n        <BaseRoot topText=\"Services\">\n            <Meta />\n            {\n                !userInfo ?\n                    <NotLoggedIn />\n                    :\n\n                    <ServiceTypeContainer>\n                        <ServicePanel\n                            variants={firstCardContainerVariants}\n                            initial='initial'\n                            animate='animate'\n                            whileHover='onHover'\n                            variant=\"lightish\"\n                        >\n                            <Stepper activeStep={activeStep} className={classes.stepper}>\n                                {steps.map((label) => (\n                                    <Step key={label}>\n                                        <StepLabel>{label}</StepLabel>\n                                    </Step>\n                                ))}\n                            </Stepper>\n                            {\n                                activeStep === 0 ?\n                                    <CourseChangeForm\n                                        type={type}\n                                        setType={setType}\n                                        regNo={regNo}\n                                        setRegNo={setRegNo}\n                                        OTP={OTP}\n                                        setOTP={setOTP}\n                                        profileCode={profileCode}\n                                        setProfileCode={setProfileCode}\n                                        name={name}\n                                        setName={setName}\n                                        programme={programme}\n                                        setProgramme={setProgramme}\n                                        institution={institution}\n                                        setInstitution={setInstitution}\n                                        course={course}\n                                        setCourse={setCourse}\n                                        activeStep={activeStep}\n                                        setActiveStep={setActiveStep}\n                                        moreInfo={moreInfo}\n                                        setMoreInfo={setMoreInfo}\n                                    />\n                                    :\n                                    activeStep === 1 ?\n                                        <CourseChangeReview\n                                            type={type}\n                                            name={name}\n                                            profileCode={profileCode}\n                                            OTP={OTP}\n                                            regNo={regNo}\n                                            programme={programme}\n                                            institution={institution}\n                                            course={course}\n                                            moreInfo={moreInfo}\n                                            activeStep={activeStep}\n                                            setActiveStep={setActiveStep}\n                                        />\n                                        :\n                                        activeStep === 2 ?\n                                            <ServicePayment\n                                                activeStep={activeStep}\n                                                setActiveStep={setActiveStep}\n                                                serviceOrder={changeOfCourseOrder}\n                                            // handleWalletPayment = {handleSubmit}\n                                            />\n\n                                            :\n                                            null\n                            }\n\n                        </ServicePanel>\n                    </ServiceTypeContainer>\n            }\n        </BaseRoot>\n    )\n}\n\nexport default ChangeOfCourseInstitution\n","import React, { useState, useEffect } from 'react'\nimport NumRange from \"../NumRange\"\nimport { listCardDetails } from \"../../redux/actions/cardActions\"\nimport { cardUpdateOrder } from \"../../redux/actions/cardOrderActions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport PaymentMethods from \"../Payment/PaymentMethods\"\nimport { EditButton } from \"../../styles/ServiceStyle\"\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useHistory } from \"react-router-dom\"\nimport ServiceHowTo from './ServiceHowTo'\n\nconst EditCards = ({ id, cardObj, paymentMethod }) => {\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        dispatch(listCardDetails(cardObj.card))\n    }, [dispatch, cardObj.card])\n\n    const { card } = useSelector(state => state.cardDetails)\n\n    const [num, setNum] = useState(cardObj.qty)\n    const [totalCost, setTotalCost] = useState(parseInt(cardObj.price))\n    const [paymentMeans, setPaymentMeans] = useState(paymentMethod);\n\n\n    const handleCardOrderEdit = () => {\n        if (card) {\n            dispatch(cardUpdateOrder(\n                id,\n                {\n                    orderItems: {\n                        card: card._id,\n                        name: card.name,\n                        qty: num,\n                        image: card.upload.image,\n                        price: parseInt(num * card.price)\n                    },\n                    paymentMethod: paymentMeans\n                }))\n            history.push(`/payorder/card?orderId=${id}`)\n        }\n    }\n\n    return (\n        <div className=\"card__content__info\" id='buypane'>\n            <div className=\"buyinfo--edit\">\n                <div className=\"buyinfo--first edit\">\n                    <div className=\"number\" >\n                        <span>1</span>\n                    </div>\n\n                    <div className=\"contents\">\n                        <div className=\"numrange\">\n                            <h5>How many cards?\n                            <hr />\n                            </h5>\n                            <NumRange\n                                num={num}\n                                setNum={setNum}\n                                setPrice={setTotalCost}\n                                amount={card && parseInt(card.price)}\n                                limit={card && card.items && card.items.length}\n                            />\n                            <div className=\"price__items\">\n                                <span className=\"price\">₦{totalCost}</span>\n\n                                <small>\n                                    <div></div>\n                                    <span>\n                                        {\n                                            card && card.items &&\n                                            (card.items.length > 0 ?\n                                                \"In stock\" : \"Out of stock\")\n                                        }\n                                    </span>\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"buyinfo--second\">\n                    <hr />\n\n                    <div className=\"paymentmethod-alt\">\n                        <div className=\"number bottom\" >\n                            <span>2</span>\n                        </div>\n                        <PaymentMethods\n                            value={paymentMeans}\n                            setValue={setPaymentMeans}\n                        />\n                    </div>\n                </div>\n\n                <EditButton onClick={handleCardOrderEdit}>\n                    Edit <EditIcon />\n                </EditButton>\n            </div>\n            <ServiceHowTo />\n        </div>\n    )\n}\n\nexport default EditCards\n","import React, { useEffect } from 'react'\nimport jwt_decode from 'jwt-decode'\nimport BaseFile from \"../components/Services/Base\"\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport { useLocation } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getCardOrderDetails } from \"../redux/actions/cardOrderActions\"\nimport { listFewCards } from '../redux/actions/cardActions'\nimport queryString from \"query-string\"\nimport EditCards from '../components/Services/EditCards'\nimport NotLoggedIn from \"../components/Utils/NotLoggedIn\"\nimport { logout } from \"../redux/actions/userActions\"\nimport Meta from \"../components/Meta\"\nimport { WALLET_DEBIT_RESET } from '../redux/constants/userConstants'\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst CardPage = () => {\n\n    const location = useLocation()\n    const { id } = queryString.parse(location.search)\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        scroll.scrollTo(300)\n\n    }, [])\n\n    useEffect(() => {\n        dispatch({ type: WALLET_DEBIT_RESET })\n    }, [dispatch])\n\n    useEffect(() => {\n        if (userInfo) {\n            const { exp } = jwt_decode(userInfo.token)\n            const expirationTime = (exp * 1000) - 6000\n            if (Date.now() >= expirationTime) {\n                dispatch(logout())\n            }\n        }\n\n        dispatch(getCardOrderDetails(id))\n        dispatch(listFewCards(4))\n    }, [dispatch, userInfo, id])\n\n\n    const cardListFew = useSelector(state => state.cardListFew)\n    const { loading: cardsLoading, cards, error: cardsError } = cardListFew\n\n    const cardOrderDetails = useSelector(state => state.cardOrderDetails)\n    const { loading: orderLoading, order, error: orderError } = cardOrderDetails\n\n    return (\n        <div>\n            <Meta />\n            {\n\n                !userInfo ?\n                    <NotLoggedIn />\n                    :\n                    <>\n                        {\n\n                            <BaseFile\n                                loading={cardsLoading}\n                                cards={cards}\n                                error={cardsError}\n                                TopImage={\n                                    order && order.orderItems &&\n                                    <img src={order.orderItems.image} alt={order.orderItems.name} />\n                                }\n                                topText={order && order.orderItems.name}\n                            >\n                                {/* <pre>order{JSON.stringify(order, null, 2)}</pre>     */}\n                                {\n                                    orderLoading ? <Loader /> :\n                                        orderError ? orderError :\n                                            <EditCards\n                                                id={order._id}\n                                                cardObj={order && order.orderItems}\n                                                paymentMethod={order.paymentMethod}\n                                            />\n                                }\n                            </BaseFile>\n                        }\n                    </>\n            }\n\n        </div>\n    )\n}\n\nexport default CardPage\n","import styled from \"styled-components\"\n\nexport const TablePane = styled.div`\n    font-family: 'Jost', sans-serif !important;    \n    margin: 50px auto;\n`;","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TablePane } from \"../../styles/TableStyle\"\nimport { colors } from \"../../styles/breakpoints\"\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: colors.lightgray,\n    color: theme.palette.common.white,\n  },\n  tableContainer: {\n    maxWidth: 400,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    fontFamily: 'Jost',\n    maxWidth: 500,\n  },\n});\n\nexport default function CustomizedTables({ cost, qty, name, orderId, paymentMethod }) {\n  const classes = useStyles();\n\n  function createData(name, value) {\n    return { name, value };\n  }\n\n  const rows = [\n    createData('order Id', orderId),\n    createData('Item Name', name),\n    createData('Quantity', qty),\n    createData('Price', `₦${cost}`),\n    createData('Payment Method ', paymentMethod),\n  ];\n\n  return (\n    <TablePane>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell></StyledTableCell>\n              <StyledTableCell align=\"right\">Value</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.value}</StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </TablePane>\n  );\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { cardPayOrder } from \"../../redux/actions/cardOrderActions\"\nimport PayStack from \"./PayStack\"\n\nconst PayStackCardPayment = ({ orderId, orderitem, amount }) => {\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const qty = orderitem.qty\n    const cardId = orderitem.card\n\n    const onSuccess = (reference) => {\n        const paymentResult = {\n            id: reference.trxref,\n            status: reference.status,\n            update_time: String((new Date()).getTime()),\n            email: userInfo.email\n        }\n\n        //deliver order, \n        //send to user email, \n        //mark as delivered, \n        //push to saved card table\n        dispatch(cardPayOrder(qty, cardId, orderId, paymentResult))\n    }\n\n    return (\n        <PayStack\n            amount={amount}\n            onSuccess={onSuccess}\n        />\n    )\n}\n\nexport default PayStackCardPayment\n","import React from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { cardPayOrder } from \"../../redux/actions/cardOrderActions\"\nimport { closePaymentModal } from 'flutterwave-react-v3';\nimport Flutterwave from \"./Flutterwave\"\n\nconst FlutterwaveCardPayment = ({ orderId, orderitem, amount }) => {\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const qty = orderitem.qty\n    const cardId = orderitem.card\n\n    const onSuccess = (reference) => {\n        const paymentResult = {\n            id: reference.transaction_id,\n            status: reference.status,\n            update_time: String((new Date()).getTime()),\n            email: userInfo.email\n        }\n\n        //deliver order, \n        //send to user email, \n        //mark as delivered, \n        //push to saved card table\n        dispatch(cardPayOrder(qty, cardId, orderId, paymentResult))\n        closePaymentModal() // this will close the modal programmatically\n    }\n    return (\n        <Flutterwave\n            amount={amount}\n            service={orderitem.name}\n            onSuccess={onSuccess}\n        />\n    )\n}\nexport default FlutterwaveCardPayment\n","import React from 'react'\nimport { PayButton } from \"../../styles/ServiceStyle\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { debitWallet } from \"../../redux/actions/userActions\"\nimport Loader from \"../Loaders/SimpleLoader\"\n\nconst WalletPayment = ({ orderitem, balance, order, setInsufficientAmount }) => {\n    const dispatch = useDispatch()\n    const amount = parseInt(orderitem.price)\n    const qty = orderitem.qty\n    const cardId = orderitem.card\n\n    const walletDebit = useSelector(state => state.walletDebit)\n    const { loading, error } = walletDebit\n\n    const handleWalletPay = async () => {\n\n        if (balance && balance > 0) {\n            //Update order as paid\n            //deliver order, \n            //send to user email, \n            //mark as delivered, \n            //push to saved card table\n            dispatch(debitWallet({\n                qty, cardId, orderId: order._id, amount\n            })\n            )\n\n        } else {\n            setInsufficientAmount(true)\n        }\n    }\n\n    return (\n        <>\n            {\n                loading ? <Loader />\n                    : error ? error\n                        :\n                        <PayButton\n                            onClick={handleWalletPay}>\n                            Pay with Wallet\n            </PayButton>\n            }\n        </>\n    )\n}\n\nexport default WalletPayment\n","import React, { useState, useEffect } from 'react'\nimport jwt_decode from 'jwt-decode'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport CustomTable from \"../components/Tables/CustomTable\"\nimport { useLocation, Link } from \"react-router-dom\"\nimport BaseFile from \"../components/Services/Base\"\nimport queryString from \"query-string\"\nimport PayStack from \"../components/Payment/PayStackCardPayment\"\nimport Flutterwave from \"../components/Payment/FlutterwaveCardPayment\"\nimport { getCardOrderDetails } from \"../redux/actions/cardOrderActions\"\nimport { listFewCards } from \"../redux/actions/cardActions\"\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport { logout } from \"../redux/actions/userActions\"\nimport Wallet from \"../components/Utils/Wallet\"\nimport MessageModal from \"../components/Utils/MessageModal\"\nimport WalletPayment from \"../components/Payment/WalletPayment\"\nimport { CARD_ORDER_CREATE_RESET, CARD_ORDER_PAY_RESET, CARD_ORDER_UPDATE_RESET } from '../redux/constants/cardOrderConstants';\nimport Message from \"../components/Message\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst PayOrder = () => {\n    const dispatch = useDispatch()\n    const location = useLocation()\n\n    const [insufficientAmount, setInsufficientAmount] = useState(false)\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const cardListFew = useSelector(state => state.cardListFew)\n    const { loading: cardsLoading, cards, error: cardsError } = cardListFew\n\n    const cardOrderDetails = useSelector(state => state.cardOrderDetails)\n    const { error: orderError, order, loading: orderLoading } = cardOrderDetails\n\n    const cardOrderPay = useSelector(state => state.cardOrderPay)\n    const { error: payError, loading: payLoading, success: paySuccess } = cardOrderPay\n\n    const walletDebit = useSelector(state => state.cardOrderPay)\n    const { error: walletError, loading: walletLoading } = walletDebit\n\n    const { wallet } = useSelector(state => state.userWalletAmount)\n\n    useEffect(() => {\n        dispatch({ type: CARD_ORDER_CREATE_RESET })\n        dispatch({ type: CARD_ORDER_UPDATE_RESET })\n    }, [dispatch])\n\n    useEffect(() => {\n        scroll.scrollTo(300)\n    }, [])\n\n    let orderitem;\n    let balance;\n    if (order) {\n        const { orderItems } = order\n        orderitem = orderItems\n\n        balance = wallet &&\n            parseInt(wallet - orderitem.price)\n    }\n    useEffect(() => {\n        if (userInfo) {\n            const { exp } = jwt_decode(userInfo.token)\n            const expirationTime = (exp * 1000) - 6000\n            if (Date.now() >= expirationTime) {\n                dispatch(logout())\n            }\n        }\n\n        const { orderId } = queryString.parse(location.search)\n        dispatch(getCardOrderDetails(orderId))\n        dispatch(listFewCards(4))\n        dispatch({ type: CARD_ORDER_PAY_RESET })\n    }, [dispatch, location, userInfo])\n\n\n    console.log(order, orderitem)\n    return (\n\n        <BaseFile\n            loading={cardsLoading}\n            cards={cards}\n            error={cardsError}\n            TopImage={<img src={orderitem && orderitem.image} alt={orderitem && orderitem.name} />}\n            topText={orderitem && orderitem.name}\n        >\n            <Meta />\n            {walletError &&\n                <Message variant=\"error\">\n                    {walletError}\n                </Message>\n            }\n            <div\n                className=\"buyinfo--third\"\n            >\n                {walletLoading && <Loader />}\n\n                {\n                    orderLoading ?\n                        <Loader /> :\n                        orderError ?\n                            <Message variant=\"error\">\n                                {orderError}\n                            </Message>\n                            :\n                            (\n                                <div className=\"table\">\n                                    <Wallet mt={20} />\n                                    {\n                                        payLoading ? <Loader /> :\n                                            payError ?\n                                                <Message variant=\"error\">\n                                                    {payError}\n                                                </Message>\n                                                :\n                                                paySuccess ?\n                                                    <>\n                                                        <div className=\"success\">\n                                                            <Message variant=\"info\">\n                                                                Success!\n                                                                <Link to=\"/profile#full-width-tab-2\"> View Purchase Info</Link>\n                                                            </Message>\n                                                        </div>\n\n                                                    </>\n                                                    :\n                                                    (\n                                                        <>\n                                                            <CustomTable\n                                                                cost={orderitem && orderitem.price}\n                                                                qty={orderitem && orderitem.qty}\n                                                                name={orderitem && orderitem.name}\n                                                                orderId={order && order._id}\n                                                                paymentMethod={order && order.paymentMethod}\n                                                            />\n\n                                                            {\n                                                                order && !order.isPaid && (\n\n                                                                    <div className=\"table__action\">\n                                                                        <Link\n                                                                            to={`/edititem/cardorder?id=${order._id}`}>\n                                                                            Edit card <LaunchIcon />\n                                                                        </Link>\n                                                                        {\n                                                                            order.paymentMethod === 'PayStack' ?\n                                                                                <PayStack\n                                                                                    orderId={order._id}\n                                                                                    orderitem={orderitem}\n                                                                                    amount={parseInt(orderitem.price)}\n                                                                                />\n                                                                                :\n                                                                                order.paymentMethod === 'Flutterwave' ?\n                                                                                    <Flutterwave\n                                                                                        orderId={order._id}\n                                                                                        orderitem={orderitem}\n                                                                                        amount={parseInt(orderitem.price)}\n                                                                                    />\n                                                                                    :\n                                                                                    order.paymentMethod === 'Wallet' ?\n                                                                                        orderitem &&\n                                                                                        <WalletPayment\n                                                                                            orderitem={orderitem}\n                                                                                            balance={balance}\n                                                                                            order={order}\n                                                                                            setInsufficientAmount={setInsufficientAmount}\n                                                                                        />\n                                                                                        :\n                                                                                        null\n                                                                        }\n\n\n                                                                    </div>\n                                                                )}\n                                                        </>\n                                                    )\n                                    }\n\n\n                                </div>\n                            )\n\n                }\n            </div>\n            <MessageModal\n                open={insufficientAmount}\n                setOpen={setInsufficientAmount}\n                caption=\"Insufficient Fund\"\n                message=\n                {<div>\n                    Please add money to your wallet or <br />choose another payment method\n                    </div>}\n            />\n        </BaseFile>\n\n    )\n}\nexport default PayOrder\n","export const SUBJECT_CREATE_REQUEST = \"SUBJECT_CREATE_REQUEST\";\nexport const SUBJECT_CREATE_SUCCESS = \"SUBJECT_CREATE_SUCCESS\";\nexport const SUBJECT_CREATE_FAIL = \"SUBJECT_CREATE_FAIL\";\n\nexport const SUBJECT_LIST_REQUEST = \"SUBJECT_LIST_REQUEST\";\nexport const SUBJECT_LIST_SUCCESS = \"SUBJECT_LIST_SUCCESS\";\nexport const SUBJECT_LIST_FAIL = \"SUBJECT_LIST_FAIL\";","import { FormControl, makeStyles, TextField } from '@material-ui/core'\nimport React from 'react'\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst UploadChoices = ({ value, onChange, options, text }) => {\n    const classes = useStyles();\n\n    return (\n        <FormControl className={classes.formControl}>\n            <TextField\n                select\n                value={value}\n                label={text && `Please select ${text}`}\n                onChange={onChange}\n                SelectProps={{\n                    native: true\n                }}\n            // InputProps={{\n            //     startAdornment: <InputAdornment position=\"start\"><LoyaltyIcon /> </InputAdornment>\n            // }}\n\n            >\n                {options}\n\n            </TextField>\n        </FormControl>\n    )\n}\n\nexport default UploadChoices\n","import { TextField } from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport UploadChoices from './UploadChoices'\n\n\nconst SubjectOptions = () => {\n\n    const { loading, success, subjects } = useSelector(state => state.subjectList)\n\n    return <>\n        {\n            loading ? \"Loading...\"\n                :\n                success &&\n                subjects.map(subject =>\n                    <option key={subject._id} value={subject.name} >{subject.name}</option>\n                )\n\n        }\n    </>\n}\n\nconst GradeOptions = () => {\n\n    return <>\n        <option value=\"\" >Select grade</option>\n        <option value=\"A1\">A1</option>\n        <option value=\"B2\">B2</option>\n        <option value=\"B3\">B3</option>\n        <option value=\"C4\">C4</option>\n        <option value=\"C5\">C5</option>\n        <option value=\"C6\">C6</option>\n        <option value=\"D7\">D7</option>\n        <option value=\"E8\">E8</option>\n        <option value=\"F9\">F9</option>\n    </>\n}\n\nconst ExamTypeOptions = () => {\n    return <>\n        <option value=\"\" >Select exam type</option>\n        <option value=\"WAEC\">WAEC</option>\n        <option value=\"NECO\">NECO</option>\n        <option value=\"NABTEB\">NABTB</option>\n    </>\n}\n\nconst UploadEntry = ({ num, entryState, setEntryState }) => {\n\n    const handleChange = (prop) => (e) => {\n        setEntryState({ ...entryState, [prop]: e.target.value });\n    };\n\n    return (\n        <div className='entry'>\n            <span>{num}</span>\n            <UploadChoices\n                value={entryState.subject}\n                onChange={handleChange('subject')}\n                options={<SubjectOptions />}\n            />\n            <UploadChoices\n                value={entryState.grade}\n                onChange={handleChange('grade')}\n                options={<GradeOptions />}\n            />\n            <TextField\n                label=\"Exam No\"\n                value={entryState.examNumber}\n                onChange={handleChange('examNumber')}\n                autoComplete=\"Enter phonenumber\"\n\n            />\n            <UploadChoices\n                value={entryState.examType}\n                onChange={handleChange('examType')}\n                options={<ExamTypeOptions />}\n            />\n        </div>\n    )\n\n}\n\nexport default UploadEntry\n","import React, { useState, useEffect } from 'react'\nimport { ButtonSingle, NextButton, NumRangeContainer } from \"../../styles/ServiceStyle\"\nimport { colors } from \"../../styles/breakpoints\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Input, NativeSelect, FormControl, FormHelperText } from '@material-ui/core'\nimport { InputLabel, InputAdornment } from '@material-ui/core'\nimport { Person as PersonIcon, TrendingFlat as TrendingFlatIcon } from '@material-ui/icons'\nimport { Code as CodeIcon, Remove as RemoveIcon } from '@material-ui/icons'\nimport { Add as AddIcon } from '@material-ui/icons'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Fab from '@material-ui/core/Fab';\nimport CurrencyFormat from 'react-currency-format';\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport MessageModal from \"../Utils/MessageModal\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { WALLET_DEBIT_RESET } from '../../redux/constants/userConstants'\nimport { listServiceByName } from \"../../redux/actions/serviceActions\"\nimport { listSubjects } from \"../../redux/actions/subjectActions\"\nimport SchoolIcon from '@material-ui/icons/School';\nimport MergeTypeIcon from '@material-ui/icons/MergeType';\nimport UploadEntry from './UploadEntry';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nconst Options = () => {\n\n    const { loading, error, subjects } = useSelector(state => state.subjectList)\n\n    return <>\n        {\n            loading ? \"Loading...\"\n                :\n                error ? { error }\n                    : subjects.map(subject =>\n                        <option key={subject._id} value={subject.name} >{subject.name}</option>\n                    )\n        }\n    </>\n}\n\n\nconst OLevelUploadForm = ({\n    type,\n    setType,\n    name,\n    setName,\n    profileCode,\n    setProfileCode,\n    upload,\n    setUpload,\n    activeStep,\n    setActiveStep,\n    entries,\n    setEntries,\n    schoollAttended,\n    setSchoolAttended,\n    schoolType,\n    setSchoolType\n}) => {\n    const classes = useStyles();\n    const [num, setNum] = useState(1)\n    const [noFiles, setNoFiles] = useState(false)\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        dispatch(listSubjects())\n        dispatch(listServiceByName('o level result upload'))\n        dispatch({ type: WALLET_DEBIT_RESET })\n    }, [dispatch])\n\n    const onSubmit = e => {\n        e.preventDefault()\n        if (upload.files.length === 0) {\n            setNoFiles(true)\n            return\n        }\n        setActiveStep(activeStep + 1)\n\n    }\n\n    const handleNumIncrement = (e) => {\n        e.preventDefault()\n        const newNum = num === 2 ? num : num + 1\n        setNum(newNum)\n    }\n\n    const handleNumDecrement = (e) => {\n        e.preventDefault()\n        const newNum = num === 1 ? num : num - 1\n        setNum(newNum)\n    }\n    const { service } = useSelector(state => state.serviceByName)\n\n\n    return (\n        <div>\n\n            <div className=\"topmainitem\">\n                <div>\n                    <i className=\"fas fa-tags\"></i>\n                    <CurrencyFormat\n                        value={service && service.cost}\n                        displayType={'text'}\n                        thousandSeparator={true}\n                        prefix={'₦'}\n                        renderText={value => <h3>{value}</h3>} />\n                </div>\n            </div>\n            <form onSubmit={onSubmit} >\n                <FormControl className={classes.formControl}>\n                    <NativeSelect\n                        fullWidth\n                        required\n                        className={classes.selectEmpty}\n                        value={type}\n                        onChange={(e) => setType(e.target.value)}\n                        inputProps={{ 'aria-label': 'type' }}\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <TrendingFlatIcon />\n                            </InputAdornment>}\n                    >\n                        <option value=\"WAEC\">WAEC</option>\n                        <option value=\"NECO\">NECO</option>\n                        <option value=\"NABTEB\">NABTEB</option>\n                    </NativeSelect>\n                    <FormHelperText>Select Type</FormHelperText>\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-name\">Full Name</InputLabel>\n                    <Input\n                        id=\"standard-adornment-name\"\n                        value={name}\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-amount\">ProfileCode</InputLabel>\n                    <Input\n                        id=\"standard-adornment-amount\"\n                        value={profileCode}\n                        required\n                        onChange={(e) => setProfileCode(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><CodeIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-amount\">Secondary School Attended</InputLabel>\n                    <Input\n                        id=\"standard-adornment-amount\"\n                        value={schoollAttended}\n                        required\n                        onChange={(e) => setSchoolAttended(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><SchoolIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <NativeSelect\n                        fullWidth\n                        required\n                        className={classes.selectEmpty}\n                        value={schoolType}\n                        onChange={(e) => setSchoolType(e.target.value)}\n                        inputProps={{ 'aria-label': 'type' }}\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <MergeTypeIcon />\n                            </InputAdornment>}\n                    >\n                        <option value=\"PUBLIC\">PUBLIC</option>\n                        <option value=\"PRIVATE\">PRIVATE</option>\n                    </NativeSelect>\n                    <FormHelperText>Select School Type</FormHelperText>\n                </FormControl>\n\n                <div className=\"numrange--services\">\n                    <div className=\"label\">\n                        Number of Sittings\n                    </div>\n                    <NumRangeContainer size={150} >\n                        <button onClick={handleNumDecrement}>\n                            <RemoveIcon />\n                        </button>\n                        <span>{num}</span>\n                        <button onClick={handleNumIncrement}>\n                            <AddIcon />\n                        </button>\n                    </NumRangeContainer>\n                </div>\n\n                <div className=\"filesection\">\n                    <Fab\n                        onClick={() => setUpload({ ...upload, open: true })}\n                        variant=\"extended\">\n                        <NavigationIcon className={classes.extendedIcon} />\n                        Add File{num === 2 ? 's' : ''}\n                    </Fab>\n\n                    <DropzoneDialog\n                        open={upload.open}\n                        filesLimit={num}\n                        required\n                        clearOnUnmount={false}\n                        // onChange={(files) => console.log('Files:', files)}\n                        onSave={(files) => setUpload({ files: files, open: false })}\n                        submitButtonText={` Add File${num === 2 ? 's' : ''}`}\n                        acceptedFiles={['image/jpeg', 'image/png']}\n                        showPreviews={true}\n                        maxFileSize={5000000}\n                        onClose={() => setUpload({ ...upload, open: false })}\n                    />\n                </div>\n\n                <h1>Please enter the subjects manually</h1>\n\n                <div className='subjectselect'>\n                    <UploadEntry\n                        num=\"1\"\n                        entryState={entries.first}\n                        setEntryState={setEntries.first}\n                    />\n                    <UploadEntry\n                        num=\"2\"\n                        entryState={entries.second}\n                        setEntryState={setEntries.second}\n                    />\n                    <UploadEntry\n                        num=\"3\"\n                        entryState={entries.third}\n                        setEntryState={setEntries.third}\n                    />\n                    <UploadEntry\n                        num=\"4\"\n                        entryState={entries.fourth}\n                        setEntryState={setEntries.fourth}\n                    />\n                    <UploadEntry\n                        num=\"5\"\n                        entryState={entries.fifth}\n                        setEntryState={setEntries.fifth}\n                    />\n                    <UploadEntry\n                        num=\"6\"\n                        entryState={entries.sixth}\n                        setEntryState={setEntries.sixth}\n                    />\n                    <UploadEntry\n                        num=\"7\"\n                        entryState={entries.seventh}\n                        setEntryState={setEntries.seventh}\n                    />\n                    <UploadEntry\n                        num=\"8\"\n                        entryState={entries.eighth}\n                        setEntryState={setEntries.eighth}\n                    />\n                    <UploadEntry\n                        num=\"9\"\n                        entryState={entries.nineth}\n                        setEntryState={setEntries.nineth}\n                    />\n                </div>\n\n                <ButtonSingle>\n                    <NextButton\n                        variant={colors.darkblue}\n                        type=\"submit\" >Next <NavigateNextIcon />\n                    </NextButton>\n                </ButtonSingle>\n\n            </form>\n            <MessageModal\n                open={noFiles}\n                setOpen={setNoFiles}\n                caption=\"Files Empty\"\n                message=\"You need to add at least one file to proceed.\"\n\n            />\n        </div>\n    )\n}\n\nexport default OLevelUploadForm\n","import axios from 'axios'\nimport {\n    SUBJECT_LIST_REQUEST,\n    SUBJECT_LIST_SUCCESS,\n    SUBJECT_LIST_FAIL,\n\n    SUBJECT_CREATE_REQUEST,\n    SUBJECT_CREATE_SUCCESS,\n    SUBJECT_CREATE_FAIL,\n} from '../constants/subjectConstants'\nimport { logout } from './userActions'\nimport { setMessage } from './utilActions'\n\nexport const listSubjects = () => async (dispatch) => {\n    try {\n        dispatch({ type: SUBJECT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/subjects`)\n\n        dispatch({\n            type: SUBJECT_LIST_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SUBJECT_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createSubject = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUBJECT_CREATE_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.post(`/api/subjects/`, {}, config)\n\n        dispatch({\n            type: SUBJECT_CREATE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: SUBJECT_CREATE_FAIL,\n            payload: message,\n        })\n    }\n}\n\n","import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { ListFeatureElement, ButtonGroup, NextButton, NoMarginBackButton } from \"../../styles/ServiceStyle\"\nimport { colors } from \"../../styles/breakpoints\"\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst OLevelUploadReview = ({\n  type,\n  name,\n  profileCode,\n  upload,\n  schoolAttended,\n  schoolType,\n  activeStep,\n  setActiveStep,\n  entries\n}) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <List>\n        <ListItem className={classes.listItem} key={type}>\n          <ListItemText primary=\"Upload Type\" secondary=\"NECO or WAEC?\" />\n          <Typography variant=\"body2\">{type}</Typography>\n        </ListItem>\n        <ListItem className={classes.listItem} key={name}>\n          <ListItemText primary=\"Candidate's Name\" secondary={`Name of ${type} candidate`} />\n          <Typography variant=\"body2\">{name}</Typography>\n        </ListItem>\n        <ListItem className={classes.listItem} key={profileCode}>\n          <ListItemText primary=\"Candidate's Profile Code\" secondary={`Profile Code ${type} candidate`} />\n          <Typography variant=\"body2\">{profileCode}</Typography>\n        </ListItem>\n        <ListItem className={classes.listItem} key={schoolAttended}>\n          <ListItemText primary=\"Candidate's School Attended Code\" secondary={`Profile Code ${type} candidate`} />\n          <Typography variant=\"body2\">{schoolAttended}</Typography>\n        </ListItem>\n        <ListItem className={classes.listItem} key={schoolType}>\n          <ListItemText primary=\"Candidate's School Type Code\" secondary={`Profile Code ${type} candidate`} />\n          <Typography variant=\"body2\">{schoolType}</Typography>\n        </ListItem>\n\n        {\n          upload.files && upload.files.map((file, index) => (\n            <ListFeatureElement key={index}>\n              <ListItem className={classes.listItem} key={file.name}>\n                <ListItemText primary=\"File Name\" secondary='Name of the file' />\n                <Typography variant=\"body2\">{file.name}</Typography>\n              </ListItem>\n              <ListItem className={classes.listItem} key={file.type}>\n                <ListItemText primary=\"File Type\" secondary='Type the file' />\n                <Typography variant=\"body2\">{file.type}</Typography>\n              </ListItem>\n              <ListItem className={classes.listItem} key={file.size}>\n                <ListItemText primary=\"File Size\" secondary='Size the file' />\n                <Typography variant=\"body2\">{\n                  (file.size / 1024 ** 2) < 1 ?\n                    `${(file.size / 1024).toFixed(2)}KB` :\n                    `${(file.size / 1024 ** 2).toFixed(2)}MB`\n                }</Typography>\n              </ListItem>\n              <ListItem className={classes.listItem} key={file.lastModified}>\n                <ListItemText primary=\"Uploaded At\" secondary='Time of Upload' />\n                <Typography variant=\"body2\">{new Date(file.lastModified).toDateString()}</Typography>\n              </ListItem>\n            </ListFeatureElement>\n          ))\n        }\n\n        <ListFeatureElement >\n          <ListItem className=\"entriesrow\" >\n            <ListItemText primary=\"Subjects\" />\n            <ListItemText primary=\"Grades\" />\n            <ListItemText primary=\"Exam No.\" />\n            <ListItemText primary=\"Exam Types\" />\n          </ListItem>\n          {(entries.first.grade || entries.first.examNumber || entries.first.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.first.subject} />\n              <ListItemText primary={entries.first.grade} />\n              <ListItemText primary={entries.first.examNumber} />\n              <ListItemText primary={entries.first.examType} />\n            </ListItem>\n          }\n\n          {(entries.second.grade || entries.second.examNumber || entries.second.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.second.subject} />\n              <ListItemText primary={entries.second.grade} />\n              <ListItemText primary={entries.second.examNumber} />\n              <ListItemText primary={entries.second.examType} />\n            </ListItem>\n          }\n          {(entries.third.grade || entries.third.examNumber || entries.third.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.third.subject} />\n              <ListItemText primary={entries.third.grade} />\n              <ListItemText primary={entries.third.examNumber} />\n              <ListItemText primary={entries.third.examType} />\n            </ListItem>\n          }\n          {(entries.fourth.grade || entries.fourth.examNumber || entries.fourth.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.fourth.subject} />\n              <ListItemText primary={entries.fourth.grade} />\n              <ListItemText primary={entries.fourth.examNumber} />\n              <ListItemText primary={entries.fourth.examType} />\n            </ListItem>\n          }\n          {(entries.fifth.grade || entries.fifth.examNumber || entries.fifth.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.fifth.subject} />\n              <ListItemText primary={entries.fifth.grade} />\n              <ListItemText primary={entries.fifth.examNumber} />\n              <ListItemText primary={entries.fifth.examType} />\n            </ListItem>\n          }\n          {(entries.sixth.grade || entries.sixth.examNumber || entries.sixth.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.sixth.subject} />\n              <ListItemText primary={entries.sixth.grade} />\n              <ListItemText primary={entries.sixth.examNumber} />\n              <ListItemText primary={entries.sixth.examType} />\n            </ListItem>\n          }\n          {(entries.seventh.grade || entries.seventh.examNumber || entries.seventh.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.seventh.subject} />\n              <ListItemText primary={entries.seventh.grade} />\n              <ListItemText primary={entries.seventh.examNumber} />\n              <ListItemText primary={entries.seventh.examType} />\n            </ListItem>\n          }\n          {(entries.eighth.grade || entries.eighth.examNumber || entries.eighth.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.eighth.subject} />\n              <ListItemText primary={entries.eighth.grade} />\n              <ListItemText primary={entries.eighth.examNumber} />\n              <ListItemText primary={entries.eighth.examType} />\n            </ListItem>\n          }\n          {(entries.nineth.grade || entries.nineth.examNumber || entries.nineth.examType) &&\n            <ListItem className=\"entriesrow\" >\n              <ListItemText primary={entries.nineth.subject} />\n              <ListItemText primary={entries.nineth.grade} />\n              <ListItemText primary={entries.nineth.examNumber} />\n              <ListItemText primary={entries.nineth.examType} />\n            </ListItem>\n          }\n\n\n        </ListFeatureElement>\n\n        <ButtonGroup>\n          <NoMarginBackButton\n            variant={colors.darkred}\n            onClick={() => setActiveStep(activeStep - 1)}>\n            <NavigateBeforeIcon /> Previous\n              </NoMarginBackButton>\n          <NextButton\n            variant={colors.darkblue}\n            onClick={() => setActiveStep(activeStep + 1)}>\n            Next <NavigateNextIcon />\n          </NextButton>\n        </ButtonGroup>\n      </List>\n    </div>\n  )\n}\n\nexport default OLevelUploadReview\n","import React, { useState, useEffect } from 'react'\nimport BaseRoot from \"../components/Services/BaseRoot\"\nimport { ServiceTypeContainer, ServicePanel } from \"../styles/ServiceStyle\"\nimport { firstCardContainerVariants } from '../animationVariants/CardVariants'\nimport OLevelUploadForm from \"../components/Services/OLevelUploadForm\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport OLevelUploadReview from '../components/Services/OLevelUploadReview'\nimport ServicePayment from '../components/Services/ServicePayment'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { WALLET_DEBIT_RESET } from '../redux/constants/userConstants'\nimport { OLEVEL_UPLOAD_CREATE_RESET } from '../redux/constants/oLevelResultUploadConstants'\nimport { JAMB_PASSWORD_RESET_CREATE_RESET } from '../redux/constants/jambPasswordResetConstants'\nimport { COCI_CREATE_RESET } from '../redux/constants/changeOfCourseConstants'\nimport NotLoggedIn from \"../components/Utils/NotLoggedIn\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\n\nconst useStyles = makeStyles((theme) => ({\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n}));\n\nconst steps = ['Form Entry', 'Review your order', 'Payment'];\n\nconst ChangeOfCourseInstitution = () => {\n    const classes = useStyles();\n    const [type, setType] = useState(\"WAEC\")\n    const [name, setName] = useState(\"\")\n    const [profileCode, setProfileCode] = useState(\"\")\n    const [schoolAttended, setSchoolAttended] = useState(\"\")\n    const [schoolType, setSchoolType] = useState(\"PUBLIC\")\n\n    const [firstEntry, setFirstEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n    const [secondEntry, setSecondEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n    const [thirdEntry, setThirdEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n    const [fourthEntry, setFourthEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n    const [fifthEntry, setFifthEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n    const [sixthEntry, setSixthEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n    const [seventhEntry, setSeventhEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n    const [eighthEntry, setEighthEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n    const [ninethEntry, setNinethEntry] = useState({\n        subject: 'English Language',\n        grade: '',\n        examNumber: '',\n        examType: ''\n    })\n\n    const manualEntries = {\n        first: firstEntry,\n        second: secondEntry,\n        third: thirdEntry,\n        fourth: fourthEntry,\n        fifth: fifthEntry,\n        sixth: sixthEntry,\n        seventh: seventhEntry,\n        eighth: eighthEntry,\n        nineth: ninethEntry\n    }\n\n    const setManualEntries = {\n        first: setFirstEntry,\n        second: setSecondEntry,\n        third: setThirdEntry,\n        fourth: setFourthEntry,\n        fifth: setFifthEntry,\n        sixth: setSixthEntry,\n        seventh: setSeventhEntry,\n        eighth: setEighthEntry,\n        nineth: setNinethEntry\n    }\n\n    const [upload, setUpload] = useState({\n        open: false,\n        files: []\n    })\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const [activeStep, setActiveStep] = useState(0);\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    useEffect(() => {\n        dispatch({ type: WALLET_DEBIT_RESET })\n        dispatch({ type: OLEVEL_UPLOAD_CREATE_RESET })\n        dispatch({ type: JAMB_PASSWORD_RESET_CREATE_RESET })\n        dispatch({ type: COCI_CREATE_RESET })\n\n    }, [dispatch])\n\n    const resultUploadOrder = () => {\n        const subjectUpload = []\n        if (manualEntries.first.grade || manualEntries.first.examNumber || manualEntries.first.examType) {\n            subjectUpload.push(manualEntries.first)\n        } else if (manualEntries.second.grade || manualEntries.second.examNumber || manualEntries.second.examType) {\n            subjectUpload.push(manualEntries.second)\n        } else if (manualEntries.third.grade || manualEntries.third.examNumber || manualEntries.third.examType) {\n            subjectUpload.push(manualEntries.third)\n        } else if (manualEntries.fourth.grade || manualEntries.fourth.examNumber || manualEntries.fourth.examType) {\n            subjectUpload.push(manualEntries.fourth)\n        } else if (manualEntries.fifth.grade || manualEntries.fifth.examNumber || manualEntries.fifth.examType) {\n            subjectUpload.push(manualEntries.fifth)\n        } else if (manualEntries.sixth.grade || manualEntries.sixth.examNumber || manualEntries.sixth.examType) {\n            subjectUpload.push(manualEntries.sixth)\n        } else if (manualEntries.seventh.grade || manualEntries.seventh.examNumber || manualEntries.seventh.examType) {\n            subjectUpload.push(manualEntries.seventh)\n        } else if (manualEntries.eighth.grade || manualEntries.eighth.examNumber || manualEntries.eighth.examType) {\n            subjectUpload.push(manualEntries.eighth)\n        } else if (manualEntries.nineth.grade || manualEntries.nineth.examNumber || manualEntries.nineth.examType) {\n            subjectUpload.push(manualEntries.nineth)\n        }\n\n        return {\n            transactionType: 'olevelresultupload',\n\n            orderItems: {\n                type,\n                name,\n                profileCode,\n                schoolAttended,\n                schoolType,\n                files: upload.files,\n                subjectUpload\n            }\n        }\n    }\n\n    return (\n        <BaseRoot topText=\"Services\">\n            <Meta />\n            {\n                !userInfo ?\n                    <NotLoggedIn />\n                    :\n\n                    <ServiceTypeContainer>\n                        <ServicePanel\n                            variants={firstCardContainerVariants}\n                            initial='initial'\n                            animate='animate'\n                            whileHover='onHover'\n                            variant=\"lightish\"\n                        >\n                            <Stepper activeStep={activeStep} className={classes.stepper}>\n                                {steps.map((label) => (\n                                    <Step key={label}>\n                                        <StepLabel>{label}</StepLabel>\n                                    </Step>\n                                ))}\n                            </Stepper>\n                            {\n                                activeStep === 0 ?\n                                    <OLevelUploadForm\n                                        type={type}\n                                        setType={setType}\n                                        name={name}\n                                        setName={setName}\n                                        profileCode={profileCode}\n                                        setProfileCode={setProfileCode}\n                                        upload={upload}\n                                        setUpload={setUpload}\n                                        entries={manualEntries}\n                                        setEntries={setManualEntries}\n                                        activeStep={activeStep}\n                                        setActiveStep={setActiveStep}\n                                        schoolAttended={schoolAttended}\n                                        setSchoolAttended={setSchoolAttended}\n                                        schoolType={schoolType}\n                                        setSchoolType={setSchoolType}\n                                    />\n                                    :\n                                    activeStep === 1 ?\n                                        <OLevelUploadReview\n                                            type={type}\n                                            name={name}\n                                            profileCode={profileCode}\n                                            upload={upload}\n                                            entries={manualEntries}\n                                            schoolAttended={schoolAttended}\n                                            schoolType={schoolType}\n                                            activeStep={activeStep}\n                                            setActiveStep={setActiveStep}\n                                        />\n                                        :\n                                        activeStep === 2 ?\n                                            <ServicePayment\n                                                activeStep={activeStep}\n                                                setActiveStep={setActiveStep}\n                                                serviceOrder={resultUploadOrder}\n                                            />\n\n                                            :\n                                            null\n                            }\n\n                        </ServicePanel>\n                    </ServiceTypeContainer>\n            }\n        </BaseRoot>\n    )\n}\n\nexport default ChangeOfCourseInstitution\n","import React, { useState, useEffect } from 'react'\nimport { ButtonSingle, NextButton } from \"../../styles/ServiceStyle\"\nimport { colors } from \"../../styles/breakpoints\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Input, FormControl, IconButton } from '@material-ui/core'\nimport { InputLabel, InputAdornment } from '@material-ui/core'\nimport { Person as PersonIcon } from '@material-ui/icons'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport CurrencyFormat from 'react-currency-format';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport MomentUtils from '@date-io/moment';\nimport { WALLET_DEBIT_RESET } from '../../redux/constants/userConstants'\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport MessageModal from \"../Utils/MessageModal\"\nimport { listServiceByName } from '../../redux/actions/serviceActions';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../Message\"\nimport Loader from \"../Loaders/SimpleLoader\"\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\n\nconst CourseChangeForm = ({\n    name,\n    setName,\n    email,\n    setEmail,\n    dateOfBirth,\n    setDateOfBirth,\n    password,\n    setPassword,\n    activeStep,\n    setActiveStep,\n}) => {\n    const classes = useStyles();\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [showPassword, setShowPassword] = useState(false)\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n    const [passwordMismatch, setPasswordMismatch] = useState(false)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(listServiceByName('jamb password reset'))\n        dispatch({ type: WALLET_DEBIT_RESET })\n    }, [dispatch])\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const { service } = useSelector(state => state.serviceByName)\n\n    const onSubmit = e => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setPasswordMismatch(true)\n            return\n        }\n        setActiveStep(activeStep + 1)\n    }\n\n    const handleDateChange = (date) => {\n        setDateOfBirth(date)\n    }\n\n    const jambPasswordResetOrderCreate = useSelector(state => state.jambPasswordResetOrderCreate)\n    const { loading: jprLoading, error: jprError, success: jprSuccess } = jambPasswordResetOrderCreate\n\n    return (\n        <div>\n\n            {\n                jprLoading ? <Loader /> :\n                    jprError ?\n                        <Message variant=\"error\">\n                            {jprError}\n                        </Message>\n                        :\n                        jprSuccess ?\n                            <div><Message variant=\"info\">\n                                Successful. We'll get back to you soon.\n                                </Message> </div>\n                            : ''\n            }\n\n            <div className=\"topmainitem\">\n\n                <div>\n                    <i className=\"fas fa-tags\"></i>\n                    <CurrencyFormat\n                        value={service && service.cost}\n                        displayType={'text'}\n                        thousandSeparator={true}\n                        prefix={'₦'}\n                        renderText={value => <h3>{value}</h3>} />\n                </div>\n            </div>\n            <form onSubmit={onSubmit} >\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-name\">Full Name</InputLabel>\n                    <Input\n                        id=\"standard-adornment-name\"\n                        value={name}\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-amount\">Email</InputLabel>\n                    <Input\n                        id=\"standard-adornment-email\"\n                        value={email}\n                        required\n                        type=\"email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                        startAdornment={<InputAdornment position=\"start\"><AlternateEmailIcon /> </InputAdornment>}\n                    />\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <DatePicker\n                            margin=\"normal\"\n                            id=\"date-picker-dialog\"\n                            label=\"Choose Your Date of Birth\"\n                            format=\"DD/MM/YYYY\"\n                            value={dateOfBirth}\n                            onChange={handleDateChange}\n                            InputProps={{\n                                startAdornment:\n                                    <InputAdornment position=\"start\">\n                                        <EventNoteIcon />\n                                    </InputAdornment>\n\n                            }}\n                        />\n\n\n                    </MuiPickersUtilsProvider>\n\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-password\">New Password</InputLabel>\n                    <Input\n                        id=\"standard-adornment-password\"\n                        value={password}\n                        required\n                        type={showPassword ? 'text' : 'password'}\n                        onChange={(e) => setPassword(e.target.value)}\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <VpnKeyIcon />\n                            </InputAdornment>\n                        }\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => setShowPassword(!showPassword)}\n                                    onMouseDown={handleMouseDownPassword}\n                                >\n                                    {showPassword ? <Visibility tabindex='-1' /> : <VisibilityOff tabindex='-1' />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n\n                <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"standard-adornment-amount\">Confirm New Password</InputLabel>\n                    <Input\n                        id=\"standard-adornment-confirm-password\"\n                        value={confirmPassword}\n                        required\n                        type={showConfirmPassword ? 'text' : 'password'}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <VpnKeyIcon />\n                            </InputAdornment>\n                        }\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                                    onMouseDown={handleMouseDownPassword}\n                                >\n                                    {showConfirmPassword ? <Visibility tabindex='-1' /> : <VisibilityOff tabindex='-1' />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n\n\n                <ButtonSingle>\n                    <NextButton\n                        variant={colors.darkblue}\n                        type=\"submit\" >Next <NavigateNextIcon />\n                    </NextButton>\n                </ButtonSingle>\n\n            </form>\n\n            <MessageModal\n                open={passwordMismatch}\n                setOpen={setPasswordMismatch}\n                caption=\"Mismatched Passwords\"\n                message=\"Your password confirmation do not match\"\n\n            />\n\n        </div>\n    )\n}\n\nexport default CourseChangeForm\n","import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport {ButtonGroup, NextButton, NoMarginBackButton} from \"../../styles/ServiceStyle\"\nimport {colors} from \"../../styles/breakpoints\"\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst useStyles = makeStyles((theme) => ({\n    listItem: {\n      padding: theme.spacing(1, 0),\n    },\n    total: {\n      fontWeight: 700,\n    },\n    title: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\nconst OLevelUploadReview = ({\n    name, \n    email, \n    dateOfBirth,\n    password,\n    activeStep,\n    setActiveStep\n}) => {\n    const classes = useStyles();        \n  return (\n    <>\n        <List>            \n            <ListItem className={classes.listItem} key={name}>\n                <ListItemText primary=\"Candidate's Name\" secondary='Name of the candidate`'  />\n                <Typography variant=\"body2\">{name}</Typography>\n            </ListItem>\n            <ListItem className={classes.listItem} key={email}>\n                <ListItemText primary=\"Candidate's email\" secondary=\"email used for Jamb registration\" />\n                <Typography variant=\"body2\">{email}</Typography>\n            </ListItem>\n            <ListItem className={classes.listItem} key={dateOfBirth}>\n                <ListItemText primary=\"Candidate's Date of Birth\" secondary=\"Date of birth registered in JAMB\"  />\n                <Typography variant=\"body2\">\n                  {dateOfBirth._d ? dateOfBirth._d.toDateString() : dateOfBirth.toDateString()}\n                </Typography>\n            </ListItem>                        \n            \n            <ListItem className={classes.listItem} key={password}>\n                <ListItemText primary=\"Candidate's New Password\" secondary=\"The New Password You Wish to Change to\"  />\n                <Typography variant=\"body2\">{password}</Typography>\n            </ListItem>                        \n            \n            <ButtonGroup>\n              <NoMarginBackButton \n                variant={colors.darkred}\n                onClick={() => setActiveStep(activeStep - 1)}>\n                <NavigateBeforeIcon /> Previous\n              </NoMarginBackButton>\n              <NextButton \n                variant={colors.darkblue}\n                onClick={() => setActiveStep(activeStep + 1)}>\n                 Next <NavigateNextIcon/>\n              </NextButton>\n            </ButtonGroup>\n        </List>      \n    </>\n  )\n}\n\nexport default OLevelUploadReview\n","import React, { useState, useEffect } from 'react'\nimport BaseRoot from \"../components/Services/BaseRoot\"\nimport { ServiceTypeContainer, ServicePanel } from \"../styles/ServiceStyle\"\nimport { firstCardContainerVariants } from '../animationVariants/CardVariants'\nimport JambPasswordResetForm from \"../components/Services/JambPasswordResetForm\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport JambPasswordResetReview from '../components/Services/JambPasswordResetReview'\nimport ServicePayment from '../components/Services/ServicePayment'\nimport { WALLET_DEBIT_RESET } from '../redux/constants/userConstants'\nimport { OLEVEL_UPLOAD_CREATE_RESET } from '../redux/constants/oLevelResultUploadConstants'\nimport { JAMB_PASSWORD_RESET_CREATE_RESET } from '../redux/constants/jambPasswordResetConstants'\nimport { COCI_CREATE_RESET } from '../redux/constants/changeOfCourseConstants'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport NotLoggedIn from \"../components/Utils/NotLoggedIn\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst useStyles = makeStyles((theme) => ({\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n}));\n\nconst steps = ['Form Entry', 'Review your order', 'Payment'];\n\nconst JambPasswordReset = () => {\n    const classes = useStyles();\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [dateOfBirth, setDateOfBirth] = useState(new Date())\n    const [password, setPassword] = useState(\"\")\n    const [activeStep, setActiveStep] = useState(0);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    useEffect(() => {\n        dispatch({ type: WALLET_DEBIT_RESET })\n        dispatch({ type: OLEVEL_UPLOAD_CREATE_RESET })\n        dispatch({ type: JAMB_PASSWORD_RESET_CREATE_RESET })\n        dispatch({ type: COCI_CREATE_RESET })\n\n    }, [dispatch])\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const passwordResetOrder = () => {\n        return {\n            transactionType: 'jambpasswordreset',\n            orderItems: {\n                name,\n                email,\n                dateOfBirth,\n                newPassword: password\n            }\n        }\n    }\n\n    return (\n        <BaseRoot topText=\"Services\">\n            <Meta />\n            {\n                !userInfo ?\n                    <NotLoggedIn />\n                    :\n                    <ServiceTypeContainer>\n                        <ServicePanel\n                            variants={firstCardContainerVariants}\n                            initial='initial'\n                            animate='animate'\n                            whileHover='onHover'\n                            variant=\"lightish\"\n                        >\n                            <Stepper activeStep={activeStep} className={classes.stepper}>\n                                {steps.map((label) => (\n                                    <Step key={label}>\n                                        <StepLabel>{label}</StepLabel>\n                                    </Step>\n                                ))}\n                            </Stepper>\n                            {\n                                activeStep === 0 ?\n                                    <JambPasswordResetForm\n                                        name={name}\n                                        setName={setName}\n                                        email={email}\n                                        setEmail={setEmail}\n                                        dateOfBirth={dateOfBirth}\n                                        setDateOfBirth={setDateOfBirth}\n                                        password={password}\n                                        setPassword={setPassword}\n                                        activeStep={activeStep}\n                                        setActiveStep={setActiveStep}\n                                    />\n                                    :\n                                    activeStep === 1 ?\n                                        <JambPasswordResetReview\n                                            name={name}\n                                            email={email}\n                                            dateOfBirth={dateOfBirth}\n                                            password={password}\n                                            activeStep={activeStep}\n                                            setActiveStep={setActiveStep}\n                                        />\n                                        :\n                                        activeStep === 2 ?\n                                            <ServicePayment\n                                                activeStep={activeStep}\n                                                setActiveStep={setActiveStep}\n                                                serviceOrder={passwordResetOrder}\n                                            />\n\n                                            :\n                                            null\n                            }\n\n                        </ServicePanel>\n                    </ServiceTypeContainer>\n            }\n        </BaseRoot>\n    )\n}\n\nexport default JambPasswordReset\n","import React, { useEffect } from 'react'\nimport Header from \"../components/MainHeader\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { activateAccount } from \"../redux/actions/userActions\"\nimport { useLocation, Link } from \"react-router-dom\"\nimport { EmailConfirmation } from \"../styles/AuthStyle\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst ActivateAccount = () => {\n    const location = useLocation()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    useEffect(() => {\n        const splittedPath = location.pathname.split(/\\//)\n        const token = splittedPath[splittedPath.length - 1]\n\n        dispatch(activateAccount(token))\n    }, [dispatch, location])\n\n    const { loading, error } = useSelector(state => state.accountActivate)\n\n    return (\n        <div>\n            <Header />\n            <EmailConfirmation>\n                {\n                    loading ?\n                        <div><h2>Loading...</h2></div>\n                        :\n                        error ?\n                            <div><h2>{error}</h2></div>\n                            :\n                            <div>\n                                <h2>Email verified</h2>\n                                <Link to=\"/auth\">Login</Link>\n                            </div>\n                }\n            </EmailConfirmation>\n\n        </div>\n    )\n}\n\nexport default ActivateAccount\n","import React, { useState, useEffect } from 'react'\nimport { Grid, TextField, InputAdornment } from '@material-ui/core';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { resendConfirmationEmail } from \"../redux/actions/userActions\"\nimport Header from \"../components/MainHeader\"\nimport { ResetButton, PasswordResetContainer } from \"../styles/AuthStyle\"\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst ResendEmail = () => {\n\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('')\n\n    const { loading, error, result } = useSelector(state => state.emailResend)\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(resendConfirmationEmail(email))\n    }\n\n    return (\n        <div>\n            <Meta />\n            <Header />\n            <PasswordResetContainer>\n                <form className=\"content\" onSubmit={handleSubmit}>\n                    <div className=\"message\">\n                        {\n                            loading ? <Loader />\n                                : error ? error\n                                    : result && result.message\n                        }\n                    </div>\n                    <h2>Please Enter Your Email</h2>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            label=\"Email\"\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            fullWidth\n                            autoComplete=\"off\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <DraftsIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <ResetButton type=\"submit\">Send Email</ResetButton>\n                </form>\n            </PasswordResetContainer>\n        </div>\n    )\n}\n\nexport default ResendEmail\n","import React, { useState, useEffect } from 'react'\nimport { Grid, TextField, InputAdornment } from '@material-ui/core';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { forgotPassword } from \"../redux/actions/userActions\"\nimport Header from \"../components/MainHeader\"\nimport { ResetButton, PasswordResetContainer } from \"../styles/AuthStyle\"\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst ForgotPassword = () => {\n\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('')\n\n    const { loading, error, result } = useSelector(state => state.passwordForgot)\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        dispatch(forgotPassword(email))\n\n    }\n\n    return (\n        <div>\n            <Meta />\n            <Header />\n            <PasswordResetContainer>\n                <form className=\"content\" onSubmit={handleSubmit}>\n                    <div className=\"message\">\n                        {\n                            loading ? <Loader />\n                                : error ? error\n                                    : result && result.message\n                        }\n                    </div>\n                    <h2>Please Enter Your Email</h2>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            label=\"Email\"\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            fullWidth\n                            autoComplete=\"off\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <DraftsIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <ResetButton type=\"submit\">Send Email</ResetButton>\n                </form>\n            </PasswordResetContainer>\n        </div>\n    )\n}\n\nexport default ForgotPassword\n","import React, { useState } from 'react'\nimport { Grid, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { useLocation } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { resetPassword } from \"../redux/actions/userActions\"\nimport Header from \"../components/MainHeader\"\nimport { ResetButton, PasswordResetContainer } from \"../styles/AuthStyle\"\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport Meta from \"../components/Meta\"\n\nconst ResetPassword = () => {\n    const [values, setValues] = useState({\n        password: '',\n        showPassword: false,\n        confirmPassword: '',\n        showConfirmPassword: false,\n        message: ''\n    });\n\n    const location = useLocation()\n    const dispatch = useDispatch()\n    const splittedPath = location.pathname.split(/\\//)\n    const token = splittedPath[splittedPath.length - 1]\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleClickShowConfirmPassword = () => {\n        setValues({ ...values, showConfirmPassword: !values.showConfirmPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const { loading, error, result } = useSelector(state => state.passwordReset)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (values.password !== values.confirmPassword) {\n            setValues({ ...values, message: 'Passwords do not match' })\n        } else {\n            dispatch(resetPassword(token, values.password))\n        }\n    }\n\n    return (\n        <div>\n            <Meta />\n            <Header />\n            <PasswordResetContainer>\n                <form className=\"content\" onSubmit={handleSubmit}>\n                    <div className=\"message\">\n                        {\n                            values && values.message && values.message\n                        }\n                        {\n                            loading ? <Loader />\n                                : error ? error\n                                    : result && result.message\n                        }\n                    </div>\n                    <h2>Please Enter Your New Password</h2>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            label=\"Password\"\n                            type={values.showPassword ? 'text' : 'password'}\n                            value={values.password}\n                            onChange={handleChange('password')}\n                            fullWidth\n                            autoComplete=\"Enter password\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <i className=\"fas fa-key\"></i>\n                                    </InputAdornment>\n                                ),\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                        >\n                                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            label=\"Confirm Password\"\n                            value={values.confirmPassword}\n                            type={values.showConfirmPassword ? 'text' : 'password'}\n                            onChange={handleChange('confirmPassword')}\n                            fullWidth\n                            autoComplete=\"Enter password again\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <i className=\"fas fa-key\"></i>\n                                    </InputAdornment>\n                                ),\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowConfirmPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                        >\n                                            {values.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <ResetButton type=\"submit\">Reset Password</ResetButton>\n                </form>\n            </PasswordResetContainer>\n        </div>\n    )\n}\n\nexport default ResetPassword\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst themePart = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#63ccff',\n            main: '#009be5',\n            dark: '#006db3',\n        },\n    },\n    typography: {\n        h5: {\n            fontWeight: 500,\n            fontSize: 26,\n            letterSpacing: 0.5,\n        },\n    },\n    shape: {\n        borderRadius: 8,\n    },\n    props: {\n        MuiTab: {\n            disableRipple: true,\n        },\n    },\n    mixins: {\n        toolbar: {\n            minHeight: 48,\n        },\n    },\n});\n\nexport const theme = {\n    ...themePart,\n    overrides: {\n        MuiDrawer: {\n            paper: {\n                backgroundColor: '#18202c',\n            },\n        },\n        MuiButton: {\n            label: {\n                textTransform: 'none',\n            },\n            contained: {\n                boxShadow: 'none',\n                '&:active': {\n                    boxShadow: 'none',\n                },\n            },\n        },\n        MuiTabs: {\n            root: {\n                marginLeft: themePart.spacing(1),\n            },\n            indicator: {\n                height: 3,\n                borderTopLeftRadius: 3,\n                borderTopRightRadius: 3,\n                backgroundColor: themePart.palette.common.white,\n            },\n        },\n        MuiTab: {\n            root: {\n                textTransform: 'none',\n                margin: '0 16px',\n                minWidth: 0,\n                padding: 0,\n                [themePart.breakpoints.up('md')]: {\n                    padding: 0,\n                    minWidth: 0,\n                },\n            },\n        },\n        MuiIconButton: {\n            root: {\n                padding: themePart.spacing(1),\n            },\n        },\n        MuiTooltip: {\n            tooltip: {\n                borderRadius: 4,\n            },\n        },\n        MuiDivider: {\n            root: {\n                backgroundColor: '#404854',\n            },\n        },\n        MuiListItemText: {\n            primary: {\n                fontWeight: themePart.typography.fontWeightMedium,\n            },\n        },\n        MuiListItemIcon: {\n            root: {\n                color: 'inherit',\n                marginRight: 0,\n                '& svg': {\n                    fontSize: 20,\n                },\n            },\n        },\n        MuiAvatar: {\n            root: {\n                width: 32,\n                height: 32,\n            },\n        },\n    },\n};\n\nexport const drawerWidth = 260;\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        minHeight: '100vh',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    app: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    main: {\n        flex: 1,\n        padding: theme.spacing(6, 4),\n        background: '#eaeff1',\n    },\n    footer: {\n        padding: theme.spacing(2),\n        background: '#eaeff1',\n    },\n\n    paper: {\n        maxWidth: 936,\n        margin: 'auto',\n        overflow: 'hidden',\n    },\n    searchBar: {\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    },\n    searchInput: {\n        fontSize: theme.typography.fontSize,\n    },\n    block: {\n        display: 'block',\n    },\n    addUser: {\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        margin: '40px 16px',\n    },\n\n    secondaryBar: {\n        zIndex: 0,\n    },\n    menuButton: {\n        marginLeft: -theme.spacing(1),\n    },\n    iconButtonAvatar: {\n        padding: 4,\n    },\n    link: {\n        textDecoration: 'none',\n        color: lightColor,\n        '&:hover': {\n            color: theme.palette.common.white,\n        },\n    },\n    button: {\n        borderColor: lightColor,\n    },\n\n\n    categoryHeader: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    categoryHeaderPrimary: {\n        color: theme.palette.common.white,\n    },\n    item: {\n        paddingTop: 1,\n        paddingBottom: 1,\n        color: 'rgba(255, 255, 255, 0.7)',\n        '&:hover,&:focus': {\n            backgroundColor: 'rgba(255, 255, 255, 0.08)',\n        },\n    },\n    itemCategory: {\n        backgroundColor: '#232f3e',\n        boxShadow: '0 -1px 0 #404854 inset',\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    firebase: {\n        fontSize: 24,\n        color: theme.palette.common.white,\n    },\n    itemActiveItem: {\n        color: '#4fc3f7',\n    },\n    itemPrimary: {\n        fontSize: 'inherit',\n    },\n    itemIcon: {\n        minWidth: 'auto',\n        marginRight: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\n\nexport const useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nexport const useTableStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n","import PeopleIcon from '@material-ui/icons/People';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport PropTypes from 'prop-types';\n\nexport const categories = [\n    {\n        id: 'Services',\n        children: [\n            { id: 'Users', icon: <PeopleIcon />, href: 'users' },\n            { id: 'Cards', icon: <DnsRoundedIcon />, href: 'cards' },\n            { id: 'Card Orders', icon: <PhonelinkSetupIcon />, href: 'cardorders' },\n            { id: 'Change of Course', icon: <PermMediaOutlinedIcon />, href: 'changeofcourse' },\n            { id: 'Jamb Password Reset', icon: <PublicIcon />, href: 'jambpasswordreset' },\n            { id: 'O Level Result Uploads', icon: <SettingsEthernetIcon />, href: 'olevelupload' },\n            // { id: 'Users Reviews', icon: <SettingsInputComponentIcon />, href: 'reviews' },\n        ],\n    },\n    {\n        id: 'Miscellaneous',\n        children: [\n            { id: 'Email Manager', icon: <SettingsIcon />, href: 'emails' },\n            { id: 'Service Settings', icon: <SettingsInputComponentIcon />, href: 'service-settings' },\n        ],\n    },\n];\n\n\nexport function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\nexport function EnhancedTableHead(props) {\n    const { headCells, classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { DrawerContainer } from \"../../styles/AdminStyles\"\nimport clsx from 'clsx';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from \"react-router-dom\"\nimport { useStyles } from \"../../components/Admin/adminThemes\"\nimport { categories } from '../../components/Admin/adminUtils';\nimport { useLocation } from \"react-router-dom\"\n\n\nfunction Navigator(props) {\n  const classes = useStyles();\n  const { ...other } = props;\n  const location = useLocation()\n  const splittedPath = location.pathname.split(/\\//)\n  const path = splittedPath[splittedPath.length - 1]\n\n  return (\n    <DrawerContainer>\n      <Drawer variant=\"permanent\" {...other}>\n        <List disablePadding>\n          <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\n            <Link to=\"/\"\n              className={clsx(classes.item)}\n            >\n              Pin Cafes Admin\n            </Link>\n          </ListItem>\n          <ListItem className={clsx(classes.item, classes.itemCategory)}>\n            <ListItemIcon className={classes.itemIcon}>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText\n              classes={{\n                primary: classes.itemPrimary,\n              }}\n            >\n              App Overview\n              \n            </ListItemText>\n          </ListItem>\n          {categories.map(({ id, children }) => (\n            <React.Fragment key={id}>\n              <ListItem className={classes.categoryHeader}>\n                <ListItemText\n                  classes={{\n                    primary: classes.categoryHeaderPrimary,\n                  }}\n                >\n                  {id}\n                </ListItemText>\n              </ListItem>\n              {children.map(({ id: childId, icon, href }) => (\n                <Link to={`/admin/${href}`} key={childId}>\n                  <ListItem\n                    button\n                    className={clsx(classes.item)}\n                    style={{ color: path === href && '#4fc3f7' }}\n                  >\n                    <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n                    <ListItemText\n                      classes={{\n                        primary: classes.itemPrimary,\n                      }}\n                    >\n                      {childId}\n                    </ListItemText>\n                  </ListItem>\n                </Link>\n              ))}\n\n              <Divider className={classes.divider} />\n            </React.Fragment>\n          ))}\n        </List>\n      </Drawer>\n    </DrawerContainer>\n  );\n}\n\n\nexport default Navigator;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { useStyles } from \"../../components/Admin/adminThemes\"\nimport a11yProps from \"../../components/TabContainer/allProps\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { MESSAGE_RESET } from '../../redux/constants/utilConstants';\nimport { AdminHeader } from '../../styles/AdminStyles';\n\n\nfunction Header({ onDrawerToggle, value, setValue, labels }) {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n\n  const { userInfo } = useSelector(state => state.userLogin)\n  const { message } = useSelector(state => state.message)\n\n  const handleChange = (e, newVal) => {\n    dispatch({ type: MESSAGE_RESET })\n    setValue(newVal)\n  }\n\n  return (\n    <AdminHeader >\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Hidden smUp>\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onDrawerToggle}\n                  className={classes.menuButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n            </Hidden>\n            {\n              message ?\n                <Grid item xs>\n                  <Typography className=\"message\" variant=\"span\" component=\"p\">\n                    {message}\n                  </Typography>\n                </Grid>\n                :\n                <Grid item xs></Grid>\n            }\n\n\n            <Grid item>\n              <Link className={classes.link} href=\"#\" variant=\"body2\">\n\n              </Link>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Alerts • No alerts\">\n                <IconButton color=\"inherit\">\n                  <NotificationsIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\n                <Avatar src={userInfo && userInfo.profile && userInfo.profile.picture} alt=\"My Avatar\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Toolbar>\n          <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item >\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\n                Admin Panel\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Tabs\n          value={value}\n          textColor=\"inherit\"\n          onChange={handleChange}>\n          {\n            labels &&\n            labels.map((label, index) => (\n              <Tab key={index} textColor=\"inherit\" label={label} {...a11yProps(index)} />\n            ))\n          }\n\n\n        </Tabs>\n      </AppBar>\n    </AdminHeader>\n  );\n}\n\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport Navigator from './Navigator';\nimport Header from './Header';\nimport { theme, drawerWidth, useStyles } from \"../../components/Admin/adminThemes\"\nimport SwipeableViews from 'react-swipeable-views';\nimport TabPanel from \"../../components/TabContainer/TabPanel\"\nimport { useDispatch } from \"react-redux\"\nimport { MESSAGE_RESET } from '../../redux/constants/utilConstants';\n\nfunction Paperbase({ labels, TabContent, value, setValue }) {\n    const classes = useStyles();\n    const [mobileOpen, setMobileOpen] = useState(false);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch({ type: MESSAGE_RESET })\n    }, [dispatch])\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <CssBaseline />\n                <nav className={classes.drawer}>\n                    <Hidden smUp implementation=\"js\">\n                        <Navigator\n                            PaperProps={{ style: { width: drawerWidth } }}\n                            variant=\"temporary\"\n                            open={mobileOpen}\n                            onClose={handleDrawerToggle}\n                        />\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Navigator PaperProps={{ style: { width: drawerWidth } }} />\n                    </Hidden>\n                </nav>\n                <div className={classes.app}>\n                    <Header\n                        onDrawerToggle={handleDrawerToggle}\n                        value={value}\n                        labels={labels}\n                        setValue={setValue} />\n                    <main className={classes.main}>\n\n                        <SwipeableViews\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                            index={value}\n                            onChangeIndex={(index) => setValue(index)}\n                        >\n                            {\n                                TabContent &&\n                                TabContent.map((content, index) => (\n                                    <TabPanel key={index} value={value} index={index} dir={theme.direction}>\n                                        {content}\n                                    </TabPanel>\n                                ))\n                            }\n\n                        </SwipeableViews>\n                    </main>\n                    {/* <footer className={classes.footer}>\n                        <Copyright />\n                    </footer> */}\n                </div>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default Paperbase;","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Divider, FormControl, InputLabel, Input, InputAdornment, TextareaAutosize, Grid, Typography }\n    from '@material-ui/core'\nimport Loader from \"../../../components/Loaders/SimpleLoader\"\nimport { Person as PersonIcon, Message as MessageIcon } from '@material-ui/icons'\nimport { colors } from '../../../styles/breakpoints';\nimport { UserProfileContainer, AdminButtonPro, AdminHeader } from \"../../../styles/AdminStyles\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { emailAUserByEmail, emailAllUsers } from '../../../redux/actions/userActions';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}))\n\nconst EmailManager = () => {\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    const [singleEmailSubject, setSingleEmailSubject] = useState(\"\")\n    const [singleEmailBody, setSingleEmailBody] = useState(\"\")\n\n    const [multipleEmailSubject, setMultipleEmailSubject] = useState(\"\")\n    const [multipleEmailBody, setMultipleEmailBody] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n\n    const userEmailByEmail = useSelector(state => state.userEmailByEmail)\n    const { loading, message } = userEmailByEmail\n\n    const usersEmail = useSelector(state => state.usersEmail)\n    const { loading: emailsLoading, message: messageAll } = usersEmail\n\n    const handleMultipleEmailSend = (e) => {\n        e.preventDefault()\n        dispatch(emailAllUsers({\n            subject: multipleEmailSubject,\n            message: multipleEmailBody\n        }))\n    }\n\n    const handleSingleEmailSend = (e) => {\n        e.preventDefault()\n        dispatch(emailAUserByEmail(email, {\n            subject: singleEmailSubject,\n            message: singleEmailBody\n        }))\n    }\n\n\n    return (\n        <UserProfileContainer>\n            <form className=\"messagecontainer\" onSubmit={handleMultipleEmailSend}>\n                {\n                    messageAll &&\n                    <AdminHeader>\n                        <Grid item xs>\n                            <Typography className=\"message\" variant=\"span\" component=\"p\">\n                                {messageAll}\n                            </Typography>\n                        </Grid>\n                    </AdminHeader>\n\n                }\n                {\n                    emailsLoading ? <Loader />\n                        :\n                        <Card className=\"card__content\">\n                            <CardContent >\n                                <div className=\"heading\">\n                                    <h2>Send message to All Users</h2>\n                                </div>\n                                <Divider />\n                                <div className=\"contents\">\n                                    <div className=\"fullwidth\">\n                                        <FormControl fullWidth className={classes.formControl}>\n                                            <InputLabel htmlFor=\"standard-adornment-name\">Subject</InputLabel>\n                                            <Input\n                                                id=\"standard-adornment-name\"\n                                                value={multipleEmailSubject}\n                                                required\n                                                onChange={(e) => setMultipleEmailSubject(e.target.value)}\n                                                startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    <div className=\"fullwidth\">\n                                        <FormControl className={classes.formControl}>\n                                            <TextareaAutosize\n                                                aria-label=\"minimum height\"\n                                                onChange={e => setMultipleEmailBody(e.target.value)}\n                                                value={multipleEmailBody}\n                                                required\n                                                rowsMin={5}\n                                                startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                                                placeholder=\"Additional Information\" />\n                                        </FormControl>\n                                    </div>\n\n                                </div>\n\n                                <Divider />\n                                <div className=\"actions\">\n\n                                    <AdminButtonPro\n                                        type=\"submit\"\n                                        color={colors.goldish}\n                                    >Send message</AdminButtonPro>\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                }\n            </form>\n\n\n\n            {/* Email a user */}\n\n            <form className=\"messagecontainer\" onSubmit={handleSingleEmailSend}>\n                {\n                    message &&\n                    <AdminHeader>\n                        <Grid item xs>\n                            <Typography className=\"message\" variant=\"span\" component=\"p\">\n                                {message}\n                            </Typography>\n                        </Grid>\n                    </AdminHeader>\n\n                }\n                {\n                    loading ? <Loader />\n                        :\n                        <Card className=\"card__content\">\n                            <CardContent >\n                                <div className=\"heading\">\n                                    <h2>Send email to a Users</h2>\n                                </div>\n                                <Divider />\n                                <div className=\"contents\">\n                                    <div className=\"fullwidth\">\n                                        <FormControl fullWidth className={classes.formControl}>\n                                            <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\n                                            <Input\n                                                id=\"standard-adornment-email\"\n                                                value={email}\n                                                type=\"email\"\n                                                required\n                                                onChange={(e) => setEmail(e.target.value)}\n                                                startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    <div className=\"fullwidth\">\n                                        <FormControl fullWidth className={classes.formControl}>\n                                            <InputLabel htmlFor=\"standard-adornment-subject\">Subject</InputLabel>\n                                            <Input\n                                                id=\"standard-adornment-subject\"\n                                                value={singleEmailSubject}\n                                                required\n                                                onChange={(e) => setSingleEmailSubject(e.target.value)}\n                                                startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    <div className=\"fullwidth\">\n                                        <FormControl className={classes.formControl}>\n                                            <TextareaAutosize\n                                                aria-label=\"minimum height\"\n                                                onChange={e => setSingleEmailBody(e.target.value)}\n                                                value={singleEmailBody}\n                                                required\n                                                rowsMin={5}\n                                                startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                                                placeholder=\"Additional Information\" />\n                                        </FormControl>\n                                    </div>\n\n                                </div>\n\n                                <Divider />\n                                <div className=\"actions\">\n\n                                    <AdminButtonPro\n                                        type=\"submit\"\n                                        color={colors.goldish}\n                                    >Send message</AdminButtonPro>\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                }\n            </form>\n        </UserProfileContainer>\n    )\n}\n\nexport default EmailManager\n","import React, { useState } from 'react'\nimport Content from \"../Content\"\nimport EmailManager from \"./EmailManager\"\n\n\nconst ManageEmails = () => {\n\n    const [value, setValue] = useState(0);\n    const labels = [\"Manage Emails\"]\n\n    return (\n        <div>\n            <Content\n                labels={labels}\n                TabContent={[<EmailManager setValue={setValue} />]}\n                value={value}\n                setValue={setValue}\n            />\n        </div>\n    )\n}\n\nexport default ManageEmails\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Loader from \"../../components/Loaders/SimpleLoader\"\nimport ForwardIcon from '@material-ui/icons/Forward';\nimport { getComparator, stableSort, EnhancedTableHead } from \"../../components/Admin/adminUtils\"\nimport { useToolbarStyles, useTableStyles } from \"../../components/Admin/adminThemes\"\n\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { caption, handleOverview, id, numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n            {caption}\n          </Typography>\n        )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"View details\">\n          <IconButton aria-label=\"forward\" onClick={() => handleOverview(id)} >\n            <ForwardIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\">\n\n            </IconButton>\n          </Tooltip>\n        )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\n\nexport default function EnhancedTable({\n  caption,\n  headCells,\n  setValue,\n  handleOverview,\n  error,\n  loading,\n  items,\n  anchor,\n  displayArr,\n  showUser,\n  showCost\n}) {\n\n\n  const classes = useTableStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(3);\n  const [itemId, setItemId] = useState(\"\")\n\n  // const itemsList = useSelector(state => state.itemsList)\n  // const { loading, error, items } = itemsList\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name, id) => {\n    setItemId(id)\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    items && rowsPerPage - Math.min(rowsPerPage, items.length - page * rowsPerPage);\n\n\n\n  return (\n    <div className={classes.root}>\n\n      {\n        loading ? <Loader />\n          :\n          error ? error\n            :\n            <>\n              <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                  caption={caption}\n                  setValue={setValue}\n                  id={itemId}\n                  numSelected={selected.length}\n                  handleOverview={handleOverview}\n                />\n                <TableContainer>\n                  <Table\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size={dense ? 'small' : 'medium'}\n                    aria-label=\"enhanced table\"\n                  >\n                    <EnhancedTableHead\n                      headCells={headCells}\n                      classes={classes}\n                      numSelected={selected.length}\n                      order={order}\n                      orderBy={orderBy}\n                      onRequestSort={handleRequestSort}\n                      rowCount={items && items.length}\n                    />\n                    <TableBody>\n                      {items && stableSort(items, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((item, index) => {\n                          const isItemSelected = isSelected(item.[anchor]);\n                          const labelId = `enhanced-table-checkbox-${index}`;\n\n                          return (\n                            <TableRow\n                              hover\n                              onClick={(event) => handleClick(event, item.[anchor], item._id)}\n                              role=\"checkbox\"\n                              style={{ cursor: 'pointer' }}\n                              aria-checked={isItemSelected}\n                              tabIndex={-1}\n                              key={item.[anchor]}\n                              selected={isItemSelected}\n                            >\n                              <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                  checked={isItemSelected}\n                                  inputProps={{ 'aria-labelledby': labelId }}\n                                />\n                              </TableCell>\n\n                              {\n                                item.hasOwnProperty('orderItems') ?\n                                  displayArr.map((el, index) =>\n                                    <TableCell key={index} align={index === 0 ? 'left' : 'right'}>\n                                      {item.orderItems.isArray ?\n                                        item.orderItems[0].[el] :\n                                        item.orderItems.[el]\n                                      }\n                                    </TableCell>\n                                  )\n                                  :\n                                  displayArr.map((el, index) =>\n                                    <TableCell key={index} align={index === 0 ? 'left' : 'right'}>\n                                      {item.[el]}</TableCell>\n                                  )\n                              }\n                              {\n                                showCost && <TableCell align=\"right\">\n                                  {item.price}\n                                </TableCell>\n                              }\n                              {\n                                showUser && <TableCell align=\"right\">\n                                  {item.user && item.user.name}\n                                </TableCell>\n                              }\n                              {\n                                item.createdAt && <TableCell align=\"right\">\n                                  {new Date(item.createdAt).toDateString()}\n                                </TableCell>\n                              }\n                            </TableRow>\n                          );\n                        })}\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  rowsPerPageOptions={[3, 6, 9, 12, 15, 18, 21]}\n                  component=\"span\"\n                  count={items && items.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </Paper>\n              <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Dense padding\"\n              />\n            </>\n      }\n\n    </div>\n  );\n}\n","import React, { useEffect } from 'react'\nimport Content from \"../TableContent\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getAUser, getAllUsers } from \"../../../redux/actions/userActions\"\nimport { useHistory } from \"react-router-dom\"\n\nconst UsersList = ({ setValue }) => {\n    const { error, loading, users } = useSelector(state => state.usersList)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const headCells = [\n        { id: 'name', numeric: false, disablePadding: true, label: 'Full Name' },\n        { id: 'email', numeric: true, disablePadding: false, label: 'Email' },\n        { id: 'type', numeric: true, disablePadding: false, label: 'Auth Type' },\n        { id: 'wallet', numeric: true, disablePadding: false, label: 'Wallet Balance' },\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date created' },\n    ];\n\n    useEffect(() => {\n        dispatch(getAllUsers())\n    }, [dispatch])\n\n    const handleOverview = (id) => {\n        setValue(1)\n        history.push(`/admin/users?userId=${id}`)\n    }\n\n    return (\n        <div>\n            <Content\n                caption=\"Users List\"\n                headCells={headCells}\n                setValue={setValue}\n                getAnItem={getAUser}\n                error={error && error}\n                loading={loading && loading}\n                items={users && users}\n                handleOverview={handleOverview}\n                anchor=\"_id\"\n                displayArr={[\"name\", \"email\", \"type\", \"wallet\"]}\n            />\n        </div>\n    )\n}\n\nexport default UsersList\n","import React, { useState, useEffect } from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { UserProfileContainer, AdminButton } from \"../../../styles/AdminStyles\"\nimport CurrencyFormat from \"react-currency-format\"\nimport { Avatar, Card, CardContent, Divider } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader from \"../../../components/Loaders/SimpleLoader\"\nimport { getAUser, makeUserAdmin, makeUserEditor } from \"../../../redux/actions/userActions\"\nimport { listMyCards } from \"../../../redux/actions/soldCardActions\"\nimport queryString from \"query-string\"\nimport { useLocation } from \"react-router-dom\"\nimport { deleteAUser } from \"../../../redux/actions/userActions\"\nimport { listMyNotPaidCardOrders } from '../../../redux/actions/cardOrderActions';\nimport { listMyChangeOfCourseOrders } from '../../../redux/actions/changeOfCourseActions';\nimport { listMyJambPasswordResetOrders } from '../../../redux/actions/jambPasswordResetActions';\nimport { listMyOlevelUploadOrders } from '../../../redux/actions/oLevelResultUploadActions';\nimport MessageModal from \"../../../components/Utils/MessageModal\"\n\nconst UserProfile = () => {\n    const [deletePrompt, setDeletePrompt] = useState(false)\n\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const [isEditor, setIsEditor] = useState(false)\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const { userId } = queryString.parse(location.search)\n\n    useEffect(() => {\n        if (userId) {\n            dispatch(getAUser(userId))\n            dispatch(listMyCards(userId))\n            dispatch(listMyNotPaidCardOrders(userId))\n            dispatch(listMyChangeOfCourseOrders(userId))\n            dispatch(listMyJambPasswordResetOrders(userId))\n            dispatch(listMyOlevelUploadOrders(userId))\n        }\n\n    }, [dispatch, userId])\n\n    const { userInfo } = useSelector(state => state.userLogin)\n    const { loading, error, user } = useSelector(state => state.userList)\n    const { cards } = useSelector(state => state.cardMy)\n    const { orders: cardOrders } = useSelector(state => state.cardMyOrderNotPaidList)\n    const { orders: cocOrders } = useSelector(state => state.changeOfCourseOrderListMy)\n    const { orders: olruOrders } = useSelector(state => state.oLevelUploadOrderListMy)\n    const { orders: jprOrders } = useSelector(state => state.jambPasswordResetOrderListMy)\n    const { loading: makeAdminLoading } = useSelector(state => state.userMakeAdmin)\n    const { loading: makeEditorLoading } = useSelector(state => state.userMakeEditor)\n\n    const { loading: deleteLoading } = useSelector(state => state.userDelete)\n\n    useEffect(() => {\n        if (user) {\n            setIsAdmin(user.isAdmin)\n            setIsEditor(user.isEditor)\n        }\n    }, [user])\n\n    const handleMakeAdmin = () => {\n        dispatch(makeUserAdmin(userId, !user.isAdmin))\n        setIsAdmin(!isAdmin)\n    }\n\n    const handleMakeEditor = () => {\n        dispatch(makeUserEditor(userId, !user.isEditor))\n        setIsEditor(!isEditor)\n    }\n\n    const handleUserDelete = () => {\n        dispatch(deleteAUser(userId))\n        setDeletePrompt(false)\n    }\n\n    return (\n        <UserProfileContainer>\n            {\n                loading ? <Loader />\n                    :\n                    deleteLoading ? <Loader />\n                        :\n                        user ?\n                            <React.Fragment>\n                                <Card className=\"card__image\">\n                                    <CardContent>\n                                        <Avatar className=\"profile_pic\"\n                                            src={user.profile && user.profile.picture} />\n\n                                    </CardContent>\n                                </Card>\n                                <Card className=\"card__content\">\n                                    <CardContent>\n                                        <div className=\"heading\">\n                                            <h2>{user.name}</h2>\n                                            <div>\n                                                <span>Balance:</span>\n                                                <CurrencyFormat value={user.wallet}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'₦'}\n                                                    renderText={value => <h4>{value}</h4>}\n                                                />\n                                            </div>\n                                        </div>\n                                        <Divider />\n                                        <div className=\"contents\">\n                                            <div>\n                                                <span>Email:</span>\n                                                <span>{user.email}</span>\n                                            </div>\n                                            <div>\n                                                <span>Joined on:</span>\n                                                <span>{new Date(user.createdAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Email confirmation status:</span>\n                                                <span style={{ color: user.confirmed ? 'green' : 'red' }}>{user.confirmed ? 'confirmed' : 'Not confirmed'}</span>\n                                            </div>\n                                            <div>\n                                                <span>Admin status:</span>\n                                                <span >\n                                                    {user.admin ? 'Admin' : 'Not Admin'}</span>\n                                            </div>\n                                            <div>\n                                                <span>Sign up with:</span>\n                                                <span >\n                                                    {user.type.replace(/\\b\\w/g, l => l.toUpperCase())}</span>\n                                            </div>\n                                            <div>\n                                                <span>Last update on account:</span>\n                                                <span >\n                                                    {new Date(user.updatedAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Cards bought:</span>\n                                                <span>{cards && cards.length}</span>\n                                            </div>\n                                            <div>\n                                                <span>Card orders not paid:</span>\n                                                <span>{cardOrders && cardOrders.length}</span>\n                                            </div>\n                                            <div>\n                                                <span>Change of course orders:</span>\n                                                <span>{cocOrders && cocOrders.length}</span>\n                                            </div>\n                                            <div>\n                                                <span>Jamb password reset orders:</span>\n                                                <span>{jprOrders && jprOrders.length}</span>\n                                            </div>\n                                            <div>\n                                                <span>O level result upload orders:</span>\n                                                <span>{olruOrders && olruOrders.length}</span>\n                                            </div>\n\n                                            {\n                                                user.profile && (\n                                                    <>\n                                                        {\n                                                            user.profile.phoneNo ?\n                                                                <div>\n                                                                    <span>Phone Number:</span>\n                                                                    <span >\n                                                                        {user.profile.phoneNo}</span>\n                                                                </div>\n                                                                :\n                                                                ''\n                                                        }\n                                                        {\n                                                            user.profile.address ?\n                                                                <div>\n                                                                    <span>Address:</span>\n                                                                    <span >\n                                                                        {user.profile.address}</span>\n                                                                </div>\n                                                                :\n                                                                ''\n                                                        }\n\n                                                    </>\n                                                )\n                                            }\n\n                                        </div>\n\n                                        <Divider />\n                                        <div className=\"actions\">\n                                            {userInfo.isAdmin &&\n                                                <>\n                                                    <FormControlLabel\n                                                        control={<Switch checked={isAdmin}\n                                                            onChange={handleMakeAdmin} />}\n                                                        label={isAdmin ? \"Admin\" : \"Not Admin\"}\n                                                    />\n                                                    <FormControlLabel\n                                                        control={<Switch checked={isEditor}\n                                                            onChange={handleMakeEditor} />}\n                                                        label={isEditor ? \"Manager\" : \"Not Manager\"}\n                                                    />\n                                                    <AdminButton onClick={() => setDeletePrompt(true)}>Delete User</AdminButton>\n                                                </>\n\n\n                                            }\n                                        </div>\n\n                                    </CardContent>\n                                </Card>\n\n\n                                <MessageModal\n                                    open={deletePrompt}\n                                    setOpen={setDeletePrompt}\n                                    caption={`Delete ${user && user.name}'s account`}\n                                    message={\n                                        <div className='delete'>\n                                            <h4 className=\"deleteheader\">This action is not reversable</h4>\n                                            <p>Are you sure you want to delete {user.name}'s account</p>\n                                            {\n                                                user.wallet > 0 &&\n                                                <p>This user has funds in their wallet.\n                                                On selection \"Yes\", the wallet will also be cleared.\n                                                </p>\n                                            }\n                                            <div className=\"deleteconfirm\">\n                                                <AdminButton onClick={() => setDeletePrompt(false)}>No</AdminButton>\n                                                <AdminButton onClick={handleUserDelete}>Yes</AdminButton>\n                                            </div>\n                                        </div>\n                                    }\n                                />\n\n\n                                {/* <MessageModal\n                                    open={messagePrompt}\n                                    setOpen={setMessagePrompt}\n                                    caption=\"Message\"\n                                    message={\n                                        <>\n                                            <div>{makeAdminError && makeAdminError}</div>\n                                            <div>{deleteError && deleteError}</div>\n                                        </>\n                                    }\n                                /> */}\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any user\n                            </CardContent>\n                            </Card>\n            }\n\n\n        </UserProfileContainer>\n    )\n}\n\nexport default UserProfile\n","import React, { useState } from 'react'\nimport Content from \"../Content\"\nimport UsersList from \"./UsersList\"\nimport UserProfile from \"./UserProfile\"\n\nconst Users = () => {\n\n\n\n    const [value, setValue] = useState(0);\n    const labels = [\"User List\", \"User Profile\"]\n\n    return (\n        <div>\n            <Content\n                labels={labels}\n                TabContent={[<UsersList setValue={setValue} />, <UserProfile />]}\n                value={value}\n                setValue={setValue}\n            />\n        </div>\n    )\n}\n\nexport default Users\n","import React, { useEffect } from 'react'\nimport Content from \"../TableContent\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { createCard, listCards } from \"../../../redux/actions/cardActions\"\nimport { useHistory } from \"react-router-dom\"\nimport { AdminButtonPro, RightAlign } from \"../../../styles/AdminStyles\"\n\nconst CardsList = ({ setValue }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const headCells = [\n        { id: 'name', numeric: false, disablePadding: true, label: 'Card Name' },\n        { id: 'price', numeric: true, disablePadding: false, label: 'Price' },\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date created' },\n    ];\n\n    useEffect(() => {\n        dispatch(listCards())\n    }, [dispatch])\n\n    const handleOverview = (id) => {\n        setValue(1)\n        history.push(`/admin/cards?cardId=${id}`)\n    }\n\n    const { error, loading, cards } = useSelector(state => state.cardList)\n    const { error: createError, loading: createLoading, createdCard } =\n        useSelector(state => state.cardCreate)\n\n    const handleAddNew = () => {\n        dispatch(createCard())\n        dispatch(listCards())\n    }\n\n    useEffect(() => {\n        if (createdCard) {\n            setValue(1)\n            history.push(`/admin/cards/?cardId=${createCard._id}`)\n        }\n    }, [createdCard, history, setValue])\n\n    return (\n        <div>\n            <Content\n                caption=\"Card List\"\n                headCells={headCells}\n                setValue={setValue}\n                error={\n                    error ? error : createError ? createError : null}\n                loading={loading ? loading : createLoading ? createLoading : null}\n                items={cards}\n                handleOverview={handleOverview}\n                anchor=\"_id\"\n                displayArr={[\"name\", \"price\"]}\n            />\n            <RightAlign >\n                <AdminButtonPro onClick={handleAddNew}>Add a new card</AdminButtonPro>\n            </RightAlign>\n        </div>\n    )\n}\n\nexport default CardsList\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\n\nexport default function StickyHeadTable({ columns, rows }) {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ?\n                                                    column.format(value) : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows && rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Person as PersonIcon, Message as MessageIcon } from '@material-ui/icons'\nimport { Input, FormControl } from '@material-ui/core'\nimport { TextareaAutosize, InputLabel, InputAdornment } from '@material-ui/core'\nimport { UserProfileContainer, AdminButton, AdminButtonAlt, AdminButtonPro, RightAlign } from \"../../../styles/AdminStyles\"\nimport { colors } from \"../../../styles/breakpoints\"\nimport CurrencyFormat from \"react-currency-format\"\nimport { Avatar, Card, CardContent, Divider } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader from \"../../../components/Loaders/LinearLoader\"\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport { addCardItems, listCardDetails, listCards, updateCard } from \"../../../redux/actions/cardActions\"\nimport queryString from \"query-string\"\nimport { useLocation } from \"react-router-dom\"\nimport FixedTable from \"./FixedHeaderTable\"\nimport MessageModal from \"../../../components/Utils/MessageModal\"\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport { deleteCard } from \"../../../redux/actions/cardActions\"\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\n\nconst CardDetails = ({ setValue }) => {\n    const classes = useStyles();\n    const [deletePrompt, setDeletePrompt] = useState(false)\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const { cardId } = queryString.parse(location.search)\n\n    const { userInfo } = useSelector(state => state.userLogin)\n\n    useEffect(() => {\n        if (cardId) {\n            dispatch(listCardDetails(cardId))\n        }\n    }, [dispatch, cardId])\n\n    const headCells = [\n        { id: '_id', label: 'Card ID', minWidth: 170 },\n        { id: 'pin', label: 'PIN', minWidth: 170 },\n        { id: 'serialNo', label: 'Serial No.' },\n        { id: 'token', label: 'Token' },\n    ];\n    const { loading, error, card } = useSelector(state => state.cardDetails)\n    const { loading: updateLoading } = useSelector(state => state.cardUpdate)\n    const { loading: addLoading } = useSelector(state => state.cardAddItem)\n\n    const [price, setPrice] = useState(0)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState('')\n    const [pin, setPin] = useState(\"\")\n    const [serialNo, setSerialNo] = useState('')\n    const [token, setToken] = useState('')\n    const [addPrompt, setAddPrompt] = useState('')\n\n    const handleCardItemAdd = () => {\n        //dispatch add card item\n        dispatch(addCardItems(card._id, { pin, serialNo, token }))\n        dispatch(listCardDetails(cardId))\n        setPin(\"\")\n        setSerialNo(\"\")\n        setToken(\"\")\n        setAddPrompt(false)\n\n    }\n\n    useEffect(() => {\n        if (card) {\n            setName(card.name)\n            setPrice(card.price)\n            setDescription(card.description)\n        }\n    }, [card])\n\n    const [upload, setUpload] = useState({\n        open: false,\n        files: []\n    })\n    const handleCardDelete = () => {\n        dispatch(deleteCard(card._id))\n        dispatch(listCards())\n        setValue(0)\n    }\n\n    const handleCardUpdate = () => {\n        const formData = new FormData()\n        formData.append('image', upload.files[0])\n        formData.append('name', name)\n        formData.append('price', price)\n        formData.append('description', description)\n        dispatch(updateCard(card._id, formData))\n        dispatch(listCardDetails(cardId))\n    }\n\n    const isEmpty = (obj) => {\n        for (let key in obj) {\n            if (obj.hasOwnProperty(key))\n                return false\n        }\n        return true\n    }\n\n    return (\n        <UserProfileContainer>\n            {\n                loading ? <Loader />\n                    : error ? error\n                        : updateLoading ? <Loader />\n                            :\n                            !isEmpty(card) ?\n                                <React.Fragment>\n                                    <Card className=\"card__image\">\n                                        <CardContent>\n                                            <Avatar className=\"profile_pic\"\n                                                src={card.upload && card.upload.image}\n                                            />\n\n\n                                            <div>\n                                                <AdminButtonAlt onClick={() => setUpload({ ...upload, open: true })}>\n                                                    <PhotoCameraIcon />Change</AdminButtonAlt>\n                                                <DropzoneDialog\n                                                    open={upload.open}\n                                                    filesLimit={1}\n                                                    clearOnUnmount={false}\n                                                    // onChange={(files) => console.log('Files:', files)}\n                                                    onSave={(files) => setUpload({ files: files, open: false })}\n                                                    submitButtonText=\"Add image\"\n                                                    acceptedFiles={['image/jpeg', 'image/png']}\n                                                    showPreviews={true}\n                                                    maxFileSize={100000}\n                                                    onClose={() => setUpload({ ...upload, open: false })}\n                                                />\n                                            </div>\n                                        </CardContent>\n                                    </Card>\n                                    <Card className=\"card__content\">\n                                        <CardContent>\n                                            <div className=\"heading\">\n\n                                                <h2>{card.name}</h2>\n                                                <div>\n                                                    <span>Price:</span>\n\n                                                    <CurrencyFormat value={price} thousandSeparator={true} prefix={'₦'}\n                                                        onValueChange={(values) => {\n                                                            const { value } = values;\n                                                            setPrice(value)\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <Divider />\n                                            <div className=\"contents\">\n                                                <div>\n                                                    <span>Created on:</span>\n                                                    <span>{new Date(card.createdAt).toDateString()}</span>\n                                                </div>\n                                                <div>\n                                                    <span>Updated on:</span>\n                                                    <span >\n                                                        {new Date(card.updatedAt).toDateString()}</span>\n                                                </div>\n                                                <div className=\"fullwidth\">\n                                                    <FormControl fullWidth className={classes.formControl}>\n                                                        <InputLabel htmlFor=\"standard-adornment-name\">Full Name</InputLabel>\n                                                        <Input\n                                                            id=\"standard-adornment-name\"\n                                                            value={name}\n                                                            required\n                                                            onChange={(e) => setName(e.target.value)}\n                                                            startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                        />\n                                                    </FormControl>\n                                                </div>\n\n                                                <div className=\"fullwidth\">\n                                                    <FormControl className={classes.formControl}>\n                                                        <TextareaAutosize\n                                                            aria-label=\"minimum height\"\n                                                            onChange={e => setDescription(e.target.value)}\n                                                            value={description}\n                                                            rowsMin={5}\n                                                            startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                                                            placeholder=\"Additional Information (Optional)\" />\n                                                    </FormControl>\n                                                </div>\n\n\n\n                                            </div>\n\n                                            <Divider />\n                                            <div className=\"actions\">\n                                                {\n                                                    userInfo.isAdmin &&\n                                                    <>\n                                                        <AdminButtonPro color={colors.goldish}\n                                                            onClick={handleCardUpdate}\n                                                        >Save Card</AdminButtonPro>\n                                                        <AdminButton onClick={() => setDeletePrompt(true)}>Delete Card</AdminButton>\n                                                    </>\n                                                }\n\n                                            </div>\n\n                                        </CardContent>\n                                    </Card>\n\n                                    {\n                                        !isEmpty(card) &&\n                                        <div className=\"carditems\">\n                                            {\n                                                addLoading ? <Loader />\n                                                    :\n                                                    <FixedTable\n                                                        columns={headCells}\n                                                        rows={card.items && card.items}\n                                                    />\n                                            }\n                                            <RightAlign >\n                                                <AdminButtonPro color={colors.goldish}\n                                                    onClick={() => setAddPrompt(true)}\n                                                >Add card item</AdminButtonPro>\n                                            </RightAlign>\n                                        </div>\n                                    }\n\n\n                                    <MessageModal\n                                        open={deletePrompt}\n                                        setOpen={setDeletePrompt}\n                                        caption={`Delete ${card && card.name}`}\n                                        message={\n                                            <div className='delete'>\n                                                <h4 className=\"deleteheader\">This action is not reversable</h4>\n                                                <p>Are you sure you want to delete {card.name}?</p>\n                                                <p>This will also delete the pin, serial no and token</p>\n                                                <div className=\"deleteconfirm\">\n                                                    <AdminButton onClick={() => setDeletePrompt(false)}>No</AdminButton>\n                                                    <AdminButton onClick={handleCardDelete}>Yes</AdminButton>\n                                                </div>\n                                            </div>\n                                        }\n                                    />\n\n                                    <MessageModal\n                                        open={addPrompt}\n                                        setOpen={setAddPrompt}\n                                        caption={`Enter ${card && card.name} Details`}\n                                        message={\n                                            <div className='add'>\n                                                <div className=\"fullwidth\">\n                                                    <FormControl fullWidth className={classes.formControl}>\n                                                        <InputLabel htmlFor=\"standard-adornment-name\">PIN</InputLabel>\n                                                        <Input\n                                                            id=\"standard-adornment-pin\"\n                                                            value={pin}\n                                                            required\n                                                            onChange={(e) => setPin(e.target.value)}\n                                                            startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                        />\n                                                    </FormControl>\n                                                    <FormControl fullWidth className={classes.formControl}>\n                                                        <InputLabel htmlFor=\"standard-adornment-name\">serialNo</InputLabel>\n                                                        <Input\n                                                            id=\"standard-adornment-serialno\"\n                                                            value={serialNo}\n                                                            required\n                                                            onChange={(e) => setSerialNo(e.target.value)}\n                                                            startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                        />\n                                                    </FormControl>\n                                                    <FormControl fullWidth className={classes.formControl}>\n                                                        <InputLabel htmlFor=\"standard-adornment-name\">Token</InputLabel>\n                                                        <Input\n                                                            id=\"standard-adornment-token\"\n                                                            value={token}\n                                                            required\n                                                            onChange={(e) => setToken(e.target.value)}\n                                                            startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                        />\n                                                    </FormControl>\n\n                                                </div>\n                                                <div className=\"deleteconfirm\">\n                                                    <AdminButton onClick={() => setAddPrompt(false)}>Cancel</AdminButton>\n                                                    <AdminButton onClick={handleCardItemAdd}>Add</AdminButton>\n                                                </div>\n                                            </div>\n                                        }\n                                    />\n\n                                </React.Fragment>\n                                :\n                                <Card>\n                                    <CardContent>\n                                        You have not selected any card\n                            </CardContent>\n                                </Card>\n            }\n\n\n        </UserProfileContainer>\n    )\n}\n\nexport default CardDetails\n","import React, { useState, useEffect } from 'react'\nimport Content from \"../Content\"\nimport CardsList from \"./CardsList\"\nimport CardDetails from \"./CardDetails\"\nimport { listCards } from \"../../../redux/actions/cardActions\"\nimport { useDispatch } from \"react-redux\"\n\nconst Cards = () => {\n    const dispatch = useDispatch()\n    const [value, setValue] = useState(0);\n    const labels = [\"Card List\", \"Card Details\"]\n\n    useEffect(() => {\n        dispatch(listCards())\n    }, [dispatch])\n\n    return (\n        <div>\n            <Content\n                labels={labels}\n                TabContent={[<CardsList setValue={setValue} />,\n                <CardDetails setValue={setValue} />]}\n                value={value}\n                setValue={setValue}\n            />\n        </div>\n    )\n}\n\nexport default Cards\n","import React, { useEffect } from 'react'\nimport Content from \"../TableContent\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { listCardOrders } from \"../../../redux/actions/cardOrderActions\"\nimport { useHistory } from \"react-router-dom\"\n\nconst UsersList = ({ setValue }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const headCells = [\n        { id: 'name', numeric: false, disablePadding: true, label: 'Card Name' },\n        { id: 'qty', numeric: true, disablePadding: false, label: 'Qty' },\n        { id: 'price', numeric: true, disablePadding: false, label: 'price' },\n        { id: 'user', numeric: true, disablePadding: false, label: 'Buyer' },\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date created' },\n    ];\n\n    useEffect(() => {\n        dispatch(listCardOrders())\n    }, [dispatch])\n\n    const handleOverview = (id) => {\n        setValue(1)\n        history.push(`/admin/cardorders?orderId=${id}`)\n    }\n\n    const { loading, orders, error } = useSelector(state => state.cardOrderList)\n\n    return (\n        <div>\n            <Content\n                caption=\"CardOrders List\"\n                headCells={headCells}\n                setValue={setValue}\n                error={error && error}\n                loading={loading && loading}\n                items={orders && orders}\n                handleOverview={handleOverview}\n                anchor=\"_id\"\n                displayArr={[\"name\", \"qty\", \"price\"]}\n                showUser={true}\n            />\n        </div>\n    )\n}\n\nexport default UsersList\n","import React, { useState, useEffect } from 'react'\nimport { UserProfileContainer, AdminButton } from \"../../../styles/AdminStyles\"\nimport CurrencyFormat from \"react-currency-format\"\nimport { Avatar, Card, CardContent, Divider } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader from \"../../../components/Loaders/LinearLoader\"\nimport { deleteCardOrder, getCardOrderDetails, listCardOrders } from \"../../../redux/actions/cardOrderActions\"\nimport queryString from \"query-string\"\nimport { useLocation } from \"react-router-dom\"\nimport MessageModal from \"../../../components/Utils/MessageModal\"\n\nconst CardOrderDetails = ({ setValue }) => {\n    const [deletePrompt, setDeletePrompt] = useState(false)\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const { orderId } = queryString.parse(location.search)\n\n    useEffect(() => {\n        if (orderId) {\n            dispatch(getCardOrderDetails(orderId))\n        }\n\n    }, [dispatch, orderId])\n\n    const { userInfo } = useSelector(state => state.userLogin)\n    const { loading, error, order } = useSelector(state => state.cardOrderDetails)\n\n    const handleOrderDelete = () => {\n        dispatch(deleteCardOrder(orderId))\n        setDeletePrompt(false)\n        dispatch(listCardOrders())\n        setValue(0)\n    }\n\n    return (\n        <UserProfileContainer>\n            {\n                loading ? <Loader />\n                    : error ? error\n                        :\n                        order ?\n                            <React.Fragment>\n                                <Card className=\"card__image\">\n                                    <CardContent>\n                                        <Avatar className=\"profile_pic\"\n                                            src={\n                                                order.orderItems && (order.orderItems.image\n                                                    || `/${order.orderItems.image}`)}\n                                        />\n\n                                    </CardContent>\n                                </Card>\n                                <Card className=\"card__content\">\n                                    <CardContent>\n                                        <div className=\"heading\">\n                                            <h2>{order.orderItems && order.orderItems.name}</h2>\n                                            <div>\n                                                <span>Amount:</span>\n                                                <CurrencyFormat value={order.orderItems && order.orderItems.price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'₦'}\n                                                    renderText={value => <h4>{value}</h4>}\n                                                />\n                                            </div>\n                                        </div>\n                                        <Divider />\n                                        <div className=\"contents\">\n                                            <div>\n                                                <span>Card ID:</span>\n                                                <span>{order.orderItems && order.orderItems.card}</span>\n                                            </div>\n                                            <div>\n                                                <span>Qty: </span>\n                                                <span>{order.orderItems && order.orderItems.qty}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment status: </span>\n                                                <span style={{ color: order.isPaid ? 'green' : 'red' }}\n                                                >{order.isPaid ? \"Paid\" : \"Not Paid\"}</span>\n                                            </div>\n                                            <div>\n                                                <span>Delivered status: </span>\n                                                <span style={{ color: order.isDelivered ? 'green' : 'red' }}\n                                                >{order.isDelivered ? \"Delivered\" : \"Not Delivered\"}</span>\n                                            </div>\n                                            <div>\n                                                <span>Paid At:</span>\n                                                <span>{new Date(order.paidAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Delivered At:</span>\n                                                <span>{new Date(order.deliveredAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Created on:</span>\n                                                <span>{new Date(order.createdAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Last updated:</span>\n                                                <span>{new Date(order.updatedAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment method:</span>\n                                                <span>{order.paymentMethod}</span>\n                                            </div>\n                                            {\n                                                order.paymentResult &&\n                                                <>\n                                                    <div>\n                                                        <span>Payment ID:</span>\n                                                        <span>{order.paymentResult.id}</span>\n                                                    </div>\n                                                    <div>\n                                                        <span>Payment Status:</span>\n                                                        <span>{order.paymentResult.status}</span>\n                                                    </div>\n                                                    <div>\n                                                        <span>Payment Email:</span>\n                                                        <span>{order.paymentResult.email}</span>\n                                                    </div>\n                                                    <div className=\"fullwidth\">\n                                                        {\n                                                            order.purchasedItems &&\n                                                            order.purchasedItems.map((item) => (\n                                                                (\n                                                                    <div className=\"embossitem\" key={item._id}>\n                                                                        {\n                                                                            item.pin &&\n                                                                            <div>\n                                                                                <span>PIN: </span>\n                                                                                <span>{item.pin}</span>\n                                                                            </div>\n                                                                        }\n                                                                        {\n                                                                            item.token &&\n                                                                            <div>\n                                                                                <span>Token: </span>\n                                                                                <span>{item.token}</span>\n                                                                            </div>\n                                                                        }\n                                                                        {\n                                                                            item.serialNo &&\n                                                                            <div>\n                                                                                <span>Serial Number: </span>\n                                                                                <span>{item.serialNo}</span>\n                                                                            </div>\n                                                                        }\n                                                                    </div>\n                                                                )\n                                                            ))\n                                                        }\n                                                    </div>\n                                                </>\n                                            }\n\n\n\n                                        </div>\n\n                                        <Divider />\n                                        {\n                                            userInfo.isAdmin &&\n                                            <div className=\"actions\">\n                                                <AdminButton onClick={() => setDeletePrompt(true)}>Delete Order</AdminButton>\n                                            </div>\n                                        }\n\n                                    </CardContent>\n                                </Card>\n\n                                <MessageModal\n                                    open={deletePrompt}\n                                    setOpen={setDeletePrompt}\n                                    caption={`Delete this order`}\n                                    message={\n                                        <div className='delete'>\n                                            <h4 className=\"deleteheader\">This action is not reversable</h4>\n                                            <p>Are you sure you want to delete this order</p>\n                                            <p>This will wipe the entire details of this order</p>\n                                            <div className=\"deleteconfirm\">\n                                                <AdminButton onClick={() => setDeletePrompt(false)}>No</AdminButton>\n                                                <AdminButton onClick={handleOrderDelete}>Yes</AdminButton>\n                                            </div>\n                                        </div>\n                                    }\n                                />\n\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any order\n                            </CardContent>\n                            </Card>\n            }\n\n\n        </UserProfileContainer>\n    )\n}\n\nexport default CardOrderDetails\n","import React, { useState } from 'react'\nimport Content from \"../Content\"\nimport CardOrdersList from \"./CardOrdersList\"\nimport CardOrderDetails from \"./CardOrderDetails\"\n\nconst CardOrders = () => {\n    const [value, setValue] = useState(0);\n    const labels = [\"Card Order List\", \"Card Order Details\"]\n\n\n    return (\n        <div>\n            <Content\n                labels={labels}\n                TabContent={[<CardOrdersList setValue={setValue} />,\n                <CardOrderDetails setValue={setValue} />]}\n                value={value}\n                setValue={setValue}\n            />\n        </div>\n    )\n}\n\nexport default CardOrders\n","import React, { useEffect } from 'react'\nimport Content from \"../TableContent\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { listChangeOfCourseOrders } from \"../../../redux/actions/changeOfCourseActions\"\nimport { useHistory } from \"react-router-dom\"\nimport { listServiceByName } from '../../../redux/actions/serviceActions'\n\nconst ChangeOfCourseList = ({ setValue }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const serviceName = 'jamb change of course and institution'\n\n    const headCells = [\n        { id: 'type', numeric: false, disablePadding: true, label: 'Type' },\n        { id: 'price', numeric: true, disablePadding: false, label: 'Cost' },\n        { id: 'user', numeric: true, disablePadding: false, label: 'Customer' },\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date created' },\n    ];\n\n    useEffect(() => {\n        dispatch(listChangeOfCourseOrders())\n        dispatch(listServiceByName(serviceName))\n    }, [dispatch])\n\n    const handleOverview = (id) => {\n        setValue(1)\n        history.push(`/admin/changeofcourse?orderId=${id}`)\n    }\n\n    const { error, loading, orders } = useSelector(state => state.changeOfCourseOrderList)\n\n    return (\n        <div>\n            <Content\n                caption=\"Data correction order list\"\n                headCells={headCells}\n                setValue={setValue}\n                error={error && error}\n                loading={loading && loading}\n                items={orders}\n                handleOverview={handleOverview}\n                anchor=\"_id\"\n                showUser={true}\n                showCost={true}\n                displayArr={[\"type\"]}\n            />\n\n\n\n        </div>\n    )\n}\n\nexport default ChangeOfCourseList\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Person as PersonIcon, Message as MessageIcon } from '@material-ui/icons'\nimport { Input, FormControl } from '@material-ui/core'\nimport { TextareaAutosize, InputLabel, InputAdornment } from '@material-ui/core'\nimport { UserProfileContainer, AdminButton, AdminButtonAlt, AdminButtonPro, AdminHeader } from \"../../../styles/AdminStyles\"\nimport { colors } from \"../../../styles/breakpoints\"\nimport CurrencyFormat from \"react-currency-format\"\nimport { Card, CardContent, Divider } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader from \"../../../components/Loaders/LinearLoader\"\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport queryString from \"query-string\"\nimport { useLocation } from \"react-router-dom\"\nimport MessageModal from \"../../../components/Utils/MessageModal\"\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\n\nimport {\n    adminChangeOfCourseUpload,\n    getChangeOfCourseOrderDetailsById,\n    deleteChangeOfCourseOrder,\n    listChangeOfCourseOrders\n} from '../../../redux/actions/changeOfCourseActions';\nimport { emailAUser } from '../../../redux/actions/userActions';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\n\nconst ChangeOfCourseDetails = ({ setValue }) => {\n    const classes = useStyles();\n\n    const [deletePrompt, setDeletePrompt] = useState(false)\n    const [subject, setSubject] = useState(\"\")\n    const [emailBody, setEmailBody] = useState(\"\")\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const { orderId } = queryString.parse(location.search)\n\n    useEffect(() => {\n        if (orderId) {\n            dispatch(getChangeOfCourseOrderDetailsById(orderId))\n        }\n    }, [dispatch, orderId])\n\n    const [upload, setUpload] = useState({\n        open: false,\n        files: []\n    })\n\n    const { userInfo } = useSelector(state => state.userLogin)\n\n    const changeOfCourseOrderDetails = useSelector(state => state.changeOfCourseOrderDetails)\n    const { loading, error, order } = changeOfCourseOrderDetails\n\n    const userEmail = useSelector(state => state.userEmail)\n    const { loading: emailLoading, message } = userEmail\n\n    const handleMessageSend = (e) => {\n        e.preventDefault()\n        dispatch(emailAUser(order.user._id, { subject, emailBody }))\n    }\n\n    const handleFileSave = (files) => {\n        setUpload({ files: files, open: false })\n        const formData = new FormData()\n        formData.append('document', files[0])\n        formData.append('email', order.user.email)\n        dispatch(adminChangeOfCourseUpload(orderId, formData))\n        dispatch(getChangeOfCourseOrderDetailsById(orderId))\n    }\n\n    const handleOrderDelete = () => {\n        dispatch(deleteChangeOfCourseOrder(orderId))\n        dispatch(listChangeOfCourseOrders())\n        setValue(0)\n    }\n\n    return (\n        <UserProfileContainer>\n\n            {\n                loading ? <Loader />\n                    : error ? error\n                        :\n                        order ?\n                            <React.Fragment>\n                                <Card className=\"card__image\">\n                                    <CardContent>\n                                        {\n\n                                            order.admin_upload &&\n                                            <img src={order.admin_upload.image}\n                                                alt=\"admin upload\">\n                                            </img>\n                                        }\n\n                                        <div>\n                                            <AdminButtonAlt onClick={() => setUpload({ ...upload, open: true })}>\n                                                <PhotoCameraIcon />Upload Result</AdminButtonAlt>\n                                            <DropzoneDialog\n                                                open={upload.open}\n                                                filesLimit={1}\n                                                clearOnUnmount={false}\n                                                // onChange={(files) => console.log('Files:', files)}\n                                                onSave={handleFileSave}\n                                                submitButtonText=\"Add image\"\n                                                acceptedFiles={['image/jpeg', 'image/png']}\n                                                showPreviews={true}\n                                                maxFileSize={1000000}\n                                                onClose={() => setUpload({ ...upload, open: false })}\n                                            />\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                                <Card className=\"card__content\">\n                                    <CardContent>\n                                        <div className=\"heading\">\n                                            <h2>{order.user && order.user.name}</h2>\n                                            <div>\n                                                <span>Balance:</span>\n                                                <CurrencyFormat value={order.price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'₦'}\n                                                    renderText={value => <h4>{value}</h4>}\n                                                />\n                                            </div>\n                                        </div>\n                                        <Divider />\n                                        <div className=\"contents\">\n                                            <div>\n                                                <span>Candidate's name:</span>\n                                                <span>{order.orderItems && order.orderItems.fullName}</span>\n                                            </div>\n                                            <div>\n                                                <span>Candidate's OTP:</span>\n                                                <span>{order.orderItems && order.orderItems.otp}</span>\n                                            </div>\n                                            <div>\n                                                <span>Candidate's Profile Code:</span>\n                                                <span>{order.orderItems && order.orderItems.profileCode}</span>\n                                            </div>\n                                            <div>\n                                                <span>Candidate's regNo:</span>\n                                                <span>{order.orderItems && order.orderItems.regNo}</span>\n                                            </div>\n                                            <div>\n                                                <span>Candidate's Order Type:</span>\n                                                <span>{order.orderItems && order.orderItems.type}</span>\n                                            </div>\n\n                                            <div className=\"fullwidth\">\n                                                {\n                                                    order.orderItems &&\n                                                    order.orderItems.choices &&\n                                                    order.orderItems.choices.map((choice, index) => (\n                                                        choice && (\n                                                            <div className=\"embossitem\" key={choice._id}>\n                                                                <div>\n                                                                    <span>Course {index + 1}: </span>\n                                                                    <span>{choice.course}</span>\n                                                                </div>\n                                                                <div>\n                                                                    <span>Institution {index + 1}: </span>\n                                                                    <span>{choice.institution}</span>\n                                                                </div>\n                                                                <div>\n                                                                    <span>Programme {index + 1}: </span>\n                                                                    <span>{choice.preferredProgramme}</span>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    ))\n                                                }\n                                            </div>\n                                            <div>\n                                                <span>Paid on:</span>\n                                                <span>{new Date(order.paidAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment method:</span>\n                                                <span>{order.paymentMethod}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment ID:</span>\n                                                <span>{order.paymentResult && order.paymentResult.id}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Email:</span>\n                                                <span>{order.paymentResult && order.paymentResult.email}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Status:</span>\n                                                <span>{order.paymentResult && order.paymentResult.status}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Created on:</span>\n                                                <span>{new Date(order.createdAt).toDateString()}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Last update on:</span>\n                                                <span>{new Date(order.updatedAt).toDateString()}</span>\n                                            </div>\n\n                                        </div>\n\n                                        <Divider />\n                                        {\n                                            userInfo.isAdmin &&\n                                            <div className=\"actions\">\n                                                <AdminButton onClick={() => setDeletePrompt(true)}>Delete Order</AdminButton>\n                                            </div>\n                                        }\n\n                                    </CardContent>\n                                </Card>\n\n\n                                <form className=\"messagecontainer\" onSubmit={handleMessageSend}>\n                                    {/* Send message to user */}\n\n                                    {\n                                        message &&\n                                        <AdminHeader>\n                                            <Grid item xs>\n                                                <Typography className=\"message\" variant=\"span\" component=\"p\">\n                                                    {message}\n                                                </Typography>\n                                            </Grid>\n                                        </AdminHeader>\n\n                                    }\n\n                                    {\n                                        emailLoading ? <Loader />\n                                            :\n                                            <Card className=\"card__content\">\n                                                <CardContent>\n                                                    <div className=\"heading\">\n                                                        <h2>Send message to {order && order.user && order.user.name}</h2>\n                                                    </div>\n                                                    <Divider />\n                                                    <div className=\"contents\">\n                                                        <div className=\"fullwidth\">\n                                                            <FormControl fullWidth className={classes.formControl}>\n                                                                <InputLabel htmlFor=\"standard-adornment-name\">Subject</InputLabel>\n                                                                <Input\n                                                                    id=\"standard-adornment-name\"\n                                                                    value={subject}\n                                                                    required\n                                                                    onChange={(e) => setSubject(e.target.value)}\n                                                                    startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                                />\n                                                            </FormControl>\n                                                        </div>\n\n                                                        <div className=\"fullwidth\">\n                                                            <FormControl className={classes.formControl}>\n                                                                <TextareaAutosize\n                                                                    aria-label=\"minimum height\"\n                                                                    onChange={e => setEmailBody(e.target.value)}\n                                                                    value={emailBody}\n                                                                    rowsMin={5}\n                                                                    required\n                                                                    startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                                                                    placeholder=\"Additional Information\" />\n                                                            </FormControl>\n                                                        </div>\n\n                                                    </div>\n\n                                                    <Divider />\n                                                    <div className=\"actions\">\n\n                                                        <AdminButtonPro\n                                                            type=\"submit\"\n                                                            color={colors.goldish}\n                                                        >Send message</AdminButtonPro>\n                                                    </div>\n\n                                                </CardContent>\n                                            </Card>\n                                    }\n\n                                </form>\n\n\n\n                                <MessageModal\n                                    open={deletePrompt}\n                                    setOpen={setDeletePrompt}\n                                    caption={`Delete ${order && order.user && order.user.name}'s order`}\n                                    message={\n                                        <div className='delete'>\n                                            <h4 className=\"deleteheader\">This action is not reversable</h4>\n                                            <p>Are you sure you want to delete {order && order.user && order.user.name}'s order?</p>\n                                            <p>This will also delete the pin, serial no and token</p>\n                                            <div className=\"deleteconfirm\">\n                                                <AdminButton onClick={() => setDeletePrompt(false)}>No</AdminButton>\n                                                <AdminButton onClick={handleOrderDelete}>Yes</AdminButton>\n                                            </div>\n                                        </div>\n                                    }\n                                />\n\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any user\n                            </CardContent>\n                            </Card>\n            }\n\n\n        </UserProfileContainer>\n    )\n}\n\nexport default ChangeOfCourseDetails\n","import React, { useState } from 'react'\nimport Content from \"../Content\"\nimport ChangeOfCourseList from \"./ChangeOfCourseList\"\nimport ChangeOfCourseDetails from \"./ChangeOfCourseDetails\"\n\nconst CardOrders = () => {\n    const [value, setValue] = useState(0);\n    const labels = [\"Data Correction Order List\", \"Data Correction Order Details\"]\n\n    return (\n        <div>\n            <Content\n                labels={labels}\n                TabContent={\n                    [<ChangeOfCourseList setValue={setValue} />,\n                    <ChangeOfCourseDetails setValue={setValue} />\n                    ]}\n                value={value}\n                setValue={setValue}\n            />\n\n\n        </div>\n    )\n}\n\nexport default CardOrders\n","import React, { useEffect } from 'react'\nimport Content from \"../TableContent\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { listOlevelUploadOrders } from '../../../redux/actions/oLevelResultUploadActions'\n\nconst OLevelUploadList = ({ setValue }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const headCells = [\n        { id: 'type', numeric: false, disablePadding: true, label: 'Type' },\n        { id: 'price', numeric: true, disablePadding: false, label: 'Cost' },\n        { id: 'user', numeric: true, disablePadding: false, label: 'Customer' },\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date created' },\n    ];\n\n    useEffect(() => {\n        dispatch(listOlevelUploadOrders())\n    }, [dispatch])\n\n    const handleOverview = (id) => {\n        setValue(1)\n        history.push(`/admin/olevelupload?orderId=${id}`)\n    }\n\n    const { error, loading, orders } = useSelector(state => state.oLevelUploadOrderList)\n\n\n    return (\n        <div>\n            <Content\n                caption=\"O Level Upload Order List\"\n                headCells={headCells}\n                setValue={setValue}\n                error={error && error}\n                loading={loading && loading}\n                items={orders}\n                handleOverview={handleOverview}\n                anchor=\"_id\"\n                showUser={true}\n                showCost={true}\n                displayArr={[\"type\"]}\n            />\n\n        </div>\n    )\n}\n\nexport default OLevelUploadList\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Person as PersonIcon, Message as MessageIcon } from '@material-ui/icons'\nimport { Input, FormControl } from '@material-ui/core'\nimport { TextareaAutosize, InputLabel, InputAdornment } from '@material-ui/core'\nimport { UserProfileContainer, AdminButton, AdminButtonAlt, AdminButtonPro, AdminHeader } from \"../../../styles/AdminStyles\"\nimport { colors } from \"../../../styles/breakpoints\"\nimport CurrencyFormat from \"react-currency-format\"\nimport { Card, CardContent, Divider } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader from \"../../../components/Loaders/LinearLoader\"\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport queryString from \"query-string\"\nimport { useLocation } from \"react-router-dom\"\nimport MessageModal from \"../../../components/Utils/MessageModal\"\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\n\nimport {\n    adminOlevelFileUpload,\n    getOlevelUploadOrderDetailsById,\n    deleteOlevelUploadOrder,\n    listOlevelUploadOrders\n} from '../../../redux/actions/oLevelResultUploadActions';\nimport { emailAUser } from '../../../redux/actions/userActions';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\n\nconst OLevelUploadDetails = ({ setValue }) => {\n    const classes = useStyles();\n\n    const [deletePrompt, setDeletePrompt] = useState(false)\n    const [subject, setSubject] = useState(\"\")\n    const [emailBody, setEmailBody] = useState(\"\")\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const { orderId } = queryString.parse(location.search)\n\n    useEffect(() => {\n        if (orderId) {\n            dispatch(getOlevelUploadOrderDetailsById(orderId))\n        }\n    }, [dispatch, orderId])\n\n    const [upload, setUpload] = useState({\n        open: false,\n        files: []\n    })\n\n    const { userInfo } = useSelector(state => state.userLogin)\n\n    const oLevelUploadOrderDetails = useSelector(state => state.oLevelUploadOrderDetails)\n    const { loading, error, order } = oLevelUploadOrderDetails\n\n    const userEmail = useSelector(state => state.userEmail)\n    const { loading: emailLoading, message } = userEmail\n\n    const handleMessageSend = (e) => {\n        e.preventDefault()\n        dispatch(emailAUser(order.user._id, { subject, emailBody }))\n    }\n\n    const handleFileSave = (files) => {\n        setUpload({ files: files, open: false })\n        const formData = new FormData()\n        formData.append('document', files[0])\n        dispatch(adminOlevelFileUpload(orderId, formData))\n\n    }\n\n    const handleOrderDelete = () => {\n        dispatch(deleteOlevelUploadOrder(orderId))\n        dispatch(listOlevelUploadOrders())\n        setValue(0)\n    }\n\n    console.log(order)\n\n    return (\n        <UserProfileContainer>\n            {\n                loading ? <Loader />\n                    : error ?\n                        <Card>\n                            <CardContent>\n                                You have not selected any order\n                            </CardContent>\n                        </Card>\n                        :\n                        order ?\n                            <React.Fragment>\n                                <>\n                                    <Card className=\"card__image\">\n                                        <CardContent>\n\n                                            {\n\n                                                order.admin_upload &&\n                                                <img src={order.admin_upload.image}\n                                                    alt=\"admin upload\">\n                                                </img>\n                                            }\n\n                                            <div>\n                                                <AdminButtonAlt onClick={() => setUpload({ ...upload, open: true })}>\n                                                    <PhotoCameraIcon />Upload Result</AdminButtonAlt>\n                                                <DropzoneDialog\n                                                    open={upload.open}\n                                                    filesLimit={1}\n                                                    clearOnUnmount={false}\n                                                    // onChange={(files) => console.log('Files:', files)}\n                                                    onSave={handleFileSave}\n                                                    submitButtonText=\"Add file\"\n                                                    acceptedFiles={['image/jpeg', 'image/png']}\n                                                    showPreviews={true}\n                                                    maxFileSize={1000000}\n                                                    onClose={() => setUpload({ ...upload, open: false })}\n                                                />\n                                            </div>\n                                        </CardContent>\n                                    </Card>\n                                    <Card className=\"card__content\">\n                                        <CardContent>\n                                            <div className=\"heading\">\n                                                <h2>{order.user && order.user.name}</h2>\n                                                <div>\n                                                    <span>Balance:</span>\n                                                    <CurrencyFormat value={order.price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'₦'}\n                                                        renderText={value => <h4>{value}</h4>}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <Divider />\n                                            <div className=\"contents\">\n                                                <div>\n                                                    <span>Candidate's name:</span>\n                                                    <span>{order.orderItems && order.orderItems.name}</span>\n                                                </div>\n\n                                                <div>\n                                                    <span>Candidate's Profile Code:</span>\n                                                    <span>{order.orderItems && order.orderItems.profileCode}</span>\n                                                </div>\n\n                                                <div>\n                                                    <span>Candidate's Order Type:</span>\n                                                    <span>{order.orderItems && order.orderItems.type}</span>\n                                                </div>\n\n                                                <div>\n                                                    <span>Candidate's Order Type:</span>\n                                                    <span>{order.orderItems && order.orderItems.type}</span>\n                                                </div>\n\n                                                <div>\n                                                    <span>School Attended: </span>\n                                                    <span>{order.orderItems\n                                                        && order.orderItems.schoolAttended}</span>\n                                                </div>\n\n                                                <div>\n                                                    <span>School Type: </span>\n                                                    <span>{order.orderItems\n                                                        && order.orderItems.schoolType}</span>\n                                                </div>\n\n                                                <div className=\"fullwidth\">\n                                                    <div className=\"embossitem flexemboss\">\n                                                        {\n                                                            order.orderItems &&\n                                                            order.orderItems.files &&\n                                                            order.orderItems.files.map((file) => (\n                                                                file && (\n                                                                    <div key={file._id}>\n                                                                        <img src={file.image} alt={file.image} />\n                                                                    </div>\n                                                                )\n                                                            ))\n                                                        }\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    <span>Paid on:</span>\n                                                    <span>{new Date(order.paidAt).toDateString()}</span>\n                                                </div>\n                                                <div>\n                                                    <span>Payment method:</span>\n                                                    <span>{order.paymentMethod}</span>\n                                                </div>\n                                                <div>\n                                                    <span>Payment ID:</span>\n                                                    <span>{order.paymentResult && order.paymentResult.id}</span>\n                                                </div>\n                                                <div>\n                                                    <span>Payment Email:</span>\n                                                    <span>{order.paymentResult && order.paymentResult.email}</span>\n                                                </div>\n                                                <div>\n                                                    <span>Payment Status:</span>\n                                                    <span>{order.paymentResult && order.paymentResult.status}</span>\n                                                </div>\n\n                                                <div>\n                                                    <span>Created on:</span>\n                                                    <span>{new Date(order.createdAt).toDateString()}</span>\n                                                </div>\n\n                                                <div>\n                                                    <span>Last update on:</span>\n                                                    <span>{new Date(order.updatedAt).toDateString()}</span>\n                                                </div>\n\n                                                <div className='fullwidth'>\n                                                    {\n                                                        order.orderItems.subjectUpload &&\n                                                        <div className='results'>\n                                                            <h2>Result details</h2>\n                                                            <div className=\"result_item head\">\n                                                                <span>Subjects</span>\n                                                                <span>Grade</span>\n                                                                <span>Exam Number</span>\n                                                                <span>Exam Type</span>\n                                                            </div>\n                                                            {\n                                                                order.orderItems.subjectUpload.map(result => (\n                                                                    <div className=\"result_item\" key={result._id}>\n                                                                        <span>{result.subject}</span>\n                                                                        <span>{result.grade}</span>\n                                                                        <span>{result.examNumber}</span>\n                                                                        <span>{result.examType}</span>\n                                                                    </div>\n                                                                ))\n                                                            }\n                                                        </div>\n                                                    }\n                                                </div>\n\n\n                                            </div>\n\n                                            <Divider />\n                                            {\n                                                userInfo.isAdmin && <div className=\"actions\">\n                                                    <AdminButton onClick={() => setDeletePrompt(true)}>Delete Order</AdminButton>\n                                                </div>\n                                            }\n\n                                        </CardContent>\n                                    </Card>\n                                </>\n\n\n                                <form className=\"messagecontainer\" onSubmit={handleMessageSend}>\n                                    {/* Send message to user */}\n\n                                    {\n                                        message &&\n                                        <AdminHeader>\n                                            <Grid item xs>\n                                                <Typography className=\"message\" variant=\"span\" component=\"p\">\n                                                    {message}\n                                                </Typography>\n                                            </Grid>\n                                        </AdminHeader>\n\n                                    }\n\n                                    {\n                                        emailLoading ? <Loader />\n                                            :\n                                            <Card className=\"card__content\">\n                                                <CardContent>\n                                                    <div className=\"heading\">\n                                                        <h2>Send message to {order && order.user && order.user.name}</h2>\n                                                    </div>\n                                                    <Divider />\n                                                    <div className=\"contents\">\n                                                        <div className=\"fullwidth\">\n                                                            <FormControl fullWidth className={classes.formControl}>\n                                                                <InputLabel htmlFor=\"standard-adornment-name\">Subject</InputLabel>\n                                                                <Input\n                                                                    id=\"standard-adornment-name\"\n                                                                    value={subject}\n                                                                    required\n                                                                    onChange={(e) => setSubject(e.target.value)}\n                                                                    startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                                />\n                                                            </FormControl>\n                                                        </div>\n\n                                                        <div className=\"fullwidth\">\n                                                            <FormControl className={classes.formControl}>\n                                                                <TextareaAutosize\n                                                                    required\n                                                                    aria-label=\"minimum height\"\n                                                                    onChange={e => setEmailBody(e.target.value)}\n                                                                    value={emailBody}\n                                                                    rowsMin={5}\n                                                                    startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                                                                    placeholder=\"Additional Information\" />\n                                                            </FormControl>\n                                                        </div>\n\n                                                    </div>\n\n                                                    <Divider />\n                                                    <div className=\"actions\">\n\n                                                        <AdminButtonPro\n                                                            type=\"submit\"\n                                                            color={colors.goldish}\n                                                        >Send message</AdminButtonPro>\n                                                    </div>\n\n                                                </CardContent>\n                                            </Card>\n                                    }\n\n                                </form>\n\n\n\n                                <MessageModal\n                                    open={deletePrompt}\n                                    setOpen={setDeletePrompt}\n                                    caption={`Delete ${order && order.user && order.user.name}'s order`}\n                                    message={\n                                        <div className='delete'>\n                                            <h4 className=\"deleteheader\">This action is not reversable</h4>\n                                            <p>Are you sure you want to delete {order && order.user && order.user.name}'s order?</p>\n                                            <p>This will also delete the pin, serial no and token</p>\n                                            <div className=\"deleteconfirm\">\n                                                <AdminButton onClick={() => setDeletePrompt(false)}>No</AdminButton>\n                                                <AdminButton onClick={handleOrderDelete}>Yes</AdminButton>\n                                            </div>\n                                        </div>\n                                    }\n                                />\n\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any order\n                            </CardContent>\n                            </Card>\n            }\n        </UserProfileContainer>\n    )\n}\n\nexport default OLevelUploadDetails\n","import React, { useState } from 'react'\nimport Content from \"../Content\"\nimport OLevelUploadList from \"./OLevelUploadList\"\nimport OLevelUploadDetails from \"./OLevelUploadDetails\"\n\nconst CardOrders = () => {\n    const [value, setValue] = useState(0);\n    const labels = [\"O Level Upload List\", \"O Level Upload Details\"]\n\n\n    return (\n        <div>\n            <Content\n                labels={labels}\n                TabContent={\n                    [<OLevelUploadList setValue={setValue} />,\n                    <OLevelUploadDetails setValue={setValue} />\n                    ]}\n                value={value}\n                setValue={setValue}\n            />\n        </div>\n    )\n}\n\nexport default CardOrders\n","import React, { useEffect } from 'react'\nimport Content from \"../TableContent\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { listJambPasswordResetOrders } from '../../../redux/actions/jambPasswordResetActions'\n\nconst OLevelUploadList = ({ setValue }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const headCells = [\n        { id: 'name', numeric: false, disablePadding: false, label: \"Candidate's name\" },\n        { id: 'price', numeric: true, disablePadding: false, label: 'Cost' },\n        { id: 'user', numeric: true, disablePadding: false, label: 'Customer' },\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date created' },\n    ];\n\n    useEffect(() => {\n        dispatch(listJambPasswordResetOrders())\n    }, [dispatch])\n\n    const handleOverview = (id) => {\n        setValue(1)\n        history.push(`/admin/jambpasswordreset?orderId=${id}`)\n    }\n\n    const { error, loading, orders } = useSelector(state => state.jambPasswordResetOrderList)\n\n    return (\n        <div>\n            <Content\n                caption=\"Jamb Password Reset Order List\"\n                headCells={headCells}\n                setValue={setValue}\n                error={error && error}\n                loading={loading && loading}\n                items={orders}\n                handleOverview={handleOverview}\n                anchor=\"_id\"\n                showUser={true}\n                showCost={true}\n                displayArr={[\"name\"]}\n            />\n\n        </div>\n    )\n}\n\nexport default OLevelUploadList\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Person as PersonIcon, Message as MessageIcon } from '@material-ui/icons'\nimport { Input, FormControl } from '@material-ui/core'\nimport { TextareaAutosize, InputLabel, InputAdornment } from '@material-ui/core'\nimport { UserProfileContainer, AdminButton, AdminButtonPro, AdminHeader } from \"../../../styles/AdminStyles\"\nimport { colors } from \"../../../styles/breakpoints\"\nimport CurrencyFormat from \"react-currency-format\"\nimport { Card, CardContent, Divider } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader from \"../../../components/Loaders/LinearLoader\"\nimport queryString from \"query-string\"\nimport { useLocation } from \"react-router-dom\"\nimport MessageModal from \"../../../components/Utils/MessageModal\"\n\nimport {\n\n    getJambPasswordResetOrderDetailsById,\n    deleteJambPasswordResetOrder,\n    listJambPasswordResetOrders\n} from '../../../redux/actions/jambPasswordResetActions';\nimport { emailAUser } from '../../../redux/actions/userActions';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\n\nconst OLevelUploadDetails = ({ setValue }) => {\n    const classes = useStyles();\n\n    const [deletePrompt, setDeletePrompt] = useState(false)\n    const [subject, setSubject] = useState(\"\")\n    const [emailBody, setEmailBody] = useState(\"\")\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const { orderId } = queryString.parse(location.search)\n\n    useEffect(() => {\n        if (orderId) {\n            dispatch(getJambPasswordResetOrderDetailsById(orderId))\n        }\n    }, [dispatch, orderId])\n\n    const { userInfo } = useSelector(state => state.userLogin)\n\n    const jambPasswordResetOrderDetails = useSelector(state => state.jambPasswordResetOrderDetails)\n    const { loading, error, order } = jambPasswordResetOrderDetails\n\n    const userEmail = useSelector(state => state.userEmail)\n    const { loading: emailLoading, message } = userEmail\n\n    const handleMessageSend = (e) => {\n        e.preventDefault()\n        dispatch(emailAUser(order.user._id, { subject, emailBody }))\n    }\n\n\n    const handleOrderDelete = () => {\n        dispatch(deleteJambPasswordResetOrder(orderId))\n        dispatch(listJambPasswordResetOrders())\n        setValue(0)\n    }\n\n    return (\n        <UserProfileContainer>\n\n            {\n                loading ? <Loader />\n                    : error ? error\n                        :\n                        order ?\n                            <React.Fragment>\n\n                                <Card className=\"card__content\">\n                                    <CardContent>\n                                        <div className=\"heading\">\n                                            <h2>{order.user && order.user.name}</h2>\n                                            <div>\n                                                <span>Balance:</span>\n                                                <CurrencyFormat value={order.price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'₦'}\n                                                    renderText={value => <h4>{value}</h4>}\n                                                />\n                                            </div>\n                                        </div>\n                                        <Divider />\n                                        <div className=\"contents\">\n                                            <div>\n                                                <span>Candidate's name:</span>\n                                                <span>{order.orderItems && order.orderItems.name}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Candidate's Email:</span>\n                                                <span>{order.orderItems && order.orderItems.email}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Candidate's Date of Birth:</span>\n                                                <span>{order.orderItems && order.orderItems.dateOfBirth}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Candidate's New Password</span>\n                                                <span>{order.orderItems && order.orderItems.newPassword}</span>\n                                            </div>\n                                            <div className=\"fullwidth\">\n                                                <Divider />\n                                            </div>\n                                            <div>\n                                                <span>Paid on:</span>\n                                                <span>{new Date(order.paidAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment method:</span>\n                                                <span>{order.paymentMethod}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment ID:</span>\n                                                <span>{order.paymentResult && order.paymentResult.id}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Email:</span>\n                                                <span>{order.paymentResult && order.paymentResult.email}</span>\n                                            </div>\n                                            <div>\n                                                <span>Payment Status:</span>\n                                                <span>{order.paymentResult && order.paymentResult.status}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Created on:</span>\n                                                <span>{new Date(order.createdAt).toDateString()}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>Last update on:</span>\n                                                <span>{new Date(order.updatedAt).toDateString()}</span>\n                                            </div>\n\n                                        </div>\n\n                                        <Divider />\n                                        {\n                                            userInfo.isAdmin &&\n                                            <div className=\"actions\">\n                                                <AdminButton onClick={() => setDeletePrompt(true)}>Delete Order</AdminButton>\n                                            </div>\n                                        }\n\n                                    </CardContent>\n                                </Card>\n\n\n                                <form className=\"messagecontainer\" onSubmit={handleMessageSend}>\n                                    {/* Send message to user */}\n\n                                    {\n                                        message &&\n                                        <AdminHeader>\n                                            <Grid item xs>\n                                                <Typography className=\"message\" variant=\"span\" component=\"p\">\n                                                    {message}\n                                                </Typography>\n                                            </Grid>\n                                        </AdminHeader>\n\n                                    }\n\n                                    {\n                                        emailLoading ? <Loader />\n                                            :\n                                            <Card className=\"card__content\">\n                                                <CardContent>\n                                                    <div className=\"heading\">\n                                                        <h2>Send message to {order && order.user && order.user.name}</h2>\n                                                    </div>\n                                                    <Divider />\n                                                    <div className=\"contents\">\n                                                        <div className=\"fullwidth\">\n                                                            <FormControl fullWidth className={classes.formControl}>\n                                                                <InputLabel htmlFor=\"standard-adornment-name\">Subject</InputLabel>\n                                                                <Input\n                                                                    id=\"standard-adornment-name\"\n                                                                    value={subject}\n                                                                    required\n                                                                    onChange={(e) => setSubject(e.target.value)}\n                                                                    startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                                />\n                                                            </FormControl>\n                                                        </div>\n\n                                                        <div className=\"fullwidth\">\n                                                            <FormControl className={classes.formControl}>\n                                                                <TextareaAutosize\n                                                                    aria-label=\"minimum height\"\n                                                                    onChange={e => setEmailBody(e.target.value)}\n                                                                    value={emailBody}\n                                                                    rowsMin={5}\n                                                                    required\n                                                                    startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                                                                    placeholder=\"Additional Information\" />\n                                                            </FormControl>\n                                                        </div>\n\n                                                    </div>\n\n                                                    <Divider />\n                                                    <div className=\"actions\">\n\n                                                        <AdminButtonPro\n                                                            type=\"submit\"\n                                                            color={colors.goldish}\n                                                        >Send message</AdminButtonPro>\n                                                    </div>\n\n                                                </CardContent>\n                                            </Card>\n                                    }\n\n                                </form>\n\n\n\n                                <MessageModal\n                                    open={deletePrompt}\n                                    setOpen={setDeletePrompt}\n                                    caption={`Delete ${order && order.user && order.user.name}'s order`}\n                                    message={\n                                        <div className='delete'>\n                                            <h4 className=\"deleteheader\">This action is not reversable</h4>\n                                            <p>Are you sure you want to delete {order && order.user && order.user.name}'s order?</p>\n                                            <p>This will also delete the pin, serial no and token</p>\n                                            <div className=\"deleteconfirm\">\n                                                <AdminButton onClick={() => setDeletePrompt(false)}>No</AdminButton>\n                                                <AdminButton onClick={handleOrderDelete}>Yes</AdminButton>\n                                            </div>\n                                        </div>\n                                    }\n                                />\n\n\n                            </React.Fragment>\n                            :\n                            <Card>\n                                <CardContent>\n                                    You have not selected any user\n                            </CardContent>\n                            </Card>\n            }\n\n\n        </UserProfileContainer>\n    )\n}\n\nexport default OLevelUploadDetails\n","import React, { useState } from 'react'\nimport Content from \"../Content\"\nimport JambPasswordResetList from \"./JambPasswordResetList\"\nimport JambPasswordResetDetails from \"./JambPasswordResetDetails\"\n\nconst CardOrders = () => {\n    const [value, setValue] = useState(0);\n    const labels = [\"Password Reset List\", \"Password Reset Details\"]\n\n    return (\n        <div>\n            <Content\n                labels={labels}\n                TabContent={\n                    [<JambPasswordResetList setValue={setValue} />,\n                    <JambPasswordResetDetails setValue={setValue} />\n                    ]}\n                value={value}\n                setValue={setValue}\n            />\n        </div>\n    )\n}\n\nexport default CardOrders\n","import React, { useState, useEffect } from 'react'\nimport { Card, CardContent, FormControl, InputAdornment, TextField } from '@material-ui/core';\nimport { AdminPrice, AdminButtonAlt } from '../../../styles/AdminStyles';\nimport CurrencyFormat from 'react-currency-format'\nimport { listServiceDetailsById, listServices, updateService } from '../../../redux/actions/serviceActions'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Loader from \"../../../components/Loaders/SimpleLoader\"\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Services = ({ value }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const [price, setPrice] = useState(0)\n    const [serviceValue, setServiceValue] = useState(\"\")\n\n\n\n    const { loading, error, services } = useSelector(state => state.serviceList)\n    const { loading: updateLoading, error: updateError } = useSelector(state => state.serviceUpdate)\n    const { service } = useSelector(state => state.serviceDetails)\n\n\n    useEffect(() => {\n        dispatch(listServices())\n        if (service) {\n            setPrice(service.cost)\n        }\n    }, [dispatch, service])\n\n    const handleServiceUpdate = () => {\n        const servicesToUpdate = services.filter(service => service._id === serviceValue)\n        const [serviceToUpdate] = servicesToUpdate\n        const newService = { ...serviceToUpdate, cost: price }\n        dispatch(updateService(newService))\n    }\n\n    const handleServiceChange = (e) => {\n        const newService = e.target.value\n        setServiceValue(newService)\n        dispatch(listServiceDetailsById(newService))\n    }\n\n    return (\n        <div>\n            {\n                loading ? <Loader />\n                    :\n                    updateLoading ? <Loader />\n                        :\n                        error ? error\n                            :\n                            updateError ? updateError\n                                :\n                                <AdminPrice >\n                                    <Card >\n                                        <CardContent>\n                                            <h3>Set Service Cost</h3>\n\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <TextField\n                                                    select\n\n                                                    label=\"Services\"\n                                                    value={serviceValue}\n                                                    onChange={handleServiceChange}\n                                                    SelectProps={{\n                                                        native: true\n                                                    }}\n                                                    InputProps={{\n                                                        startAdornment: <InputAdornment position=\"start\"><LoyaltyIcon /> </InputAdornment>\n                                                    }}\n                                                    helperText=\"Please select the service\"\n                                                >\n                                                    <>\n                                                        <option value=\"\" ></option>\n                                                        {\n                                                            services && (\n                                                                services.map(service => (\n                                                                    <option key={service._id} value={service._id}>{service.name}</option>\n                                                                ))\n                                                            )\n                                                        }\n\n                                                    </>\n                                                </TextField>\n                                            </FormControl>\n\n                                            <CurrencyFormat value={price} thousandSeparator={true} prefix={'₦'}\n                                                onValueChange={(values) => {\n                                                    const { value } = values;\n                                                    setPrice(value)\n                                                }}\n                                            />\n                                            <AdminButtonAlt onClick={handleServiceUpdate}>Save</AdminButtonAlt>\n                                        </CardContent>\n                                    </Card>\n                                </AdminPrice>\n            }\n\n        </div>\n    )\n}\n\nexport default Services\n","export const SCHOOL_CREATE_REQUEST = \"SCHOOL_CREATE_REQUEST\";\nexport const SCHOOL_CREATE_SUCCESS = \"SCHOOL_CREATE_SUCCESS\";\nexport const SCHOOL_CREATE_FAIL = \"SCHOOL_CREATE_FAIL\";\n\nexport const SCHOOL_UPDATE_REQUEST = \"SCHOOL_UPDATE_REQUEST\";\nexport const SCHOOL_UPDATE_SUCCESS = \"SCHOOL_UPDATE_SUCCESS\";\nexport const SCHOOL_UPDATE_FAIL = \"SCHOOL_UPDATE_FAIL\";\n\nexport const SCHOOL_DELETE_REQUEST = \"SCHOOL_DELETE_REQUEST\";\nexport const SCHOOL_DELETE_SUCCESS = \"SCHOOL_DELETE_SUCCESS\";\nexport const SCHOOL_DELETE_FAIL = \"SCHOOL_DELETE_FAIL\";\n\nexport const SCHOOL_DETAILS_REQUEST = \"SCHOOL_DETAILS_REQUEST\";\nexport const SCHOOL_DETAILS_SUCCESS = \"SCHOOL_DETAILS_SUCCESS\";\nexport const SCHOOL_DETAILS_FAIL = \"SCHOOL_DETAILS_FAIL\";\n\nexport const SCHOOL_BY_PROGRAMME_REQUEST = \"SCHOOL_BY_PROGRAMME_REQUEST\";\nexport const SCHOOL_BY_PROGRAMME_SUCCESS = \"SCHOOL_BY_PROGRAMME_SUCCESS\";\nexport const SCHOOL_BY_PROGRAMME_FAIL = \"SCHOOL_BY_PROGRAMME_FAIL\";\n\nexport const SCHOOL_LIST_REQUEST = \"SCHOOL_LIST_REQUEST\";\nexport const SCHOOL_LIST_SUCCESS = \"SCHOOL_LIST_SUCCESS\";\nexport const SCHOOL_LIST_FAIL = \"SCHOOL_LIST_FAIL\";\n\nexport const COURSE_DELETE_REQUEST = \"COURSE_DELETE_REQUEST\";\nexport const COURSE_DELETE_SUCCESS = \"COURSE_DELETE_SUCCESS\";\nexport const COURSE_DELETE_FAIL = \"COURSE_DELETE_FAIL\";","import axios from 'axios'\nimport {\n  SCHOOL_LIST_REQUEST,\n  SCHOOL_LIST_SUCCESS,\n  SCHOOL_LIST_FAIL,\n\n  SCHOOL_DETAILS_REQUEST,\n  SCHOOL_DETAILS_SUCCESS,\n  SCHOOL_DETAILS_FAIL,\n\n  SCHOOL_CREATE_REQUEST,\n  SCHOOL_CREATE_SUCCESS,\n  SCHOOL_CREATE_FAIL,\n\n  SCHOOL_UPDATE_REQUEST,\n  SCHOOL_UPDATE_SUCCESS,\n  SCHOOL_UPDATE_FAIL,\n\n  SCHOOL_BY_PROGRAMME_REQUEST,\n  SCHOOL_BY_PROGRAMME_SUCCESS,\n  SCHOOL_BY_PROGRAMME_FAIL,\n\n  COURSE_DELETE_REQUEST,\n  COURSE_DELETE_SUCCESS,\n  COURSE_DELETE_FAIL,\n\n} from '../constants/schoolConstants'\nimport { logout } from './userActions'\nimport { setMessage } from './utilActions'\n\nexport const listSchools = () => async (dispatch) => {\n  try {\n    dispatch({ type: SCHOOL_LIST_REQUEST })\n\n    const { data } = await axios.get(`/api/schools`)\n\n    dispatch({\n      type: SCHOOL_LIST_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: SCHOOL_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listSchoolDetailsById = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: SCHOOL_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/schools/${id}`)\n\n    dispatch({\n      type: SCHOOL_DETAILS_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: SCHOOL_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\nexport const listSchoolDetailsByProgramme = (programme) => async (dispatch) => {\n  try {\n    dispatch({ type: SCHOOL_BY_PROGRAMME_REQUEST })\n\n    const { data } = await axios.get(`/api/schools/programme/${programme}`)\n\n    dispatch({\n      type: SCHOOL_BY_PROGRAMME_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: SCHOOL_BY_PROGRAMME_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\nexport const createSchool = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SCHOOL_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/schools/`, {}, config)\n\n    dispatch({\n      type: SCHOOL_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SCHOOL_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateSchool = (school) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SCHOOL_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/schools/${school._id}`, school, config)\n\n    dispatch({\n      type: SCHOOL_UPDATE_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SCHOOL_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\nexport const deleteCourse = (id, courses) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: COURSE_DELETE_REQUEST,\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n\n    const { data } = await axios.put(`/api/schools/${id}/course`, { courses }, config)\n\n    dispatch({\n      type: COURSE_DELETE_SUCCESS,\n      payload: data,\n    })\n    dispatch(setMessage(\"Course removed\"))\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: COURSE_DELETE_FAIL,\n      payload: message,\n    })\n    dispatch(setMessage(message))\n  }\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\n\nexport default function StickyHeadTable({ columns, rows, setValue }) {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const history = useHistory()\n    const { userInfo } = useSelector(state => state.userLogin)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const handleRowClick = (id) => {\n        history.push(`?schoolId=${id}`)\n        userInfo.isAdmin ? setValue(2) : setValue(1)\n    }\n\n    return (\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                            <TableCell align=\"left\" style={{ minWidth: 170 }}>\n                                Created At </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                            return (\n                                <TableRow\n                                    hover\n                                    role=\"checkbox\"\n                                    tabIndex={-1}\n                                    key={row.code}\n                                    style={{ cursor: 'pointer' }}\n                                    onClick={() => handleRowClick(row._id)}\n                                >\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ?\n                                                    column.format(value) : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                    <TableCell align=\"left\" >\n                                        {\n                                            new Date(row.createdAt).toDateString()\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows && rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { listSchools } from '../../../redux/actions/schoolActions'\nimport FixedTable from \"./FixedTable\"\nimport Loader from \"../../../components/Loaders/SimpleLoader\"\nimport { AdminButtonPro, RightAlign } from \"../../../styles/AdminStyles\"\nimport { createSchool } from '../../../redux/actions/schoolActions'\n\nconst Schools = ({ setValue }) => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(listSchools())\n    }, [dispatch])\n\n    const headCells = [\n        { id: 'programme', numeric: false, disablePadding: true, label: 'Programme' },\n        { id: 'institution', numeric: true, disablePadding: false, label: 'Institution' },\n    ];\n    const { loading, error, schools } = useSelector(state => state.schoolList)\n    const { loading: createLoading, error: createError } =\n        useSelector(state => state.schoolCreate)\n\n\n\n    const handleAddNew = () => {\n        dispatch(createSchool())\n        dispatch(listSchools())\n    }\n\n    return (\n        <div>\n            {\n                loading ? <Loader />\n                    :\n                    error ? error\n                        :\n                        createLoading ? <Loader />\n                            :\n                            createError ? createError\n                                :\n                                <FixedTable\n                                    columns={headCells}\n                                    rows={schools && schools.schools}\n                                    setValue={setValue}\n                                />\n\n            }\n\n            <RightAlign >\n                <AdminButtonPro onClick={handleAddNew}>Add a new card</AdminButtonPro>\n            </RightAlign>\n\n        </div>\n    )\n}\n\nexport default Schools\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport queryString from \"query-string\"\nimport { useLocation } from \"react-router-dom\"\nimport { Person as PersonIcon, Message as MessageIcon } from '@material-ui/icons'\nimport { deleteCourse, listSchoolDetailsById, updateSchool } from '../../../redux/actions/schoolActions'\nimport { Card, CardContent, colors, Divider } from '@material-ui/core';\nimport { Input, FormControl } from '@material-ui/core'\nimport { TextareaAutosize, InputLabel, InputAdornment, IconButton } from '@material-ui/core'\nimport { SchoolsOverviewContainer, AdminButton, AdminButtonPro } from \"../../../styles/AdminStyles\"\nimport Loader from \"../../../components/Loaders/SimpleLoader\"\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MessageModal from \"../../../components/Utils/MessageModal\"\nimport { setMessage } from '../../../redux/actions/utilActions';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n        width: '100%'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\n\nconst Courses = ({ value }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const [programme, setProgramme] = useState(\"\")\n    const [institution, setInstitution] = useState(\"\")\n    const [course, setCourse] = useState(\"\")\n    const [courseToDelete, setCourseToDelete] = useState(\"\")\n    const [deletePrompt, setDeletePrompt] = useState(false)\n    const [multiLineCourses, setMultiLineCourses] = useState(\"\")\n\n    const { schoolId } = queryString.parse(location.search)\n\n    useEffect(() => {\n        dispatch(listSchoolDetailsById(schoolId))\n    }, [dispatch, schoolId])\n\n    useEffect(() => {\n        dispatch(listSchoolDetailsById(schoolId))\n    }, [dispatch, schoolId])\n\n    const { loading, error, school } = useSelector(state => state.schoolDetails)\n\n    useEffect(() => {\n        if (school) {\n            setInstitution(school.institution)\n            setProgramme(school.programme)\n        }\n    }, [school])\n\n    const handleSchoolUpdate = e => {\n        e.preventDefault()\n        const newSchool = { ...school, programme: programme, institution: institution, courses: [] }\n        dispatch(updateSchool(newSchool))\n        dispatch(listSchoolDetailsById(schoolId))\n    }\n\n    const handleCourseDelete = (course) => {\n        const newCourses = school.courses.filter(prevCourse => prevCourse !== course)\n        // const newSchool = { ...school, courses: newCourses }\n        dispatch(deleteCourse(schoolId, newCourses))\n        dispatch(listSchoolDetailsById(schoolId))\n        setDeletePrompt(false)\n    }\n\n    const handleCourseAdd = (e) => {\n        e.preventDefault()\n        const newCourses = school.courses.map(prevCourse => prevCourse)\n        if (!newCourses.includes(course)) {\n            const newSchool = { ...school, courses: [course] }\n            dispatch(updateSchool(newSchool))\n            dispatch(listSchoolDetailsById(schoolId))\n            setDeletePrompt(false)\n        } else {\n            dispatch(setMessage(\"Course already exists\"))\n        }\n\n    }\n\n    const handleDeletePrompt = (course) => {\n        setCourseToDelete(course)\n        setDeletePrompt(true)\n    }\n\n    const handleMultipleCoursesAdd = () => {\n        const courses = multiLineCourses.split(\"\\n\")\n\n        const newCourses = school.courses.map(prevCourse => prevCourse)\n        for (let course of courses) {\n            if (newCourses.includes(course)) {\n                dispatch(setMessage(`${course} already exists`))\n                return\n            }\n            if (course === '') {\n                dispatch(setMessage(`White space not allowed! Course cannot be empty.`))\n                return\n            }\n        }\n        const newSchool = { ...school, courses }\n        dispatch(updateSchool(newSchool))\n        dispatch(listSchoolDetailsById(schoolId))\n    }\n\n    return (\n\n        <SchoolsOverviewContainer>\n\n            {\n                loading ? <Loader />\n                    :\n                    error ?\n                        <Card>\n                            <CardContent>\n                                No school selected.\n                            </CardContent>\n                        </Card>\n                        :\n                        school ?\n                            <div>\n                                <Card className=\"card__content\">\n                                    <CardContent>\n                                        <div className=\"heading\">\n\n                                            <h2>{school.institution}</h2>\n                                            <span>{school.programme}</span>\n                                        </div>\n                                        <Divider />\n                                        <form className=\"contents\" onSubmit={handleSchoolUpdate}>\n                                            <div>\n                                                <span>Created on:</span>\n                                                <span>{new Date(school.createdAt).toDateString()}</span>\n                                            </div>\n                                            <div>\n                                                <span>Updated on:</span>\n                                                <span >\n                                                    {new Date(school.updatedAt).toDateString()}</span>\n                                            </div>\n                                            <div className=\"fullwidth\">\n                                                <FormControl fullWidth className={classes.formControl}>\n                                                    <InputLabel htmlFor=\"standard-adornment-programme\">Programme</InputLabel>\n                                                    <Input\n                                                        id=\"standard-adornment-programme\"\n                                                        value={programme}\n                                                        required\n                                                        onChange={(e) => setProgramme(e.target.value)}\n                                                        startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                    />\n                                                </FormControl>\n                                            </div>\n                                            <div className=\"fullwidth\">\n                                                <FormControl fullWidth className={classes.formControl}>\n                                                    <InputLabel htmlFor=\"standard-adornment-institution\">Institution</InputLabel>\n                                                    <Input\n                                                        id=\"standard-adornment-institution\"\n                                                        value={institution}\n                                                        required\n                                                        onChange={(e) => setInstitution(e.target.value)}\n                                                        startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                    />\n                                                </FormControl>\n                                            </div>\n                                            <div className=\"actions\">\n\n                                                <AdminButtonPro\n                                                    color={colors.goldish}\n                                                    type=\"submit\"\n                                                >Save School Details</AdminButtonPro>\n\n                                            </div>\n                                        </form>\n\n                                        <div className=\"courses\">\n                                            <h2>Courses</h2>\n                                            <Divider />\n                                            <div className=\"courseitems\">\n                                                {\n                                                    school.courses &&\n                                                    school.courses.map((course, index) => (\n                                                        <span key={index}>\n                                                            {course}\n                                                            <IconButton onClick={() => handleDeletePrompt(course)}>\n                                                                <ClearIcon fontSize=\"small\" />\n                                                            </IconButton>\n                                                        </span>\n                                                    ))\n                                                }\n                                                <form className=\"addcourse\" onSubmit={handleCourseAdd}>\n                                                    <FormControl fullWidth className={classes.formControl}>\n                                                        <InputLabel htmlFor=\"standard-adornment-course\">Course</InputLabel>\n                                                        <Input\n                                                            id=\"standard-adornment-course\"\n                                                            value={course}\n                                                            required\n                                                            onChange={(e) => setCourse(e.target.value)}\n                                                            startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                                        />\n                                                    </FormControl>\n                                                    <AdminButton type=\"submit\" >\n                                                        Add course\n                                            </AdminButton>\n                                                </form>\n                                            </div>\n                                        </div>\n\n\n                                        <MessageModal\n                                            open={deletePrompt}\n                                            setOpen={setDeletePrompt}\n                                            caption={`Delete course`}\n                                            message={\n                                                <div className='delete'>\n                                                    <p>Are you sure you want to delete {courseToDelete}?</p>\n                                                    <div className=\"deleteconfirm\">\n                                                        <AdminButton onClick={() => setDeletePrompt(false)}>No</AdminButton>\n                                                        <AdminButton onClick={() => handleCourseDelete(courseToDelete)}>Yes</AdminButton>\n                                                    </div>\n                                                </div>\n                                            }\n                                        />\n\n                                    </CardContent>\n                                </Card>\n                                <Card className=\"multiline_courses\">\n                                    <h2>Add Multiple Courses</h2>\n                                    <CardContent>\n                                        <div className=\"fullwidth\">\n                                            <FormControl className={classes.formControl}>\n                                                <TextareaAutosize\n                                                    aria-label=\"minimum height\"\n                                                    onChange={e => setMultiLineCourses(e.target.value)}\n                                                    value={multiLineCourses}\n                                                    rowsMin={20}\n                                                    startAdornment={<InputAdornment position=\"start\"><MessageIcon /> </InputAdornment>}\n                                                    placeholder=\"Add courses line by line. Remove every white space.\"\n                                                />\n                                            </FormControl>\n                                            <div className=\"actions\">\n                                                <AdminButton onClick={handleMultipleCoursesAdd}>Add</AdminButton>\n                                            </div>\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </div>\n                            :\n                            <Card>\n                                <CardContent>\n                                    No school selected.\n                            </CardContent>\n                            </Card>\n            }\n        </SchoolsOverviewContainer>\n    )\n}\n\nexport default Courses\n","import React, { useState } from 'react'\nimport Content from \"../Content\"\nimport Services from \"./Services\"\nimport Schools from \"./Schools\"\nimport Courses from \"./Courses\"\nimport { useSelector } from 'react-redux'\n\nconst ServiceMain = () => {\n\n    const [value, setValue] = useState(0);\n    const { userInfo } = useSelector(state => state.userLogin)\n\n    const labels = userInfo.isAdmin ? [\"Set Service Costs\",\n        \"Manage Institutions/Courses\", \"Courses\"] : [\"Manage Institutions/Courses\", \"Courses\"]\n\n    const TabContent = userInfo.isAdmin ?\n        [<Services setValue={setValue} value={0} />,\n        <Schools setValue={setValue} value={1} />,\n        <Courses setValue={setValue} value={2} />\n        ] :\n        [<Schools setValue={setValue} value={1} />,\n        <Courses setValue={setValue} value={2} />\n        ]\n\n    return (\n        <div>\n            <Content\n                labels={labels}\n                TabContent={TabContent}\n                value={value}\n                setValue={setValue}\n            />\n\n        </div>\n    )\n}\n\nexport default ServiceMain\n","import styled from 'styled-components'\nimport { device, colors } from \"./breakpoints\"\nimport { Button } from \"./HomeStyle\"\n\nexport const NotFoundContainer = styled.div`\n    height: 88vh;    \n    \n    .notfound{\n        display: grid;\n        place-items: center;   \n        margin-top: 85px; \n        \n        p {\n            color: ${colors.white};        \n            font-size: 10rem;\n            @media ${device.mobile_lg}{\n                font-size: 5rem;\n            }\n            font-weight: 700;\n            display: flex;\n            font-family: 'Aclonica', sans-serif;\n        }\n        p span {            \n            transform-style: preserve-3d;\n            perspective: 500;\n            -webkit-font-smoothing: antialiased;\n        }\n        p span::before,\n        p span::after {\n            \n            position: absolute;\n            top: 0;\n            left: -1px;\n            transform-origin: left top;\n            transition: all ease-out 0.3s;\n            content: attr(data-text);\n        }\n        p span::before {\n            z-index: 1;\n            color: rgba(0,0,0,0.2);\n            transform: scale(1.1, 1) skew(0deg, 20deg);\n        }\n        p span::after {\n            z-index: 2;\n            color: ${colors.lightred};\n            text-shadow: -1px 0 1px #684da3, 1px 0 1px rgba(0,0,0,0.8);\n            transform: rotateY(-40deg);\n        }\n        p span:hover::before {\n            transform: scale(1.1, 1) skew(0deg, 5deg);\n        }\n        p span:hover::after {\n            transform: rotateY(-10deg);\n        }\n        p span + span {\n            margin-left: 0.1rem;\n        }\n        \n        .caption{\n            font-family: 'Aclonica', sans-serif;\n            margin: 20px 0 10px 0;\n            font-size: 2rem;\n            @media ${device.mobile_lg}{\n                font-size: 1rem;\n            }\n        }\n        .text{\n            font-size: 1rem;\n            margin-bottom: 5px;\n            text-align: center;\n            @media ${device.mobile_lg}{\n                font-size: 0.75rem;\n            }\n        }\n    }\n`\n\nexport const UnAuthorizedContainer = styled(NotFoundContainer)`\n    .notfound {\n        p{\n            @media ${device.tablet_md}{\n                font-size: 7rem;\n            }\n            @media ${device.mobile_lg}{\n                font-size: 5rem;\n            }\n            @media ${device.mobile_md}{\n                font-size: 4rem;\n            }\n            @media ${device.mobile_sm}{\n                font-size: 3rem;\n            }\n        }\n        \n    }\n    \n    \n`\nexport const AccessButton = styled(Button)`\n    background: ${colors.darkblue};\n    margin: 0.7rem auto;\n    padding: 0.4rem 0.8rem;\n    border: 1px solid ${colors.darkblue};\n    border-radius: 20px;\n`","import React from 'react'\nimport MainHeader from '../components/MainHeader.js'\nimport { NotFoundContainer, AccessButton } from \"../styles/NotFoundStyles.js\"\nimport { useHistory } from \"react-router-dom\"\nimport Meta from \"../components/Meta\"\n\nconst NotFoundPage = () => {\n  const history = useHistory()\n\n  return (\n    <NotFoundContainer >\n      <Meta />\n      <MainHeader />\n      <div className=\"notfound\">\n        <p aria-label=\"404\">\n          <span data-text=\"O\">O</span>\n          <span data-text=\"P\">P</span>\n          <span data-text=\"P\">P</span>\n          <span data-text=\"S\">S</span>\n          <span data-text=\"!\">!</span>\n\n        </p>\n        <span className=\"caption\">404 - PAGE NOT FOUND</span>\n        <span className=\"text\">The page you are looking for might have been removed, </span>\n        <span className=\"text\">had its name changed or temporarily unavailable </span>\n        <AccessButton onClick={() => history.push('/')}>GO TO HOMEPAGE</AccessButton>\n      </div>\n    </NotFoundContainer>\n  )\n}\n\nexport default NotFoundPage\n","import React, { useEffect } from 'react'\nimport MainHeader from '../components/MainHeader.js'\nimport { UnAuthorizedContainer, AccessButton } from \"../styles/NotFoundStyles.js\"\nimport { useHistory } from \"react-router-dom\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst NotFoundPage = () => {\n    const history = useHistory()\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    return (\n        <UnAuthorizedContainer >\n            <Meta />\n            <MainHeader />\n\n            <div className=\"notfound\">\n                <p aria-label=\"404\">\n                    <span data-text=\"N\">N</span>\n                    <span data-text=\"O\">O</span>\n\n                    <span data-text=\"W\">W</span>\n                    <span data-text=\"A\">A</span>\n                    <span data-text=\"Y\">Y</span>\n                    <span data-text=\"!\">!</span>\n\n                </p>\n                <span className=\"caption\">401 - UNAUTHORIZED ACCESS</span>\n                <span className=\"text\">The page you are looking for lies beyond your bounds. </span>\n                <span className=\"text\">You cannot access it. Contact the site administrator to proceed. </span>\n                <AccessButton onClick={() => history.push('/')}>GO TO HOMEPAGE</AccessButton>\n            </div>\n        </UnAuthorizedContainer>\n    )\n}\n\nexport default NotFoundPage\n","import styled from 'styled-components'\nimport { device, colors } from \"./breakpoints\"\nimport { AdminButtonPro } from \"./AdminStyles\"\n\nexport const HelpContainer = styled.div`\n    \n    .topimage{\n        background-image: url(/images/slide4.jpg);\n        background-color: ${colors.darktext};\n        background-blend-mode: lighten;\n        background-position: center;\n        height: 30vh;        \n         display: grid; \n         place-items: center; \n         h2{\n             color: ${colors.white}\n         }\n    }\n    \n    h2{\n        font-family: 'Aclonica', sans-serif;\n        font-size: 1.6rem;\n        text-align: center;\n        width: fit-content;\n        border-bottom: 2px solid ${colors.goldish};\n        margin: 40px auto;\n    }\n    .content{\n        display: grid;\n        place-items: center;\n        margin: 0 30px 40px 30px;\n        @media ${device.tablet}{\n            margin: 0 0 40px 0;\n        }\n        \n        .topcontent{\n            display: grid;        \n            grid-template-columns: repeat(2, 1fr);  \n            \n            @media ${device.tablet}{\n                grid-template-columns: 1fr;  \n            }\n            grid-gap: 40px;            \n            width: 100%;\n            .card{\n                padding: 20px;\n            }\n        }\n    }\n\n    .formcontrol{\n        margin: 1rem;\n        min-width: 100%;\n        width: 100%;\n        @media ${device.tablet}{\n            margin: 1rem 0; \n        }\n    }\n    \n    .altcontact{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        \n        h2{\n            font-family: 'Aclonica', sans-serif            \n        }\n        .text{\n            margin: 30px auto;\n            p{\n                padding: 15px;\n                @media ${device.tablet}{\n                   padding: 15px 10px;                   \n                }\n            }\n            \n            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.16), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\n            border-radius: 10px;\n        }\n        .buttons{\n            width: 100%;                        \n            display: flex;\n            justify-content: space-around;\n            @media ${device.tablet}{\n                   flex-direction: column;                 \n                }\n            div{\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                \n            }\n        }\n    }\n`\n\nexport const HelpButtonPro = styled(AdminButtonPro)`\n    padding: 5px 15px 5px 15px;\n    a{\n        text-decoration: none;\n        color: ${colors.darkblue};\n        display: flex;\n        align-items: center;\n        .MuiSvgIcon-root{\n            margin-right: 3px;\n        }\n    }\n`","export const CONTACT_CREATE_REQUEST = 'CONTACT_CREATE_REQUEST'\nexport const CONTACT_CREATE_SUCCESS = 'CONTACT_CREATE_SUCCESS'\nexport const CONTACT_CREATE_FAIL = 'CONTACT_CREATE_FAIL'\nexport const CONTACT_CREATE_RESET = 'CONTACT_CREATE_RESET'\n\nexport const CONTACT_DETAILS_REQUEST = 'CONTACT_DETAILS_REQUEST'\nexport const CONTACT_DETAILS_SUCCESS = 'CONTACT_DETAILS_SUCCESS'\nexport const CONTACT_DETAILS_FAIL = 'CONTACT_DETAILS_FAIL'\n\nexport const CONTACT_LIST_REQUEST = 'CONTACT_LIST_REQUEST'\nexport const CONTACT_LIST_SUCCESS = 'CONTACT_LIST_SUCCESS'\nexport const CONTACT_LIST_FAIL = 'CONTACT_LIST_FAIL'\n\nexport const CONTACT_LIST_BY_EMAIL_REQUEST = 'CONTACT_LIST_BY_EMAIL_REQUEST'\nexport const CONTACT_LIST_BY_EMAIL_SUCCESS = 'CONTACT_LIST_BY_EMAIL_SUCCESS'\nexport const CONTACT_LIST_BY_EMAIL_FAIL = 'CONTACT_LIST_BY_EMAIL_FAIL'\n\nexport const CONTACT_DELETE_REQUEST = 'CONTACT_DELETE_REQUEST'\nexport const CONTACT_DELETE_SUCCESS = 'CONTACT_DELETE_SUCCESS'\nexport const CONTACT_DELETE_FAIL = 'CONTACT_DELETE_FAIL'","import React, { useState, useEffect } from 'react'\nimport MainHeader from \"../components/MainHeader\"\nimport { HelpContainer, HelpButtonPro } from \"../styles/HelpStyles\"\nimport { Person as PersonIcon, Message as MessageIcon } from '@material-ui/icons'\nimport EmailIcon from '@material-ui/icons/Email';\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\"\nimport {\n    Input, FormControl, InputLabel, InputAdornment, Card, CardContent,\n} from '@material-ui/core'\nimport { TextField } from '@material-ui/core';\nimport { FormHelperText } from '@material-ui/core';\nimport { colors } from \"../styles/breakpoints\"\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { createContact } from '../redux/actions/contactActions';\nimport Loader from \"../components/Loaders/SimpleLoader\"\nimport Message from \"../components/Message\"\nimport Meta from \"../components/Meta\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nconst Help = () => {\n    const [name, setName] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [purpose, setPurpose] = useState(\"\")\n\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        scroll.scrollToTop()\n    }, [])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        dispatch(createContact({\n            name,\n            email,\n            purpose,\n            message\n        }))\n        setName(\"\")\n        setEmail(\"\")\n        setPurpose(\"\")\n        setMessage(\"\")\n    }\n\n\n    const { loading, error, message: contactMessage } = useSelector(state => state.contactCreate)\n\n    return (\n        <HelpContainer>\n            <Meta />\n            <MainHeader />\n            <div className=\"topimage\">\n                <h2>Need any help?</h2>\n            </div>\n            <h2> Contact us</h2>\n            <main className=\"content\">\n\n                <div className=\"topcontent\">\n                    <form className=\"contactitem\" onSubmit={handleSubmit}>\n                        {\n                            loading ? <Loader />\n                                :\n                                error ? <Message variant=\"error\">{error}</Message>\n                                    :\n                                    contactMessage ? <Message variant=\"info\">{contactMessage}</Message>\n                                        :\n                                        null\n                        }\n                        <Card className=\"card\">\n                            <CardContent className=\"card_content\">\n\n                                <div className=\"fullwidth\">\n                                    <FormControl fullWidth className=\"formcontrol\">\n                                        <InputLabel htmlFor=\"standard-adornment-name\">Full Name</InputLabel>\n                                        <Input\n                                            id=\"standard-adornment-name\"\n                                            value={name}\n                                            required\n                                            onChange={(e) => setName(e.target.value)}\n                                            startAdornment={<InputAdornment position=\"start\"><PersonIcon /> </InputAdornment>}\n                                        />\n                                        <FormHelperText id=\"standard-weight-helper-text\">Your fullname here</FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className=\"fullwidth\">\n                                    <FormControl fullWidth className=\"formcontrol\">\n                                        <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\n                                        <Input\n                                            id=\"standard-adornment-email\"\n                                            helperText=\"Choose the purpose\"\n                                            type=\"email\"\n                                            value={email}\n                                            required\n                                            onChange={(e) => setEmail(e.target.value)}\n                                            startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    <EmailIcon /> </InputAdornment>\n                                            }\n                                        />\n                                        <FormHelperText id=\"standard-weight-helper-text\">Your email address here</FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div>\n                                    <TextField\n                                        select\n                                        required\n                                        className=\"formcontrol\"\n                                        label=\"Purpose\"\n                                        value={purpose}\n                                        onChange={(e) => setPurpose(e.target.value)}\n                                        SelectProps={{\n                                            native: true,\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\"><MenuBookIcon /> </InputAdornment>\n                                        }}\n                                        helperText=\"Choose the purpose\"\n                                    >\n\n                                        <option value=\"\">Choose an option</option>\n                                        <option value=\"Card loading issues\">Card loading issues</option>\n                                        <option value=\"Change of course issues\">Change of course issues</option>\n                                        <option value=\"Result upload issues\">Result upload issues</option>\n                                        <option value=\"Jamb password reset issues\">Jamb password reset issues</option>\n\n                                    </TextField>\n                                </div>\n\n                                <div className=\"fullwidth\">\n                                    <TextField\n                                        id=\"standard-multiline-static\"\n                                        label=\"Message here\"\n                                        className=\"formcontrol\"\n                                        multiline\n                                        required\n                                        value={message}\n                                        onChange={(e) => setMessage(e.target.value)}\n                                        rows={6}\n                                        helperText=\"Enter your message\"\n                                        InputProps={{\n                                            startAdornment: (\n                                                <InputAdornment position=\"start\">\n                                                    <MessageIcon />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                    <HelpButtonPro type=\"submit\">Send message</HelpButtonPro>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </form>\n\n                    <div className=\"altcontact\">\n                        <h2>Contact Us</h2>\n                        <div className=\"text\">\n                            <p>\n                                Need help with any of our service? We are just a call or message away.\n                        </p>\n\n                            <p>You can contact us via the contact form or call/email us and we'll get back to you right away.</p>\n\n                        </div>\n                        <div className=\"buttons\">\n                            <div>\n                                <span>Email us</span>\n                                <HelpButtonPro color={colors.goldish}>\n                                    <a href=\"mailto:pincafes@gmail.com\">\n                                        <AlternateEmailIcon /> pincafes@gmail.com\n                                </a>\n                                </HelpButtonPro>\n                            </div>\n                            <div>\n                                <span>Call us</span>\n                                <HelpButtonPro color={colors.darkblue} >\n                                    <a href=\"tel:08069598685\" style={{ color: 'white' }}>\n                                        <PhoneIcon /> 08069598685\n                                </a>\n                                </HelpButtonPro>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </main>\n\n        </HelpContainer>\n    )\n}\n\nexport default Help\n","import axios from \"axios\"\nimport {\n    CONTACT_CREATE_FAIL,\n    CONTACT_CREATE_REQUEST,\n    CONTACT_CREATE_SUCCESS,\n\n    CONTACT_DETAILS_FAIL,\n    CONTACT_DETAILS_REQUEST,\n    CONTACT_DETAILS_SUCCESS,\n\n\n    CONTACT_LIST_REQUEST,\n    CONTACT_LIST_SUCCESS,\n    CONTACT_LIST_FAIL,\n\n    CONTACT_LIST_BY_EMAIL_REQUEST,\n    CONTACT_LIST_BY_EMAIL_SUCCESS,\n    CONTACT_LIST_BY_EMAIL_FAIL,\n\n    CONTACT_DELETE_SUCCESS,\n    CONTACT_DELETE_FAIL,\n    CONTACT_DELETE_REQUEST\n} from \"../constants/contactConstants\"\n\nimport { setMessage } from \"./utilActions\"\n\nexport const createContact = (contact) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CONTACT_CREATE_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        const { data } = await axios.post('/api/contacts', contact, config)\n\n        dispatch({\n            type: CONTACT_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CONTACT_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\nexport const deleteContact = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CONTACT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/contacts/${id}`, config)\n\n        dispatch({\n            type: CONTACT_DELETE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        dispatch({\n            type: CONTACT_DELETE_FAIL,\n            payload: message\n        })\n        dispatch(setMessage(message))\n    }\n}\n\n\nexport const getContactDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CONTACT_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/contacts/${id}`, config)\n\n        dispatch({\n            type: CONTACT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CONTACT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const listContacts = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CONTACT_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/contacts', config)\n\n        dispatch({\n            type: CONTACT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CONTACT_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\n\n\n\n\n\n\nexport const listContactsByEmail = (email) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CONTACT_LIST_BY_EMAIL_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/contacts/byemail/${email}`, config)\n\n        dispatch({\n            type: CONTACT_LIST_BY_EMAIL_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: CONTACT_LIST_BY_EMAIL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}","import styled from 'styled-components'\nimport { motion } from \"framer-motion\"\nimport { device, colors } from \"./breakpoints\"\n\n\nexport const Backdrop = styled(motion.div)`\n    \n    @media ${device.tablet}{\n        position:fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.5);\n        z-index: 1;    \n    }\n    \n`\n\nexport const Drawer = styled.nav`\n    @media ${device.desktopL}{\n        display:none\n    }\n    \n    @media ${device.tablet}{            \n        display: block;\n        font-family: \"Jost\";        \n        background: white;\n        -webkit-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        -moz-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n        top: 0;\n        left: 0;\n        width: 70%;\n        height: 100%;\n        z-index: 5;\n        margin: 0 !important;\n        padding: 0 !important;\n        position: fixed;    \n        transform: translateX(-100%);\n        transition: transform 0.3s ease-out;\n        \n                \n        .open{\n            transform: translateX(0);\n        }                \n    }               \n    @media ${device.mobile_lg}{  \n        width: 80%;\n    }\n`;\n\n\nexport const DrawerContent = styled(motion.div)`\n    height: 100%;    \n    .closeIcon{\n            background-color: transparent !important;            \n            color: #fff;\n            margin-bottom: 20px !important;\n            &:hover{\n                background-color: rgba(219, 219, 219, 0.5) !important;\n            }\n        }                \n    \n    ul{\n        height: 100%;\n        list-style: none;\n        display: flex;\n        flex-direction: column;        \n        font-size: 1.2rem;\n        li{            \n            padding: 40px 20px 40px 20px;\n            @media ${device.mobile_lg}{  \n                padding: 30px 20px 20px 20px;\n            }\n            @media ${device.mobile_md}{  \n                padding: 20px 20px 10px 20px;\n            }\n        }\n        li.item{\n            display: flex;\n            align-items: center;    \n            font-weight: 500;\n            border-bottom: 1px solid ${colors.lightergray};\n            opacity: 0;\n            \n            i, .MuiAvatar-root{\n                margin-right: 20px;\n                color: ${colors.lightred};\n                &:hover{\n                    color: ${colors.white};\n                }\n            }\n            span{\n                font-size: 1.2rem;\n                color: ${colors.darktext}\n            }                                 \n        }\n        \n        li.sidedrawer__firstchild {\n            margin: 0 !important;            \n            padding: 30px 20px 40px 20px;\n            background-color: ${colors.lightred};\n            \n            @media ${device.mobile_md}{  \n                padding: 20px 20px 20px 20px;\n            }\n            .logo{\n               \n                height: 5px;\n                img{\n                   width: 90%;\n                    height: 50%;\n                }\n            } \n            svg{\n                margin-bottom: 30px;                \n            }\n            .cls-1{\n                fill: #fff;      \n            }\n            .cls-2 {\n                fill: ${colors.darktext}; \n            }\n            span{\n                color: ${colors.white}\n            }\n            \n        }  \n        li:last-child{\n            \n            margin-top: auto;\n        }   \n        \n        a.drawer__link.first:hover{\n            border-top: 4px solid ${colors.lightgray}\n        } \n        \n        a.drawer__link:hover{\n            background: ${colors.lightred};            \n            span{\n                color: ${colors.white}\n            }\n            i{\n                color: ${colors.white}\n            }            \n        }\n        \n          \n    }\n    \n    a {\n        color: #521751;\n        text-decoration: none;\n        font-size: 1.2rem;\n    }\n    a:hover, a:active{\n        color: #fa923f;\n    }    \n`;\n\nexport const CloseIconElem = styled(motion.div)`\n    position: relative;\n    margin: 20px 0;    \n    width: 50px;\n    height: 50px;\n    \n    div{\n        position: absolute;\n        top: 20px;\n        left: 0;\n        background: #000;\n        width: 90%;\n        height: 2px;\n        \n    }\n    \n    &:hover{\n        border-radius: 10px;\n        background: #DBDBDB;\n    }\n`\n\n\n","export const backdropVariant = {\n    hidden: {x: 0},\n    visible: {\n        x: 0,\n        duration: 1\n    },  \n      \n}\n\nexport const drawerVariant = {\n    hidden: {\n        x: 0,        \n    },  \n    visible: {\n        x: 200,        \n        transition: {\n            delay: 0.1,\n            duration: 5\n        }\n    }\n}\n\nexport const closeVariant = {\n    hidden: {\n        x: -100,        \n    },  \n    visible: {\n        x: 0,        \n        transition: {\n            delay: 0.1,\n            duration: 5\n        }\n    },\n    onHover:{\n        scale: 1.1\n      }\n}\n\n\nexport const closeLeftVariants = {\n    hidden: {rotate: -120, scale: 2},\n    visible: {\n      scale: 1,\n      rotate: 45,\n      transition: {\n        duration: 1\n      }\n    }    \n  }\n  \n  export const closeRightVariants = {\n    hidden: {rotate: -240, scale: 2},\n    visible: {\n      scale: 1,\n      rotate: 135,\n      transition: {\n        duration: 1\n      }\n    }    \n  }\n  \n  export const mainListVariants = {\n    initial: {opacity: 0},\n    animate:{\n      when: \"beforeChildren\",\n      opacity: 1},\n    \n  }\n  \n  export const firstListVariants = {\n    initial:{\n      x: '-1000px'\n    },\n    animate:{\n      x: 0,\n      transition:{\n        duration: 1,\n        delay: 5\n      }\n    }\n  }\n  \n  export const secondListVariants = {\n    initial:{\n      x: '-1000px'\n    },\n    animate:{\n      x: 0,\n      transition:{\n        duration: 1,\n        delay: 7\n      }\n    }\n  }\n  \n  export const thirdListVariants = {\n    initial:{\n      x: '-1000px'\n    },\n    animate:{\n      x: 0,\n      transition:{\n        duration: 1,\n        delay: 9\n      }\n    }\n  }\n  \n  export const fourthListVariants = {\n    initial:{\n      x: '-1000px'\n    },\n    animate:{\n      x: 0,\n      transition:{\n        duration: 1,\n        delay: 11\n      }\n    }\n  }","import styled from \"styled-components\"\nimport {motion} from \"framer-motion\"\n\nexport const Socials = styled(motion.div)`\n    display: flex;\n    justify-content: ${props => props.custom || 'space-between'};\n    .MuiSvgIcon-root{\n        font-size: ${props => props.size || '40px'};\n        \n    }\n    \n    .facebook{\n        color: #3b5998;        \n    };   \n    .twitter{\n        color: #00acee;\n    };\n    .youtube{\n        color: #FF0000;\n    };\n    .linkedIn{\n        color: #0e76a8;\n    };\n    .instagram{\n        color: #DD2A7B;\n    }\n`","import React from 'react'\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport {Socials} from \"../styles/SocialStyle\"\n\nconst SocialNetworks = ({fbBool, twBool, inBool, lnBool, ytBool, custom}) => {\n    return (\n        <Socials custom={custom}>\n        <a style={{display: fbBool ? 'none' : 'block'}}\n            href=\"http://www.facebook.com/softechy\"\n            target= \"_blank\"\n            rel=\"noreferrer noopener\"\n            >\n            <FacebookIcon className=\"facebook\" /> \n        </a>        \n            \n        <a style={{display: twBool ? 'none' : 'block'}}\n            href=\"http://www.facebook.com/softechy\"\n            target= \"_blank\"\n            rel=\"noreferrer noopener\"\n            >\n            <TwitterIcon className=\"twitter\" />\n        </a>\n        \n        <a style={{display: ytBool ? 'none' : 'block'}}\n            href=\"http://www.facebook.com/softechy\"\n            target= \"_blank\"\n            rel=\"noreferrer noopener\"\n            >\n            <YouTubeIcon className=\"youtube\" />\n        </a>\n        \n        <a style={{display: lnBool ? 'none' : 'block'}}\n            href=\"http://www.facebook.com/softechy\"\n            target= \"_blank\"\n            rel=\"noreferrer noopener\"\n            >\n            <LinkedInIcon className=\"linkedIn\" />\n        </a>\n        \n        <a style={{display: inBool ? 'none' : 'block'}}\n            href=\"http://www.facebook.com/softechy\"\n            target= \"_blank\"\n            rel=\"noreferrer noopener\"\n            >\n            <InstagramIcon className=\"instagram\" />\n        </a>                                                                    \n            \n        </Socials>\n    )\n}\n\nexport default SocialNetworks\n","import React, { useEffect } from 'react'\nimport { Backdrop, Drawer, DrawerContent } from \"../styles/DrawerStyle\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    backdropVariant,\n    drawerVariant,\n    mainListVariants,\n} from \"../animationVariants/DrawerVariants\"\nimport SocialNetworks from \"../components/SocialNetworks\"\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\nimport { DRAWER_CLOSE } from \"../redux/constants/utilConstants\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { colors } from \"../styles/breakpoints\"\nimport { logout } from '../redux/actions/userActions'\nimport { Avatar } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n    },\n}));\n\nconst SideDrawer = () => {\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const history = useHistory()\n    const path = location.pathname\n\n    useEffect(() => {\n        dispatch({ type: DRAWER_CLOSE })\n    }, [dispatch])\n\n    const drawerToggle = useSelector(state => state.drawerToggle)\n    const { drawerState } = drawerToggle\n\n    const animateDrawer = () => {\n        const navLinks = document.querySelectorAll(\"nav ul li.item\");\n        navLinks.forEach((link, ind) => {\n            if (link.style.animation) {\n                link.style.animation = ''\n            }\n        })\n    }\n\n    const handleCancelClick = () => {\n        animateDrawer()\n        dispatch({ type: DRAWER_CLOSE })\n    }\n\n    const handleBackDropClose = () => {\n        dispatch({ type: DRAWER_CLOSE })\n    }\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const photo = useSelector(state => state.photo)\n    const { imageUrl } = photo\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        history.push('/auth')\n    }\n\n    const classes = useStyles();\n\n\n    return (\n        <AnimatePresence>\n            <>\n                {drawerState && (\n                    <Backdrop\n                        key=\"backdrop\"\n                        variants={backdropVariant}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        exit=\"exit\"\n                        onClick={handleBackDropClose}\n                    />\n                )}\n                <Drawer\n                    key=\"drawer\"\n                    variants={drawerVariant}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    style={{ transform: drawerState ? \"translateX(0)\" : \"translateX(-100%)\" }}\n                >\n                    <DrawerContent>\n                        <motion.ul\n                            variants={mainListVariants}\n                            initial=\"initial\"\n                            animate=\"animate\"\n\n                        >\n                            <li className=\"sidedrawer__firstchild\">\n                                <CloseIcon\n                                    fontSize='large'\n                                    className='closeIcon'\n                                    onClick={handleCancelClick}\n                                />\n                                {/* <Link to=\"/\">\n                                    <SvgIcon />\n                                </Link> */}\n\n                                <Link to='/' className=\"logo\">\n                                    <img src='/images/pincafes-logo.png' alt='Pin Cafes logo' />\n                                </Link>\n\n                                <span>Welcome to Pin Cafes!</span>\n                            </li>\n                            <Link\n                                onClick={() => dispatch({ type: DRAWER_CLOSE })}\n                                to='/allcards'\n                                className=\"drawer__link first\">\n                                <motion.li\n                                    style={{\n                                        fontWeight: path === '/allcards' && 'bold',\n                                        backgroundColor: path === '/allcards' && colors.lightgray\n                                    }}\n                                    className='item' >\n                                    <i className=\"fas fa-graduation-cap\"></i>\n                                    <span>Buy Pin</span>\n                                </motion.li>\n                            </Link>\n                            <Link\n                                onClick={() => dispatch({ type: DRAWER_CLOSE })}\n                                to='/data-correction'\n                                className=\"drawer__link\"\n                                style={{\n                                    fontWeight: path === '/data-correction' && 'bold',\n                                    color: path === '/data-correction' && colors.lightred\n                                }}\n                            >\n                                <motion.li className='item' >\n                                    <i className=\"fas fa-cogs\"></i>\n                                    <span>Data Correction</span>\n                                </motion.li>\n                            </Link>\n\n                            <Link\n                                onClick={() => dispatch({ type: DRAWER_CLOSE })}\n                                to='/help'\n                                style={{\n                                    fontWeight: path === '/help' && 'bold',\n                                    color: path === '/help' && colors.lightred\n                                }}\n                                className=\"drawer__link\">\n                                <motion.li className='item' >\n                                    <i className=\"fas fa-file-signature\"></i>\n                                    <span>Get Help</span>\n                                </motion.li>\n                            </Link>\n\n                            {\n                                userInfo ?\n                                    <>\n                                        <Link\n                                            onClick={logoutHandler}\n                                            to='/' className=\"drawer__link\">\n                                            <motion.li className='item' >\n                                                <i className=\"fas fa-info-circle\"></i>\n                                                <span>Logout</span>\n                                            </motion.li>\n                                        </Link>\n\n                                        <Link\n                                            onClick={() => dispatch({ type: DRAWER_CLOSE })}\n                                            to=\"/profile\"\n                                            style={{\n                                                fontWeight: path === '/profile' && 'bold',\n                                                color: path === '/profile' && colors.lightred\n                                            }}\n                                            className=\"drawer__link\">\n                                            <motion.li className='item' >\n                                                <Avatar\n                                                    className={classes.small}\n                                                    src={\n                                                        imageUrl ? imageUrl :\n                                                            userInfo.profile && userInfo.profile.picture ?\n                                                                userInfo.profile.picture\n                                                                :\n                                                                '/images/default-avatar.jpg'\n                                                    }\n                                                />\n                                                <span>Profile</span>\n                                            </motion.li>\n                                        </Link>\n\n                                    </>\n                                    :\n                                    <Link\n                                        onClick={() => dispatch({ type: DRAWER_CLOSE })}\n                                        to='/auth' className=\"drawer__link\">\n                                        <motion.li className='item' >\n                                            <i className=\"fas fa-info-circle\"></i>\n                                            <span>Join</span>\n                                        </motion.li>\n                                    </Link>\n                            }\n\n\n                            <motion.li>\n                                <SocialNetworks />\n                            </motion.li>\n                        </motion.ul>\n                    </DrawerContent>\n                </Drawer>\n            </>\n\n        </AnimatePresence >\n    )\n}\n\nexport default SideDrawer\n","import styled from 'styled-components'\nimport { device, colors } from \"./breakpoints\"\n\nexport const FooterElement = styled.footer`\n    \n    a{\n        text-decoration: none;\n    }\n    .topfooter{\n        background: ${colors.lightred};\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n\n        @media ${device.tablet}{\n            grid-template-columns: repeat(2, 1fr);\n        }\n        @media ${device.tablet_md}{\n            grid-template-columns: 1fr;\n            grid-gap: 20px;\n        }\n        place-items: center;\n        padding: 50px 80px;\n        grid-gap: 10px;\n\n        h4{\n            font-family: 'Aclonica', sans-serif;\n            border-bottom: 2px solid ${colors.goldish};\n            width: fit-content;\n            \n        }\n        ul{\n            list-style: none;\n            li{\n                font-family: 'Jost', sans-serif !important;\n                margin: 15px 0;\n                display: flex;\n                align-items: center;\n                a{\n                    color: #000;\n                    transition: all 0.5s ease;;\n                    &:hover{\n                        font-weight: 800; \n                        color: ${colors.goldish}\n                    }\n                }\n                .MuiSvgIcon-root{\n                    margin-right: 3px;\n                    color: ${colors.darkblue}\n                }\n            }\n        }\n        .description{\n            height: 100%;\n            width: 100%;\n          \n            img{\n                height: 70px;\n                cursor: pointer;\n            }\n            p{\n                font-family: 'Jost', sans-serif;\n                width: 80%;\n            }\n        }\n        .links{\n            height: 100%;\n            width: 100%;\n        }\n        .contact{\n            height: 100%;\n            width: 100%;\n        }\n        .account{\n            font-weight: 500;\n            height: 100%;\n            width: 100%;\n            ul li{\n                text-transform: uppercase;\n            }\n        }\n    }\n    \n    .bottombar{\n        background: ${colors.background};\n        padding: 40px 80px 20px 80px;\n        @media ${device.tablet_md}{\n            padding: 40px 10px 20px 10px;\n        }\n   \n        display: flex;\n        justify-content: space-between;\n        a{\n            text-decoration: none;    \n            color: ${colors.darkblue}    \n        }\n        label{\n            display: flex;\n            align-items: center;\n            .MuiSvgIcon-root{\n                margin-right: 5px;\n            }\n        }\n        .footer__items{\n            flex-grow: 0.3;\n            display: flex;\n            justify-content: space-between;\n            @media ${device.mobile_lg}{\n                small:first-child{\n                    display: none;\n                }\n                small:nth-child(4){\n                    display: none;\n                }\n            }\n        }\n    }\n`","import React from 'react'\nimport { FooterElement } from \"../styles/FooterStyle\"\nimport PublicIcon from '@material-ui/icons/Public';\nimport { Link, useHistory } from 'react-router-dom';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PhoneIcon from '@material-ui/icons/Phone';\n\nconst Footer = ({ hide }) => {\n    const history = useHistory()\n    return (\n        <FooterElement>\n\n            <div className=\"topfooter\" style={{ display: hide ? 'none' : 'grid' }}>\n                <div className=\"description\">\n                    <img src=\"/images/pincafes-logo.png\" alt=\"Logo\" onClick={() => history.push('/')} />\n                    <p>\n                        Buy WAEC/NECO Scratch Cards, all JAMB correction of data, JAMB Regularisation, etc.\n                    </p>\n                </div>\n                <div className='links'>\n                    <h4>Links</h4>\n                    <ul>\n                        <li>\n                            <Link to='/'>Home</Link>\n                        </li>\n                        <li>\n                            <Link to='/allcards'>Buy cards</Link>\n                        </li>\n                        <li>\n                            <Link to='/data-correction'>Jamb services</Link>\n                        </li>\n                        <li>\n                            <Link to='/help'>Contact Us</Link>\n                        </li>\n                        <li>\n                            <Link to='/auth'>Sign up</Link>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"contact\">\n                    <h4>Contacts</h4>\n                    <ul>\n                        <li><LocationOnIcon /> 2 John Kay Street, Okitipupa, Ondo State.</li>\n                        <li><MailOutlineIcon /> pincafes@gmail.com</li>\n                        <li><PhoneIcon /> <span>08066120596</span></li>\n                    </ul>\n                </div>\n\n\n            </div>\n            <div className='bottombar'>\n                <div>\n                    <label><PublicIcon /> Pin Cafes</label>\n                </div>\n                <div className=\"footer__items\">\n                    <small><Link to=\"/help\">Contact Pin Cafes</Link> </small>\n                    <small><Link to='/'>Privacy</Link> </small>\n                    <small><Link to='/'>Terms of use</Link> </small>\n                    <small><Link to=\"/help\">Help</Link> </small>\n                    <small>&copy; {new Date().getFullYear()} </small>\n                </div>\n            </div>\n        </FooterElement>\n    )\n}\n\nexport default Footer\n","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { colors } from \"./breakpoints\"\n\nexport const ScrollContainer = styled.div`\n    z-index: 5;\n    position: fixed;\n    bottom: 20px;\n    left: 20px;\n\n    button{\n        border-radius: 10px !important;\n        box-shadow: 2px 6px 5px 0px rgba(0,0,0,0.75);\n        background-color: ${colors.darkgray};\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 50px;\n        transform: rotateZ(-15deg);\n        transition: all 0.5s ease;\n        &:hover{\n            transform: rotateZ(0);\n            background-color: ${colors.darktext};\n           \n        }\n        i{\n            color: ${colors.white}\n        }\n    }\n`","import { useLayoutEffect, useState } from \"react\";\n\nfunction useWindowSize() {\n    const [size, setSize] = useState(0);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize(window.pageYOffset);\n        }\n        window.addEventListener(\"scroll\", updateSize);\n        updateSize();\n        return () => window.removeEventListener(\"scroll\", updateSize);\n    }, []);\n    return size;\n}\n\nexport default useWindowSize;","import React from 'react'\nimport { ScrollContainer } from '../styles/ScrollStyles'\nimport { IconButton } from \"@material-ui/core\"\nimport { animateScroll as scroll } from 'react-scroll'\nimport useWindowYOffset from \"./Utils/useWindowYOffset\"\n\nconst ScrollButton = () => {\n\n    const yOffset = useWindowYOffset()\n\n    return (\n        <ScrollContainer style={{ display: yOffset > 0 ? 'block' : 'none' }} onClick={() => scroll.scrollToTop()}>\n            <IconButton>\n                <i className=\"fas fa-chevron-up\"></i>\n            </IconButton>\n\n        </ScrollContainer>\n    )\n}\n\nexport default ScrollButton\n","import React, { useEffect } from \"react\"\nimport tawkTo from 'tawkto-react'\nimport HomePage from \"./pages/HomePage\"\nimport AuthPage from \"./pages/AuthPage\"\nimport AllServicesPage from \"./pages/AllServicesPage\"\nimport ProfilePage from \"./pages/ProfilePage\"\nimport CardPage from \"./pages/CardPage\"\nimport AllCardsPage from \"./pages/AllCardsPage\"\nimport ChangeOfCourseInstitutionPage from \"./pages/ChangeOfCourseInstitutionPage\"\nimport EditItem from \"./pages/EditItemPage\"\nimport PayOrder from \"./pages/PayOrderPage\"\nimport OLevelUploadPage from \"./pages/OLevelUploadPage\"\nimport JambPasswordResetPage from \"./pages/JambPasswordResetPage\"\nimport ActivateAccount from \"./pages/ActivateAccount\"\nimport ResendEmail from \"./pages/ResendEmail\"\nimport ForgotPassword from \"./pages/ForgotPassword\"\nimport ResetPassword from \"./pages/ResetPassword\"\nimport AdminEmailMain from \"./pages/Admin/Emails/ManageEmails\"\nimport AdminUsers from \"./pages/Admin/Users/UsersMain\"\nimport AdminCards from \"./pages/Admin/Cards/CardsMain\"\nimport AdminCardOrders from \"./pages/Admin/CardOrders/CardOrdersMain\"\nimport AdminChangeOfCourse from \"./pages/Admin/ChangeOfCourse/ChangeOfCourseMain\"\nimport AdminOLevelUpload from \"./pages/Admin/OLevelUpload/OLevelUploadMain\"\nimport AdminJambPasswordReset from \"./pages/Admin/JambPasswordReset/JambPasswordResetMain\"\nimport AdminServiceSettings from \"./pages/Admin/ServiceSettings/ServiceMain\"\nimport NotFoundPage from \"./pages/NotFoundPage\"\nimport UnauthorizedPage from \"./pages/UnauthorizedPage\"\nimport HelpPage from \"./pages/HelpPage\"\nimport { Switch, Route } from \"react-router-dom\"\n// import { AnimatePresence } from \"framer-motion\"\nimport SideDrawer from \"./components/SideDrawer\"\nimport Footer from \"./components/Footer\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { DRAWER_CLOSE } from \"./redux/constants/utilConstants\"\nimport ScrollButton from \"./components/ScrollButton\"\nimport { animateScroll as scroll } from 'react-scroll'\n\nfunction App() {\n  const location = useLocation()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const pathname = location.pathname.split(/\\//)\n  const { userInfo } = useSelector(state => state.userLogin)\n\n\n  useEffect(() => {\n    scroll.scrollToTop()\n  }, [])\n\n  useEffect(() => {\n    dispatch({ type: DRAWER_CLOSE })\n  }, [dispatch])\n\n  useEffect(() => {\n    if (pathname.includes('admin')) {\n      if ((userInfo && !userInfo.isAdmin && !userInfo.isEditor) || !userInfo) {\n        history.push('/unauthorized')\n      }\n    }\n  }, [pathname, userInfo, history])\n\n  return (\n    <>\n      <SideDrawer key=\"sidedrawer\" />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n          <Footer />\n        </Route>\n        <Route path=\"/help\">\n          <HelpPage />\n          <Footer />\n        </Route>\n        <Route path=\"/admin/service-settings\">\n          <AdminServiceSettings />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/admin/emails\">\n          <AdminEmailMain />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/admin/jambpasswordreset\">\n          <AdminJambPasswordReset />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/admin/olevelupload\">\n          <AdminOLevelUpload />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/admin/changeofcourse\">\n          <AdminChangeOfCourse />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/admin/cardorders\">\n          <AdminCardOrders />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/admin/cards\">\n          <AdminCards />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/admin/users\">\n          <AdminUsers />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/admin\" exact>\n          <AdminUsers />\n          <Footer hide={true} />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <AuthPage />\n          <Footer />\n        </Route>\n        <Route path=\"/data-correction/change-of-course-institution\">\n          <ChangeOfCourseInstitutionPage />\n          <Footer />\n        </Route>\n        <Route path=\"/data-correction/result-upload\">\n          <OLevelUploadPage />\n          <Footer />\n        </Route>\n        <Route path=\"/data-correction/jamb-password-reset\">\n          <JambPasswordResetPage />\n          <Footer />\n        </Route>\n        <Route path=\"/data-correction\">\n          <AllServicesPage />\n          <Footer />\n        </Route>\n        <Route path=\"/profile\">\n          <ProfilePage />\n          <Footer />\n        </Route>\n        <Route path=\"/buycards/:id\">\n          <CardPage />\n          <Footer />\n        </Route>\n        <Route path=\"/edititem/:item\">\n          <EditItem />\n          <Footer />\n        </Route>\n        <Route path=\"/payorder/:item/\">\n          <PayOrder />\n          <Footer />\n        </Route>\n        <Route path=\"/auth/activate/:token/\">\n          <ActivateAccount />\n          <Footer />\n        </Route>\n        <Route path=\"/auth/forgotpassword/\">\n          <ForgotPassword />\n          <Footer />\n        </Route>\n        <Route path=\"/auth/resendemail/\">\n          <ResendEmail />\n          <Footer />\n        </Route>\n        <Route path=\"/auth/passwordreset/:token/\">\n          <ResetPassword />\n          <Footer />\n        </Route>\n        <Route path=\"/allcards\">\n          <AllCardsPage />\n          <Footer />\n        </Route>\n        <Route path=\"/unauthorized\">\n          <UnauthorizedPage />\n          <Footer />\n        </Route>\n        <Route>\n          <NotFoundPage />\n          <Footer />\n        </Route>\n\n      </Switch>\n      <ScrollButton />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\"\nimport { drawerToggleReducer, messageReducer } from \"./utilReducers\"\nimport {\n    userListReducer,\n    usersListReducer,\n    userLoginReducer,\n    userRegisterReducer,\n    accountActivateReducer,\n    passwordForgotReducer,\n    passwordResetReducer,\n    emailResendReducer,\n    profilePhotoReducer,\n    userUpdateReducer,\n    photoReducer,\n    walletDebitReducer,\n    walletCreditReducer,\n    userMakeAdminReducer,\n    userMakeEditorReducer,\n    userDeleteReducer,\n    usersEmailReducer,\n    userEmailReducer,\n    userEmailByEmailReducer,\n    userWalletAmountReducer\n} from \"./userReducers\"\n\nimport {\n    reviewListReducer,\n    reviewDetailsReducer,\n    reviewDeleteReducer,\n    reviewCreateReducer,\n    reviewUpdateReducer,\n    reviewDetailsByUserReducer\n} from \"./reviewReducers\"\n\nimport {\n    cardListReducer,\n    cardListFewReducer,\n    cardDetailsReducer,\n    cardDeleteReducer,\n    cardCreateReducer,\n    cardUpdateReducer,\n    cardItemsDeliverReducer,\n    cardAddItemReducer\n} from \"./cardReducers\"\n\nimport {\n    schoolListReducer,\n    schoolDetailsReducer,\n    schoolByProgrammeReducer,\n    schoolCreateReducer,\n    schoolUpdateReducer,\n    courseDeleteReducer\n} from \"./schoolReducers\"\n\nimport {\n    serviceListReducer,\n    serviceDetailsReducer,\n    serviceByNameReducer,\n    serviceCreateReducer,\n    serviceUpdateReducer\n} from \"./serviceReducers\"\n\nimport { subjectListReducer, subjectCreateReducer } from './subjectReducers'\n\nimport { soldCardCreateReducer, cardMyReducer } from \"./soldCardReducers\"\n\nimport {\n    cardOrderCreateReducer,\n    cardOrderDeleteReducer,\n    cardOrderDetailsReducer,\n    cardOrderUpdateReducer,\n    cardOrderPayReducer,\n    cardOrderDeliverReducer,\n    cardOrderListMyReducer,\n    cardOrderListReducer,\n    cardMyOrderNotPaidListReducer\n} from \"./cardOrderReducers\"\n\nimport {\n    changeOfCourseOrderCreateReducer,\n    changeOfCourseOrderDetailsReducer,\n    changeOfCourseOrderUpdateReducer,\n    changeOfCourseOrderListMyReducer,\n    changeOfCourseOrderListReducer,\n    changeOfCourseOrderDeleteReducer,\n    changeOfCourseAdminUploadReducer,\n    changeOfCourseBlobReducer\n} from \"./changeOfCourseReducers\"\n\nimport {\n    oLevelUploadOrderCreateReducer,\n    oLevelUploadOrderDetailsReducer,\n    oLevelUploadOrderUpdateReducer,\n    oLevelUploadOrderListMyReducer,\n    oLevelUploadOrderListReducer,\n    oLevelUploadOrderDeleteReducer,\n    oLevelUploadAdminUploadReducer,\n    oLevelUploadBlobReducer\n} from \"./oLevelResultUploadReducers\"\n\nimport {\n    jambPasswordResetOrderCreateReducer,\n    jambPasswordResetOrderDetailsReducer,\n    jambPasswordResetOrderUpdateReducer,\n    jambPasswordResetOrderListMyReducer,\n    jambPasswordResetOrderListReducer,\n    jambPasswordResetOrderDeleteReducer\n} from \"./jambPasswordResetReducers\"\n\nimport {\n    contactCreateReducer,\n    contactDeleteReducer,\n    contactDetailsReducer,\n    contactListByEmailReducer,\n    contactListReducer,\n} from \"./contactReducers\"\n\nconst reducer = combineReducers({\n    cardList: cardListReducer,\n    cardListFew: cardListFewReducer,\n    cardDetails: cardDetailsReducer,\n    cardDelete: cardDeleteReducer,\n    cardCreate: cardCreateReducer,\n    cardUpdate: cardUpdateReducer,\n    cardItemsDeliver: cardItemsDeliverReducer,\n    cardAddItem: cardAddItemReducer,\n\n    soldCardCreate: soldCardCreateReducer,\n    cardMy: cardMyReducer,\n\n    cardOrderCreate: cardOrderCreateReducer,\n    cardOrderDelete: cardOrderDeleteReducer,\n    cardOrderDetails: cardOrderDetailsReducer,\n    cardOrderUpdate: cardOrderUpdateReducer,\n    cardOrderPay: cardOrderPayReducer,\n    cardOrderDeliver: cardOrderDeliverReducer,\n    cardOrderListMy: cardOrderListMyReducer,\n    cardOrderList: cardOrderListReducer,\n    cardMyOrderNotPaidList: cardMyOrderNotPaidListReducer,\n\n    drawerToggle: drawerToggleReducer,\n    message: messageReducer,\n\n\n    userWalletAmount: userWalletAmountReducer,\n    usersEmail: usersEmailReducer,\n    userEmail: userEmailReducer,\n    userEmailByEmail: userEmailByEmailReducer,\n    userMakeAdmin: userMakeAdminReducer,\n    userMakeEditor: userMakeEditorReducer,\n    userDelete: userDeleteReducer,\n    userList: userListReducer,\n    usersList: usersListReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    accountActivate: accountActivateReducer,\n    passwordForgot: passwordForgotReducer,\n    passwordReset: passwordResetReducer,\n    emailResend: emailResendReducer,\n    profilePhoto: profilePhotoReducer,\n    userUpdate: userUpdateReducer,\n    photo: photoReducer,\n    walletDebit: walletDebitReducer,\n    walletCredit: walletCreditReducer,\n\n    schoolList: schoolListReducer,\n    schoolDetails: schoolDetailsReducer,\n    schoolByProgramme: schoolByProgrammeReducer,\n    schoolCreate: schoolCreateReducer,\n    schoolUpdate: schoolUpdateReducer,\n    courseDelete: courseDeleteReducer,\n\n    serviceList: serviceListReducer,\n    serviceDetails: serviceDetailsReducer,\n    serviceByName: serviceByNameReducer,\n    serviceCreate: serviceCreateReducer,\n    serviceUpdate: serviceUpdateReducer,\n\n    changeOfCourseOrderCreate: changeOfCourseOrderCreateReducer,\n    changeOfCourseOrderDetails: changeOfCourseOrderDetailsReducer,\n    changeOfCourseOrderUpdate: changeOfCourseOrderUpdateReducer,\n    changeOfCourseOrderListMy: changeOfCourseOrderListMyReducer,\n    changeOfCourseOrderList: changeOfCourseOrderListReducer,\n    changeOfCourseOrderDelete: changeOfCourseOrderDeleteReducer,\n    changeOfCourseAdminUpload: changeOfCourseAdminUploadReducer,\n    changeOfCourseBlob: changeOfCourseBlobReducer,\n\n    oLevelUploadOrderCreate: oLevelUploadOrderCreateReducer,\n    oLevelUploadOrderDetails: oLevelUploadOrderDetailsReducer,\n    oLevelUploadOrderUpdate: oLevelUploadOrderUpdateReducer,\n    oLevelUploadOrderListMy: oLevelUploadOrderListMyReducer,\n    oLevelUploadOrderList: oLevelUploadOrderListReducer,\n    oLevelUploadOrderDelete: oLevelUploadOrderDeleteReducer,\n    oLevelUploadAdminUpload: oLevelUploadAdminUploadReducer,\n    oLevelUploadBlob: oLevelUploadBlobReducer,\n\n    jambPasswordResetOrderCreate: jambPasswordResetOrderCreateReducer,\n    jambPasswordResetOrderDetails: jambPasswordResetOrderDetailsReducer,\n    jambPasswordResetOrderUpdate: jambPasswordResetOrderUpdateReducer,\n    jambPasswordResetOrderListMy: jambPasswordResetOrderListMyReducer,\n    jambPasswordResetOrderList: jambPasswordResetOrderListReducer,\n    jambPasswordResetOrderDelete: jambPasswordResetOrderDeleteReducer,\n\n    reviewList: reviewListReducer,\n    reviewDetails: reviewDetailsReducer,\n    reviewDelete: reviewDeleteReducer,\n    reviewCreate: reviewCreateReducer,\n    reviewUpdate: reviewUpdateReducer,\n    reviewDetailsByUser: reviewDetailsByUserReducer,\n\n    contactCreate: contactCreateReducer,\n    contactDelete: contactDeleteReducer,\n    contactDetails: contactDetailsReducer,\n    contactListByEmail: contactListByEmailReducer,\n    contactList: contactListReducer,\n\n    subjectList: subjectListReducer,\n    subjectCreate: subjectCreateReducer\n})\n\nexport default reducer","import {\n  CARD_LIST_REQUEST,\n  CARD_LIST_SUCCESS,\n  CARD_LIST_FAIL,\n  CARD_DETAILS_REQUEST,\n  CARD_DETAILS_SUCCESS,\n  CARD_DETAILS_FAIL,\n  CARD_DELETE_REQUEST,\n  CARD_DELETE_SUCCESS,\n  CARD_DELETE_FAIL,\n  CARD_CREATE_RESET,\n  CARD_CREATE_FAIL,\n  CARD_CREATE_SUCCESS,\n  CARD_CREATE_REQUEST,\n  CARD_UPDATE_REQUEST,\n  CARD_UPDATE_SUCCESS,\n  CARD_UPDATE_FAIL,\n  CARD_UPDATE_RESET,\n  CARD_LIST_FEW_REQUEST,\n  CARD_LIST_FEW_SUCCESS,\n  CARD_LIST_FEW_FAIL,\n  CARD_ITEM_DELIVER_REQUEST,\n  CARD_ITEM_DELIVER_SUCCESS,\n  CARD_ITEM_DELIVER_FAIL,\n  CARD_ADD_ITEM_REQUEST,\n  CARD_ADD_ITEM_SUCCESS,\n  CARD_ADD_ITEM_FAIL,\n} from '../constants/cardConstants'\n\n\nexport const cardListReducer = (state = { cards: [] }, action) => {\n  switch (action.type) {\n    case CARD_LIST_REQUEST:\n      return { loading: true, cards: [] }\n    case CARD_LIST_SUCCESS:\n      return {\n        loading: false,\n        cards: action.payload.cards,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case CARD_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const cardListFewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CARD_LIST_FEW_REQUEST:\n      return { loading: true }\n    case CARD_LIST_FEW_SUCCESS:\n      return {\n        loading: false,\n        cards: action.payload.cards\n      }\n    case CARD_LIST_FEW_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const cardDetailsReducer = (state = { card: { price: 0 } }, action) => {\n  switch (action.type) {\n    case CARD_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case CARD_DETAILS_SUCCESS:\n      return { loading: false, card: action.payload }\n    case CARD_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const cardDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CARD_DELETE_REQUEST:\n      return { loading: true }\n    case CARD_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case CARD_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const cardCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CARD_CREATE_REQUEST:\n      return { loading: true }\n    case CARD_CREATE_SUCCESS:\n      return { loading: false, success: true, card: action.payload }\n    case CARD_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case CARD_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const cardUpdateReducer = (state = { card: {} }, action) => {\n  switch (action.type) {\n    case CARD_UPDATE_REQUEST:\n      return { loading: true }\n    case CARD_UPDATE_SUCCESS:\n      return { loading: false, success: true, card: action.payload }\n    case CARD_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case CARD_UPDATE_RESET:\n      return { card: {} }\n    default:\n      return state\n  }\n}\n\n\nexport const cardAddItemReducer = (state = { card: {} }, action) => {\n  switch (action.type) {\n    case CARD_ADD_ITEM_REQUEST:\n      return {\n        loading: true\n      }\n    case CARD_ADD_ITEM_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        card: action.payload\n      }\n    case CARD_ADD_ITEM_FAIL:\n      return {\n        loading: false, error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const cardItemsDeliverReducer = (state = { card: {} }, action) => {\n  switch (action.type) {\n    case CARD_ITEM_DELIVER_REQUEST:\n      return { loading: true }\n    case CARD_ITEM_DELIVER_SUCCESS:\n      return { loading: false, success: true, purchasedItem: action.payload }\n    case CARD_ITEM_DELIVER_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n","import {\n  SOLD_CARD_CREATE_FAIL,\n  SOLD_CARD_CREATE_REQUEST,\n  SOLD_CARD_CREATE_SUCCESS,\n  CARD_MY_SUCCESS,\n  CARD_MY_REQUEST,\n  CARD_MY_FAIL\n} from \"../constants/soldCardConstants\"\n\n\nexport const soldCardCreateReducer = (state = { card: {} }, action) => {\n  switch (action.type) {\n    case SOLD_CARD_CREATE_REQUEST:\n      return {\n        loading: true\n      }\n    case SOLD_CARD_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        card: action.payload\n      }\n    case SOLD_CARD_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport const cardMyReducer = (state = { cards: [] }, action) => {\n  switch (action.type) {\n    case CARD_MY_REQUEST:\n      return {\n        loading: true\n      }\n    case CARD_MY_SUCCESS:\n      return {\n        cards: action.payload,\n      }\n    case CARD_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {\n    CARD_ORDER_CREATE_RESET,\n    CARD_ORDER_CREATE_FAIL,\n    CARD_ORDER_CREATE_REQUEST,\n    CARD_ORDER_CREATE_SUCCESS,\n    CARD_ORDER_DETAILS_FAIL,\n    CARD_ORDER_DETAILS_REQUEST,\n    CARD_ORDER_DETAILS_SUCCESS,\n    CARD_ORDER_LIST_MY_REQUEST,\n    CARD_ORDER_LIST_MY_SUCCESS,\n    CARD_ORDER_LIST_MY_FAIL,\n    CARD_ORDER_LIST_MY_RESET,\n    CARD_ORDER_PAY_FAIL,\n    CARD_ORDER_PAY_REQUEST,\n    CARD_ORDER_LIST_REQUEST,\n    CARD_ORDER_LIST_SUCCESS,\n    CARD_ORDER_PAY_SUCCESS,\n    CARD_ORDER_LIST_FAIL,\n    CARD_ORDER_PAY_RESET,\n    CARD_ORDER_UPDATE_REQUEST,\n    CARD_ORDER_UPDATE_SUCCESS,\n    CARD_ORDER_UPDATE_FAIL,\n    CARD_ORDER_DELIVER_REQUEST,\n    CARD_ORDER_DELIVER_SUCCESS,\n    CARD_ORDER_DELIVER_FAIL,\n    CARD_NOTPAID_ORDER_LIST_MY_REQUEST,\n    CARD_NOTPAID_ORDER_LIST_MY_SUCCESS,\n    CARD_NOTPAID_ORDER_LIST_MY_FAIL,\n    CARD_ORDER_DELETE_FAIL,\n    CARD_ORDER_DELETE_SUCCESS,\n    CARD_ORDER_DELETE_REQUEST,\n    CARD_ORDER_UPDATE_RESET\n} from \"../constants/cardOrderConstants\"\n\nexport const cardOrderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case CARD_ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case CARD_ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CARD_ORDER_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const cardOrderDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_ORDER_DELETE_REQUEST:\n            return {\n                loading: true\n            }\n        case CARD_ORDER_DELETE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case CARD_ORDER_DELETE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const cardOrderDetailsReducer = (\n    state = { orderItems: [] }, action\n) => {\n    switch (action.type) {\n        case CARD_ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case CARD_ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case CARD_ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const cardOrderUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_ORDER_UPDATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case CARD_ORDER_UPDATE_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload,\n                success: true\n            }\n\n        case CARD_ORDER_UPDATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CARD_ORDER_UPDATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const cardOrderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case CARD_ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case CARD_ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CARD_ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const cardOrderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case CARD_ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case CARD_ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const cardOrderListMyReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case CARD_ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case CARD_ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CARD_ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const cardOrderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case CARD_ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        case CARD_ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case CARD_ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const cardMyOrderNotPaidListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case CARD_NOTPAID_ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case CARD_NOTPAID_ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case CARD_NOTPAID_ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}","import {\n    DRAWER_OPEN,\n    DRAWER_CLOSE,\n    MESSAGE_SET,\n    MESSAGE_RESET\n} from \"../constants/utilConstants\"\n\nexport const drawerToggleReducer = (state = { drawerState: false }, action) => {\n    switch (action.type) {\n        case DRAWER_OPEN:\n            return { drawerState: true }\n\n        case DRAWER_CLOSE:\n            return { drawerState: false }\n\n        default:\n            return state\n    }\n}\n\nexport const messageReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MESSAGE_SET:\n            return {\n                message: action.payload\n            }\n\n        case MESSAGE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_CONFIRM_EMAIL_REQUEST,\n    USER_CONFIRM_EMAIL_SUCCESS,\n    USER_CONFIRM_EMAIL_FAIL,\n    USER_PASSWORD_RESET_REQUEST,\n    USER_PASSWORD_RESET_SUCCESS,\n    USER_PASSWORD_RESET_FAIL,\n    USER_FORGOT_PASSWORD_REQUEST,\n    USER_FORGOT_PASSWORD_SUCCESS,\n    USER_FORGOT_PASSWORD_FAIL,\n    USER_RESEND_CODE_REQUEST,\n    USER_RESEND_CODE_SUCCESS,\n    USER_RESEND_CODE_FAIL,\n    USER_PROFILE_PHOTO_REQUEST,\n    USER_PROFILE_PHOTO_SUCCESS,\n    USER_PROFILE_PHOTO_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    SET_PROFILE_IMAGE,\n    WALLET_DEBIT_REQUEST,\n    WALLET_DEBIT_SUCCESS,\n    WALLET_DEBIT_FAIL,\n    WALLET_DEBIT_RESET,\n    WALLET_CREDIT_REQUEST,\n    WALLET_CREDIT_SUCCESS,\n    WALLET_CREDIT_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USERS_LIST_FAIL,\n    USERS_LIST_SUCCESS,\n    USERS_LIST_REQUEST,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_MAKEADMIN_FAIL,\n    USER_MAKEADMIN_SUCCESS,\n    USER_MAKEADMIN_REQUEST,\n    USER_EMAIL_REQUEST,\n    USER_EMAIL_SUCCESS,\n    USER_EMAIL_FAIL,\n    USERS_EMAIL_REQUEST,\n    USERS_EMAIL_SUCCESS,\n    USERS_EMAIL_FAIL,\n    USER_EMAIL_BY_EMAIL_REQUEST,\n    USER_EMAIL_BY_EMAIL_SUCCESS,\n    USER_EMAIL_BY_EMAIL_FAIL,\n    WALLET_AMOUNT_REQUEST,\n    WALLET_AMOUNT_SUCCESS,\n    WALLET_AMOUNT_FAIL,\n    USER_MAKEEDITOR_REQUEST,\n    USER_MAKEEDITOR_SUCCESS,\n    USER_MAKEEDITOR_FAIL\n} from \"../constants/userConstants\"\n\n\nexport const userWalletAmountReducer = (state = { wallet: 0 }, action) => {\n    switch (action.type) {\n        case WALLET_AMOUNT_REQUEST:\n            return {\n                loading: true\n            }\n\n        case WALLET_AMOUNT_SUCCESS:\n            return {\n                loading: false,\n                wallet: action.payload\n            }\n\n        case WALLET_AMOUNT_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const userEmailByEmailReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_EMAIL_BY_EMAIL_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USER_EMAIL_BY_EMAIL_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                message: action.payload\n            }\n\n        case USER_EMAIL_BY_EMAIL_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userEmailReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_EMAIL_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USER_EMAIL_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                message: action.payload\n            }\n\n        case USER_EMAIL_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const usersEmailReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USERS_EMAIL_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USERS_EMAIL_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                message: action.payload\n            }\n\n        case USERS_EMAIL_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userMakeAdminReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_MAKEADMIN_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USER_MAKEADMIN_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case USER_MAKEADMIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userMakeEditorReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_MAKEEDITOR_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USER_MAKEEDITOR_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case USER_MAKEEDITOR_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USER_DELETE_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case USER_DELETE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const usersListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USERS_LIST_REQUEST:\n            return { loading: true }\n\n        case USERS_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USERS_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                result: action.payload\n            }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                userInfo: action.payload\n            }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const walletDebitReducer = (state = {}, action) => {\n    switch (action.type) {\n        case WALLET_DEBIT_REQUEST:\n            return { loading: true }\n\n        case WALLET_DEBIT_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                userInfo: action.payload\n            }\n\n        case WALLET_DEBIT_FAIL:\n            return { loading: false, error: action.payload }\n\n        case WALLET_DEBIT_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const walletCreditReducer = (state = {}, action) => {\n    switch (action.type) {\n        case WALLET_CREDIT_REQUEST:\n            return { loading: true }\n\n        case WALLET_CREDIT_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                userInfo: action.payload\n            }\n\n        case WALLET_CREDIT_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const accountActivateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_CONFIRM_EMAIL_REQUEST:\n            return { loading: true }\n\n        case USER_CONFIRM_EMAIL_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_CONFIRM_EMAIL_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const emailResendReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_RESEND_CODE_REQUEST:\n            return { loading: true }\n\n        case USER_RESEND_CODE_SUCCESS:\n            return { loading: false, success: true, result: action.payload }\n\n        case USER_RESEND_CODE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const passwordForgotReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_FORGOT_PASSWORD_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USER_FORGOT_PASSWORD_SUCCESS:\n            return {\n                loading: false,\n                result: action.payload,\n                success: true\n            }\n\n        case USER_FORGOT_PASSWORD_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const passwordResetReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case USER_PASSWORD_RESET_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USER_PASSWORD_RESET_SUCCESS:\n            return {\n                loading: false,\n                result: action.payload,\n                success: true\n            }\n\n        case USER_PASSWORD_RESET_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const profilePhotoReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_PROFILE_PHOTO_REQUEST:\n            return {\n                loading: true\n            }\n\n        case USER_PROFILE_PHOTO_SUCCESS:\n            return {\n                loading: false,\n                photoUrl: action.payload,\n                success: true\n            }\n\n        case USER_PROFILE_PHOTO_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const photoReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SET_PROFILE_IMAGE:\n            return {\n                imageUrl: action.payload,\n            }\n\n        default:\n            return state\n    }\n}","import {\n  SCHOOL_LIST_REQUEST,\n  SCHOOL_LIST_SUCCESS,\n  SCHOOL_LIST_FAIL,\n\n  SCHOOL_DETAILS_REQUEST,\n  SCHOOL_DETAILS_SUCCESS,\n  SCHOOL_DETAILS_FAIL,\n\n  SCHOOL_CREATE_REQUEST,\n  SCHOOL_CREATE_SUCCESS,\n  SCHOOL_CREATE_FAIL,\n\n  SCHOOL_UPDATE_REQUEST,\n  SCHOOL_UPDATE_SUCCESS,\n  SCHOOL_UPDATE_FAIL,\n\n  SCHOOL_BY_PROGRAMME_REQUEST,\n  SCHOOL_BY_PROGRAMME_SUCCESS,\n  SCHOOL_BY_PROGRAMME_FAIL,\n  COURSE_DELETE_REQUEST,\n  COURSE_DELETE_SUCCESS,\n  COURSE_DELETE_FAIL\n} from '../constants/schoolConstants'\n\n\nexport const courseDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case COURSE_DELETE_REQUEST:\n      return {\n        loading: true\n      }\n    case COURSE_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      }\n    case COURSE_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const schoolListReducer = (state = { schools: [] }, action) => {\n  switch (action.type) {\n    case SCHOOL_LIST_REQUEST:\n      return { loading: true, schools: [] }\n    case SCHOOL_LIST_SUCCESS:\n      return {\n        loading: false,\n        schools: action.payload\n      }\n    case SCHOOL_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const schoolDetailsReducer = (state = { school: {} }, action) => {\n  switch (action.type) {\n    case SCHOOL_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n    case SCHOOL_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        school: action.payload\n      }\n    case SCHOOL_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const schoolByProgrammeReducer = (state = { schools: [] }, action) => {\n  switch (action.type) {\n    case SCHOOL_BY_PROGRAMME_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n    case SCHOOL_BY_PROGRAMME_SUCCESS:\n      return {\n        loading: false,\n        schools: action.payload\n      }\n    case SCHOOL_BY_PROGRAMME_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const schoolCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SCHOOL_CREATE_REQUEST:\n      return {\n        loading: true\n      }\n    case SCHOOL_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        school: action.payload\n      }\n    case SCHOOL_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport const schoolUpdateReducer = (state = { school: {} }, action) => {\n  switch (action.type) {\n    case SCHOOL_UPDATE_REQUEST:\n      return {\n        loading: true\n      }\n    case SCHOOL_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        school: action.payload\n      }\n    case SCHOOL_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n","import {\n    SERVICE_LIST_REQUEST,\n    SERVICE_LIST_SUCCESS,\n    SERVICE_LIST_FAIL,\n    \n    SERVICE_DETAILS_REQUEST,\n    SERVICE_DETAILS_SUCCESS,\n    SERVICE_DETAILS_FAIL,\n    \n    SERVICE_CREATE_REQUEST,\n    SERVICE_CREATE_SUCCESS,\n    SERVICE_CREATE_FAIL,\n    \n    SERVICE_UPDATE_REQUEST,\n    SERVICE_UPDATE_SUCCESS,\n    SERVICE_UPDATE_FAIL,\n    \n    SERVICE_BY_NAME_REQUEST,\n    SERVICE_BY_NAME_SUCCESS,\n    SERVICE_BY_NAME_FAIL      \n} from '../constants/serviceConstants'\n  \n  export const serviceListReducer = (state = { }, action) => {\n    switch (action.type) {\n      case SERVICE_LIST_REQUEST:\n        return { loading: true }\n      case SERVICE_LIST_SUCCESS:\n        return {\n          loading: false,\n          services: action.payload\n        }\n      case SERVICE_LIST_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n  }\n      \n  export const serviceDetailsReducer = (state = { }, action) => {\n    switch (action.type) {\n      case SERVICE_DETAILS_REQUEST:\n        return { \n                ...state, \n                loading: true \n            }\n      case SERVICE_DETAILS_SUCCESS:\n        return { \n                loading: false, \n                service: action.payload \n            }\n      case SERVICE_DETAILS_FAIL:\n        return { \n                loading: false, \n                error: action.payload \n            }\n      default:\n        return state\n    }\n  }\n  \n  \n  export const serviceByNameReducer = (state = { }, action) => {\n    switch (action.type) {\n      case SERVICE_BY_NAME_REQUEST:\n        return { \n                ...state, \n                loading: true \n            }\n      case SERVICE_BY_NAME_SUCCESS:\n        return { \n                loading: false, \n                service: action.payload \n            }\n      case SERVICE_BY_NAME_FAIL:\n        return { \n                loading: false, \n                error: action.payload \n            }\n      default:\n        return state\n    }\n  }\n  \n  \n  export const serviceCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n      case SERVICE_CREATE_REQUEST:\n        return { \n            loading: true \n        }\n      case SERVICE_CREATE_SUCCESS:\n        return { \n            loading: false, \n            success: true, \n            service: action.payload \n        }\n      case SERVICE_CREATE_FAIL:\n        return { \n            loading: false, \n            error: action.payload \n        }      \n      default:\n        return state\n    }\n  }\n  \n  export const serviceUpdateReducer = (state = { }, action) => {\n    switch (action.type) {\n      case SERVICE_UPDATE_REQUEST:\n        return { \n            loading: true \n        }\n      case SERVICE_UPDATE_SUCCESS:\n        return { \n            loading: false, \n            success: true, \n            service: action.payload \n        }\n      case SERVICE_UPDATE_FAIL:\n        return { \n            loading: false, \n            error: action.payload \n        }      \n      default:\n        return state\n    }\n  }\n  \n ","import {\n    COCI_CREATE_FAIL,\n    COCI_CREATE_REQUEST,\n    COCI_CREATE_SUCCESS,\n    COCI_CREATE_RESET,\n    COCI_DETAILS_FAIL,\n    COCI_DETAILS_REQUEST,\n    COCI_DETAILS_SUCCESS,\n    COCI_LIST_MY_REQUEST,\n    COCI_LIST_MY_SUCCESS,\n    COCI_LIST_MY_FAIL,\n    COCI_LIST_REQUEST,\n    COCI_LIST_SUCCESS,\n    COCI_LIST_FAIL,\n    COCI_UPDATE_REQUEST,\n    COCI_UPDATE_SUCCESS,\n    COCI_UPDATE_FAIL,\n    COCI_ITEM_DELIVER_REQUEST,\n    COCI_ITEM_DELIVER_SUCCESS,\n    COCI_ITEM_DELIVER_FAIL,\n    COCI_DELETE_REQUEST,\n    COCI_DELETE_SUCCESS,\n    COCI_DELETE_FAIL,\n    COCI_BLOB_REQUEST,\n    COCI_BLOB_SUCCESS,\n    COCI_BLOB_FAIL,\n} from \"../constants/changeOfCourseConstants\"\n\n\nexport const changeOfCourseBlobReducer = (state = {}, action) => {\n    switch (action.type) {\n        case COCI_BLOB_REQUEST:\n            return {\n                loading: true\n            }\n        case COCI_BLOB_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                file: action.payload\n            }\n        case COCI_BLOB_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const changeOfCourseAdminUploadReducer = (state = {}, action) => {\n    switch (action.type) {\n        case COCI_ITEM_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n        case COCI_ITEM_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                file: action.payload\n            }\n        case COCI_ITEM_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const changeOfCourseOrderDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case COCI_DELETE_REQUEST:\n            return {\n                loading: true\n            }\n        case COCI_DELETE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case COCI_DELETE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const changeOfCourseOrderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case COCI_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case COCI_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case COCI_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case COCI_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const changeOfCourseOrderDetailsReducer = (\n    state = { lorderItems: [] }, action\n) => {\n    switch (action.type) {\n        case COCI_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case COCI_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case COCI_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const changeOfCourseOrderUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case COCI_UPDATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case COCI_UPDATE_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload,\n                success: true\n            }\n\n        case COCI_UPDATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const changeOfCourseOrderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case COCI_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case COCI_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n\n        case COCI_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const changeOfCourseOrderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case COCI_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        case COCI_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case COCI_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}","import {\n    OLEVEL_UPLOAD_CREATE_FAIL,\n    OLEVEL_UPLOAD_CREATE_REQUEST,\n    OLEVEL_UPLOAD_CREATE_SUCCESS,\n    OLEVEL_UPLOAD_CREATE_RESET,\n    OLEVEL_UPLOAD_DETAILS_FAIL,\n    OLEVEL_UPLOAD_DETAILS_REQUEST,\n    OLEVEL_UPLOAD_DETAILS_SUCCESS,\n    OLEVEL_UPLOAD_LIST_MY_REQUEST,\n    OLEVEL_UPLOAD_LIST_MY_SUCCESS,\n    OLEVEL_UPLOAD_LIST_MY_FAIL,\n    OLEVEL_UPLOAD_LIST_REQUEST,\n    OLEVEL_UPLOAD_LIST_SUCCESS,\n    OLEVEL_UPLOAD_LIST_FAIL,\n    OLEVEL_UPLOAD_UPDATE_REQUEST,\n    OLEVEL_UPLOAD_UPDATE_SUCCESS,\n    OLEVEL_UPLOAD_UPDATE_FAIL,\n    OLEVEL_UPLOAD_ITEM_DELIVER_REQUEST,\n    OLEVEL_UPLOAD_ITEM_DELIVER_SUCCESS,\n    OLEVEL_UPLOAD_ITEM_DELIVER_FAIL,\n    OLEVEL_UPLOAD_DELETE_REQUEST,\n    OLEVEL_UPLOAD_DELETE_SUCCESS,\n    OLEVEL_UPLOAD_DELETE_FAIL,\n    OLEVEL_UPLOAD_BLOB_REQUEST,\n    OLEVEL_UPLOAD_BLOB_SUCCESS,\n    OLEVEL_UPLOAD_BLOB_FAIL,\n} from \"../constants/oLevelResultUploadConstants\"\n\n\nexport const oLevelUploadBlobReducer = (state = {}, action) => {\n    switch (action.type) {\n        case OLEVEL_UPLOAD_BLOB_REQUEST:\n            return {\n                loading: true\n            }\n        case OLEVEL_UPLOAD_BLOB_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                file: action.payload\n            }\n        case OLEVEL_UPLOAD_BLOB_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const oLevelUploadAdminUploadReducer = (state = {}, action) => {\n    switch (action.type) {\n        case OLEVEL_UPLOAD_ITEM_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n        case OLEVEL_UPLOAD_ITEM_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                file: action.payload\n            }\n        case OLEVEL_UPLOAD_ITEM_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const oLevelUploadOrderDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case OLEVEL_UPLOAD_DELETE_REQUEST:\n            return {\n                loading: true\n            }\n        case OLEVEL_UPLOAD_DELETE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case OLEVEL_UPLOAD_DELETE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const oLevelUploadOrderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case OLEVEL_UPLOAD_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case OLEVEL_UPLOAD_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case OLEVEL_UPLOAD_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case OLEVEL_UPLOAD_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const oLevelUploadOrderDetailsReducer = (\n    state = { orderItems: [] }, action\n) => {\n    switch (action.type) {\n        case OLEVEL_UPLOAD_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case OLEVEL_UPLOAD_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case OLEVEL_UPLOAD_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const oLevelUploadOrderUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case OLEVEL_UPLOAD_UPDATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case OLEVEL_UPLOAD_UPDATE_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload,\n                success: true\n            }\n\n        case OLEVEL_UPLOAD_UPDATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const oLevelUploadOrderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case OLEVEL_UPLOAD_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case OLEVEL_UPLOAD_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case OLEVEL_UPLOAD_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const oLevelUploadOrderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case OLEVEL_UPLOAD_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        case OLEVEL_UPLOAD_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case OLEVEL_UPLOAD_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}","import {\n    JAMB_PASSWORD_RESET_CREATE_FAIL,\n    JAMB_PASSWORD_RESET_CREATE_REQUEST,\n    JAMB_PASSWORD_RESET_CREATE_SUCCESS,\n    JAMB_PASSWORD_RESET_DETAILS_FAIL,\n    JAMB_PASSWORD_RESET_DETAILS_REQUEST,\n    JAMB_PASSWORD_RESET_DETAILS_SUCCESS,\n    JAMB_PASSWORD_RESET_LIST_MY_REQUEST,\n    JAMB_PASSWORD_RESET_LIST_MY_SUCCESS,\n    JAMB_PASSWORD_RESET_LIST_MY_FAIL,\n    JAMB_PASSWORD_RESET_LIST_REQUEST,\n    JAMB_PASSWORD_RESET_LIST_SUCCESS,\n    JAMB_PASSWORD_RESET_LIST_FAIL,\n    JAMB_PASSWORD_RESET_UPDATE_REQUEST,\n    JAMB_PASSWORD_RESET_UPDATE_SUCCESS,\n    JAMB_PASSWORD_RESET_UPDATE_FAIL,\n    JAMB_PASSWORD_RESET_CREATE_RESET,\n    JAMB_PASSWORD_RESET_DELETE_REQUEST,\n    JAMB_PASSWORD_RESET_DELETE_SUCCESS,\n    JAMB_PASSWORD_RESET_DELETE_FAIL,\n} from \"../constants/jambPasswordResetConstants\"\n\n\nexport const jambPasswordResetOrderDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case JAMB_PASSWORD_RESET_DELETE_REQUEST:\n            return {\n                loading: true\n            }\n        case JAMB_PASSWORD_RESET_DELETE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case JAMB_PASSWORD_RESET_DELETE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const jambPasswordResetOrderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case JAMB_PASSWORD_RESET_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case JAMB_PASSWORD_RESET_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case JAMB_PASSWORD_RESET_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case JAMB_PASSWORD_RESET_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const jambPasswordResetOrderDetailsReducer = (\n    state = { orderItems: [] }, action\n) => {\n    switch (action.type) {\n        case JAMB_PASSWORD_RESET_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case JAMB_PASSWORD_RESET_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case JAMB_PASSWORD_RESET_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const jambPasswordResetOrderUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case JAMB_PASSWORD_RESET_UPDATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case JAMB_PASSWORD_RESET_UPDATE_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload,\n                success: true\n            }\n\n        case JAMB_PASSWORD_RESET_UPDATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const jambPasswordResetOrderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case JAMB_PASSWORD_RESET_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case JAMB_PASSWORD_RESET_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case JAMB_PASSWORD_RESET_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const jambPasswordResetOrderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case JAMB_PASSWORD_RESET_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        case JAMB_PASSWORD_RESET_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case JAMB_PASSWORD_RESET_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n\n","import {\n  REVIEW_LIST_REQUEST,\n  REVIEW_LIST_SUCCESS,\n  REVIEW_LIST_FAIL,\n  REVIEW_DETAILS_REQUEST,\n  REVIEW_DETAILS_SUCCESS,\n  REVIEW_DETAILS_FAIL,\n  REVIEW_DELETE_REQUEST,\n  REVIEW_DELETE_SUCCESS,\n  REVIEW_DELETE_FAIL,\n  REVIEW_CREATE_RESET,\n  REVIEW_CREATE_FAIL,\n  REVIEW_CREATE_SUCCESS,\n  REVIEW_CREATE_REQUEST,\n  REVIEW_UPDATE_REQUEST,\n  REVIEW_UPDATE_SUCCESS,\n  REVIEW_UPDATE_FAIL,\n  REVIEW_UPDATE_RESET,\n  REVIEW_DETAILS_BY_USER_REQUEST,\n  REVIEW_DETAILS_BY_USER_SUCCESS,\n  REVIEW_DETAILS_BY_USER_FAIL,\n} from '../constants/reviewConstants'\n\n\nexport const reviewListReducer = (state = {}, action) => {\n  switch (action.type) {\n    case REVIEW_LIST_REQUEST:\n      return {\n        loading: true\n      }\n    case REVIEW_LIST_SUCCESS:\n      return {\n        loading: false,\n        reviews: action.payload\n      }\n    case REVIEW_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const reviewDetailsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case REVIEW_DETAILS_REQUEST:\n      return {\n        loading: true\n      }\n    case REVIEW_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        review: action.payload\n      }\n    case REVIEW_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const reviewDetailsByUserReducer = (state = {}, action) => {\n  switch (action.type) {\n    case REVIEW_DETAILS_BY_USER_REQUEST:\n      return {\n        loading: true\n      }\n    case REVIEW_DETAILS_BY_USER_SUCCESS:\n      return {\n        loading: false,\n        review: action.payload\n      }\n    case REVIEW_DETAILS_BY_USER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n\n\nexport const reviewDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case REVIEW_DELETE_REQUEST:\n      return {\n        loading: true\n      }\n    case REVIEW_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      }\n    case REVIEW_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport const reviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case REVIEW_CREATE_REQUEST:\n      return {\n        loading: true\n      }\n    case REVIEW_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        result: action.payload\n      }\n    case REVIEW_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case REVIEW_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const reviewUpdateReducer = (state = { review: {} }, action) => {\n  switch (action.type) {\n    case REVIEW_UPDATE_REQUEST:\n      return {\n        loading: true\n      }\n    case REVIEW_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        review: action.payload\n      }\n    case REVIEW_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case REVIEW_UPDATE_RESET:\n      return {\n        review: {}\n      }\n    default:\n      return state\n  }\n}\n\n","import {\n    CONTACT_CREATE_RESET,\n    CONTACT_CREATE_FAIL,\n    CONTACT_CREATE_REQUEST,\n    CONTACT_CREATE_SUCCESS,\n\n    CONTACT_DETAILS_FAIL,\n    CONTACT_DETAILS_REQUEST,\n    CONTACT_DETAILS_SUCCESS,\n\n\n    CONTACT_LIST_REQUEST,\n    CONTACT_LIST_SUCCESS,\n    CONTACT_LIST_FAIL,\n\n    CONTACT_LIST_BY_EMAIL_REQUEST,\n    CONTACT_LIST_BY_EMAIL_SUCCESS,\n    CONTACT_LIST_BY_EMAIL_FAIL,\n\n    CONTACT_DELETE_SUCCESS,\n    CONTACT_DELETE_FAIL,\n    CONTACT_DELETE_REQUEST\n} from \"../constants/contactConstants\"\n\nexport const contactCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONTACT_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case CONTACT_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                message: action.payload\n            }\n        case CONTACT_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CONTACT_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const contactDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONTACT_DELETE_REQUEST:\n            return {\n                loading: true\n            }\n        case CONTACT_DELETE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case CONTACT_DELETE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const contactDetailsReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case CONTACT_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case CONTACT_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                contact: action.payload\n            }\n\n        case CONTACT_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\n\nexport const contactListByEmailReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONTACT_LIST_BY_EMAIL_REQUEST:\n            return {\n                loading: true\n            }\n\n        case CONTACT_LIST_BY_EMAIL_SUCCESS:\n            return {\n                loading: false,\n                contacts: action.payload\n            }\n\n        case CONTACT_LIST_BY_EMAIL_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const contactListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONTACT_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        case CONTACT_LIST_SUCCESS:\n            return {\n                loading: false,\n                contacts: action.payload\n            }\n\n        case CONTACT_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n","import {\n    SUBJECT_LIST_REQUEST,\n    SUBJECT_LIST_SUCCESS,\n    SUBJECT_LIST_FAIL,\n\n    SUBJECT_CREATE_REQUEST,\n    SUBJECT_CREATE_SUCCESS,\n    SUBJECT_CREATE_FAIL,\n} from '../constants/subjectConstants'\n\nexport const subjectListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SUBJECT_LIST_REQUEST:\n            return { loading: true }\n        case SUBJECT_LIST_SUCCESS:\n            return {\n                loading: false,\n                subjects: action.payload,\n                success: true,\n            }\n        case SUBJECT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const subjectCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SUBJECT_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case SUBJECT_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                subject: action.payload\n            }\n        case SUBJECT_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n","import {createStore, applyMiddleware} from \"redux\"\nimport thunk from \"redux-thunk\"\nimport {composeWithDevTools} from \"redux-devtools-extension\"\n\nimport reducer from \"./reducers/\"\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n? JSON.parse(localStorage.getItem(\"userInfo\")) : null\n\nconst initialState = {\n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer, \n    initialState, \n    composeWithDevTools(\n        applyMiddleware(...middleware)\n    ))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n    \n  </Provider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}